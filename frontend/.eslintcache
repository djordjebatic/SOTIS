[{"/home/milica/Desktop/Master/SOTIS/frontend/src/index.js":"1","/home/milica/Desktop/Master/SOTIS/frontend/src/App.js":"2","/home/milica/Desktop/Master/SOTIS/frontend/src/polyfill.js":"3","/home/milica/Desktop/Master/SOTIS/frontend/src/store.js":"4","/home/milica/Desktop/Master/SOTIS/frontend/src/serviceWorker.js":"5","/home/milica/Desktop/Master/SOTIS/frontend/src/assets/icons/index.js":"6","/home/milica/Desktop/Master/SOTIS/frontend/src/containers/TheLayout.js":"7","/home/milica/Desktop/Master/SOTIS/frontend/src/views/pages/page404/Page404.js":"8","/home/milica/Desktop/Master/SOTIS/frontend/src/views/pages/page500/Page500.js":"9","/home/milica/Desktop/Master/SOTIS/frontend/src/views/pages/LoginAndRegistration/Login/Login.js":"10","/home/milica/Desktop/Master/SOTIS/frontend/src/views/pages/LoginAndRegistration/Registration/Register.js":"11","/home/milica/Desktop/Master/SOTIS/frontend/src/containers/index.js":"12","/home/milica/Desktop/Master/SOTIS/frontend/src/assets/icons/logo-negative.js":"13","/home/milica/Desktop/Master/SOTIS/frontend/src/assets/icons/logo.js":"14","/home/milica/Desktop/Master/SOTIS/frontend/src/assets/icons/sygnet.js":"15","/home/milica/Desktop/Master/SOTIS/frontend/src/containers/TheSidebar.js":"16","/home/milica/Desktop/Master/SOTIS/frontend/src/containers/TheHeaderDropdownTasks.js":"17","/home/milica/Desktop/Master/SOTIS/frontend/src/containers/TheHeaderDropdownNotif.js":"18","/home/milica/Desktop/Master/SOTIS/frontend/src/containers/TheHeaderDropdownMssg.js":"19","/home/milica/Desktop/Master/SOTIS/frontend/src/containers/TheHeaderDropdown.js":"20","/home/milica/Desktop/Master/SOTIS/frontend/src/containers/_navigation.js":"21","/home/milica/Desktop/Master/SOTIS/frontend/src/containers/_nav_professor.js":"22","/home/milica/Desktop/Master/SOTIS/frontend/src/containers/_nav_student.js":"23","/home/milica/Desktop/Master/SOTIS/frontend/src/containers/_nav_admin.js":"24","/home/milica/Desktop/Master/SOTIS/frontend/src/containers/_nav.js":"25","/home/milica/Desktop/Master/SOTIS/frontend/src/containers/TheFooter.js":"26","/home/milica/Desktop/Master/SOTIS/frontend/src/containers/TheHeader.js":"27","/home/milica/Desktop/Master/SOTIS/frontend/src/containers/TheContent.js":"28","/home/milica/Desktop/Master/SOTIS/frontend/src/routes.js":"29","/home/milica/Desktop/Master/SOTIS/frontend/src/views/pages/KnowledgeSpace/KnowledgeSpace.js":"30","/home/milica/Desktop/Master/SOTIS/frontend/src/views/users/User.js":"31","/home/milica/Desktop/Master/SOTIS/frontend/src/views/users/Users.js":"32","/home/milica/Desktop/Master/SOTIS/frontend/src/views/widgets/Widgets.js":"33","/home/milica/Desktop/Master/SOTIS/frontend/src/views/pages/Graph/Graph.js":"34","/home/milica/Desktop/Master/SOTIS/frontend/src/views/charts/Charts.js":"35","/home/milica/Desktop/Master/SOTIS/frontend/src/views/dashboard/Dashboard.js":"36","/home/milica/Desktop/Master/SOTIS/frontend/src/views/notifications/badges/Badges.js":"37","/home/milica/Desktop/Master/SOTIS/frontend/src/views/notifications/alerts/Alerts.js":"38","/home/milica/Desktop/Master/SOTIS/frontend/src/views/notifications/modals/Modals.js":"39","/home/milica/Desktop/Master/SOTIS/frontend/src/views/icons/brands/Brands.js":"40","/home/milica/Desktop/Master/SOTIS/frontend/src/views/icons/flags/Flags.js":"41","/home/milica/Desktop/Master/SOTIS/frontend/src/views/icons/coreui-icons/CoreUIIcons.js":"42","/home/milica/Desktop/Master/SOTIS/frontend/src/views/buttons/buttons/Buttons.js":"43","/home/milica/Desktop/Master/SOTIS/frontend/src/views/buttons/button-dropdowns/ButtonDropdowns.js":"44","/home/milica/Desktop/Master/SOTIS/frontend/src/views/buttons/button-groups/ButtonGroups.js":"45","/home/milica/Desktop/Master/SOTIS/frontend/src/views/buttons/brand-buttons/BrandButtons.js":"46","/home/milica/Desktop/Master/SOTIS/frontend/src/views/base/tooltips/Tooltips.js":"47","/home/milica/Desktop/Master/SOTIS/frontend/src/views/base/tabs/Tabs.js":"48","/home/milica/Desktop/Master/SOTIS/frontend/src/views/base/switches/Switches.js":"49","/home/milica/Desktop/Master/SOTIS/frontend/src/views/base/popovers/Popovers.js":"50","/home/milica/Desktop/Master/SOTIS/frontend/src/views/base/progress-bar/ProgressBar.js":"51","/home/milica/Desktop/Master/SOTIS/frontend/src/views/base/paginations/Pagnations.js":"52","/home/milica/Desktop/Master/SOTIS/frontend/src/views/base/navbars/Navbars.js":"53","/home/milica/Desktop/Master/SOTIS/frontend/src/views/base/navs/Navs.js":"54","/home/milica/Desktop/Master/SOTIS/frontend/src/views/base/list-groups/ListGroups.js":"55","/home/milica/Desktop/Master/SOTIS/frontend/src/views/base/forms/BasicForms.js":"56","/home/milica/Desktop/Master/SOTIS/frontend/src/views/base/collapses/Collapses.js":"57","/home/milica/Desktop/Master/SOTIS/frontend/src/views/base/tables/Tables.js":"58","/home/milica/Desktop/Master/SOTIS/frontend/src/views/base/cards/Cards.js":"59","/home/milica/Desktop/Master/SOTIS/frontend/src/views/notifications/toaster/Toaster.js":"60","/home/milica/Desktop/Master/SOTIS/frontend/src/views/pages/TestPage.js":"61","/home/milica/Desktop/Master/SOTIS/frontend/src/views/pages/TakeTest.js":"62","/home/milica/Desktop/Master/SOTIS/frontend/src/views/pages/TestsPage.js":"63","/home/milica/Desktop/Master/SOTIS/frontend/src/views/pages/NewTest.js":"64","/home/milica/Desktop/Master/SOTIS/frontend/src/views/pages/StudentsPage.js":"65","/home/milica/Desktop/Master/SOTIS/frontend/src/views/widgets/WidgetsBrand.js":"66","/home/milica/Desktop/Master/SOTIS/frontend/src/views/widgets/WidgetsDropdown.js":"67","/home/milica/Desktop/Master/SOTIS/frontend/src/views/charts/MainChartExample.js":"68","/home/milica/Desktop/Master/SOTIS/frontend/src/views/users/UsersData.js":"69","/home/milica/Desktop/Master/SOTIS/frontend/src/views/charts/ChartBarSimple.js":"70","/home/milica/Desktop/Master/SOTIS/frontend/src/views/charts/ChartLineSimple.js":"71","/home/milica/Desktop/Master/SOTIS/frontend/src/views/pages/Graph/graph-config.js":"72","/home/milica/Desktop/Master/SOTIS/frontend/src/reusable/index.js":"73","/home/milica/Desktop/Master/SOTIS/frontend/src/reusable/DocsLink.js":"74","/home/milica/Desktop/Master/SOTIS/frontend/src/views/pages/Profile/Profile.js":"75","/home/milica/Desktop/Master/SOTIS/frontend/src/views/pages/Professors/Professors.js":"76","/home/milica/Desktop/Master/SOTIS/frontend/src/views/pages/Courses/Courses.js":"77","/home/milica/Desktop/Master/SOTIS/frontend/src/views/pages/Courses/CoursePage.js":"78","/home/milica/Desktop/Master/SOTIS/frontend/src/views/pages/Test/ShowTest.js":"79","/home/milica/Desktop/Master/SOTIS/frontend/src/views/pages/Test/StudentTests.js":"80"},{"size":718,"mtime":1608028946137,"results":"81","hashOfConfig":"82"},{"size":1433,"mtime":1608512033925,"results":"83","hashOfConfig":"82"},{"size":1429,"mtime":1608028946137,"results":"84","hashOfConfig":"82"},{"size":324,"mtime":1608028946137,"results":"85","hashOfConfig":"82"},{"size":4686,"mtime":1608028946137,"results":"86","hashOfConfig":"82"},{"size":3813,"mtime":1608028946137,"results":"87","hashOfConfig":"82"},{"size":557,"mtime":1608511276412,"results":"88","hashOfConfig":"82"},{"size":1294,"mtime":1608028946145,"results":"89","hashOfConfig":"82"},{"size":1313,"mtime":1608028946145,"results":"90","hashOfConfig":"82"},{"size":4398,"mtime":1608631670382,"results":"91","hashOfConfig":"82"},{"size":12072,"mtime":1609335876557,"results":"92","hashOfConfig":"82"},{"size":596,"mtime":1608028946137,"results":"93","hashOfConfig":"82"},{"size":6933,"mtime":1608028946137,"results":"94","hashOfConfig":"82"},{"size":6920,"mtime":1608028946137,"results":"95","hashOfConfig":"82"},{"size":978,"mtime":1608028946137,"results":"96","hashOfConfig":"82"},{"size":1841,"mtime":1609301505261,"results":"97","hashOfConfig":"82"},{"size":2253,"mtime":1608028946137,"results":"98","hashOfConfig":"82"},{"size":2543,"mtime":1608028946137,"results":"99","hashOfConfig":"82"},{"size":4788,"mtime":1608028946137,"results":"100","hashOfConfig":"82"},{"size":3130,"mtime":1609335876553,"results":"101","hashOfConfig":"82"},{"size":570,"mtime":1608028946137,"results":"102","hashOfConfig":"82"},{"size":403,"mtime":1609715549098,"results":"103","hashOfConfig":"82"},{"size":408,"mtime":1609721247260,"results":"104","hashOfConfig":"82"},{"size":409,"mtime":1609335876557,"results":"105","hashOfConfig":"82"},{"size":5025,"mtime":1608061234859,"results":"106","hashOfConfig":"82"},{"size":569,"mtime":1608028946137,"results":"107","hashOfConfig":"82"},{"size":3109,"mtime":1609335876553,"results":"108","hashOfConfig":"82"},{"size":1093,"mtime":1609335876553,"results":"109","hashOfConfig":"82"},{"size":6751,"mtime":1609335876557,"results":"110","hashOfConfig":"82"},{"size":7197,"mtime":1609723075328,"results":"111","hashOfConfig":"82"},{"size":1200,"mtime":1608028946145,"results":"112","hashOfConfig":"82"},{"size":2132,"mtime":1608028946145,"results":"113","hashOfConfig":"82"},{"size":12301,"mtime":1608028946145,"results":"114","hashOfConfig":"82"},{"size":27017,"mtime":1609724809667,"results":"115","hashOfConfig":"82"},{"size":5779,"mtime":1608028946141,"results":"116","hashOfConfig":"82"},{"size":23856,"mtime":1608028946141,"results":"117","hashOfConfig":"82"},{"size":3605,"mtime":1608028946141,"results":"118","hashOfConfig":"82"},{"size":5910,"mtime":1608028946141,"results":"119","hashOfConfig":"82"},{"size":10997,"mtime":1608028946141,"results":"120","hashOfConfig":"82"},{"size":963,"mtime":1608028946141,"results":"121","hashOfConfig":"82"},{"size":590,"mtime":1608028946141,"results":"122","hashOfConfig":"82"},{"size":606,"mtime":1608028946141,"results":"123","hashOfConfig":"82"},{"size":33216,"mtime":1608028946141,"results":"124","hashOfConfig":"82"},{"size":16489,"mtime":1608028946141,"results":"125","hashOfConfig":"82"},{"size":6169,"mtime":1608028946141,"results":"126","hashOfConfig":"82"},{"size":13855,"mtime":1608028946141,"results":"127","hashOfConfig":"82"},{"size":2717,"mtime":1608028946141,"results":"128","hashOfConfig":"82"},{"size":5618,"mtime":1608028946141,"results":"129","hashOfConfig":"82"},{"size":24660,"mtime":1608028946141,"results":"130","hashOfConfig":"82"},{"size":2910,"mtime":1608028946141,"results":"131","hashOfConfig":"82"},{"size":2970,"mtime":1608028946141,"results":"132","hashOfConfig":"82"},{"size":2166,"mtime":1608028946141,"results":"133","hashOfConfig":"82"},{"size":5774,"mtime":1608028946141,"results":"134","hashOfConfig":"82"},{"size":9425,"mtime":1608028946141,"results":"135","hashOfConfig":"82"},{"size":12862,"mtime":1608028946141,"results":"136","hashOfConfig":"82"},{"size":51528,"mtime":1608028946137,"results":"137","hashOfConfig":"82"},{"size":9261,"mtime":1608028946137,"results":"138","hashOfConfig":"82"},{"size":5048,"mtime":1608028946141,"results":"139","hashOfConfig":"82"},{"size":18183,"mtime":1608028946137,"results":"140","hashOfConfig":"82"},{"size":5328,"mtime":1608028946141,"results":"141","hashOfConfig":"82"},{"size":4079,"mtime":1609335876561,"results":"142","hashOfConfig":"82"},{"size":4910,"mtime":1609335876561,"results":"143","hashOfConfig":"82"},{"size":6934,"mtime":1609715549098,"results":"144","hashOfConfig":"82"},{"size":12781,"mtime":1609715549098,"results":"145","hashOfConfig":"82"},{"size":2295,"mtime":1609335876561,"results":"146","hashOfConfig":"82"},{"size":4031,"mtime":1608028946145,"results":"147","hashOfConfig":"82"},{"size":4776,"mtime":1608028946145,"results":"148","hashOfConfig":"82"},{"size":2486,"mtime":1608028946141,"results":"149","hashOfConfig":"82"},{"size":2442,"mtime":1608028946145,"results":"150","hashOfConfig":"82"},{"size":1545,"mtime":1608028946141,"results":"151","hashOfConfig":"82"},{"size":3294,"mtime":1608028946141,"results":"152","hashOfConfig":"82"},{"size":4049,"mtime":1609169618748,"results":"153","hashOfConfig":"82"},{"size":56,"mtime":1608028946137,"results":"154","hashOfConfig":"82"},{"size":581,"mtime":1608028946137,"results":"155","hashOfConfig":"82"},{"size":2728,"mtime":1609335876561,"results":"156","hashOfConfig":"82"},{"size":14643,"mtime":1609335876561,"results":"157","hashOfConfig":"82"},{"size":6833,"mtime":1609723110092,"results":"158","hashOfConfig":"82"},{"size":19454,"mtime":1609715549098,"results":"159","hashOfConfig":"82"},{"size":16640,"mtime":1609723066664,"results":"160","hashOfConfig":"82"},{"size":4082,"mtime":1609723040580,"results":"161","hashOfConfig":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},"11drydk",{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"164"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"164"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"164"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"164"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"164"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"164"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"164"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"164"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"164"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"164"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"164"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"164"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"164"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/milica/Desktop/Master/SOTIS/frontend/src/index.js",[],["336","337"],"/home/milica/Desktop/Master/SOTIS/frontend/src/App.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/polyfill.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/store.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/serviceWorker.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/assets/icons/index.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/containers/TheLayout.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/pages/page404/Page404.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/pages/page500/Page500.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/pages/LoginAndRegistration/Login/Login.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/pages/LoginAndRegistration/Registration/Register.js",["338","339","340","341","342","343","344","345","346","347","348","349","350"],"import './Register.css'\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCol,\n  CContainer,\n  CForm,\n  CFormGroup,\n  CFormText,\n  CInput,\n  CLabel,\n  CLink,\n  CRow\n} from '@coreui/react'\nimport { NotificationManager, NotificationContainer } from 'react-notifications';\nimport { withRouter } from 'react-router-dom';\n\nimport 'react-notifications/lib/notifications.css';\n\nconst url = (process.env.REACT_APP_DOMAIN) + ':' + (process.env.REACT_APP_PORT) + '/';\n\nconst emailRegex = RegExp(\n  /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n);\n\nconst phoneRegex = RegExp(\n  /06[0-9]{7,8}$/\n);\n\nconst capitalLetterRegex = RegExp(\n  /^([A-Z][a-z]+)+$/\n);\n\nconst medicalNumberRegex = RegExp(\n  /[0-9]{9,10}$/\n);\n\nconst formValid = ({ formErrors, ...rest }) => {\n  let valid = true;\n\n  // validate form errors being empty\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n\n  // validate the form was filled out\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n\n  return valid;\n};\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.SendRegisterRequest = this.SendRegisterRequest.bind(this);\n\n    this.state = {\n      username: '',\n      password: '',\n      email: '',\n      firstName: '',\n      lastName: '',\n      studentId: '',\n      passwordConfirm: '',\n      formErrors: {\n        username: '',\n        password: '',\n        email: '',\n        firstName: '',\n        lastName: '',\n        studentId: '',\n        passwordConfirm: ''\n      },\n      disableSubmit: true\n    }\n  }\n\n  SendRegisterRequest = event => {\n    event.preventDefault();\n    console.log(this.state);\n    const { password, passwordConfirm } = this.state;\n    if (password !== passwordConfirm) {\n      alert(\"Passwords don't match\");\n    } else {\n      axios.post(url + 'register', {\n        username: this.state.username,\n        password: this.state.password,\n        email: this.state.email,\n        name: this.state.firstName,\n        last_name: this.state.lastName,\n        student_id: this.state.studentId\n      }\n      ).then((resp) => {\n        NotificationManager.success('Registered successfuly. Please log in', 'Success!', 4000);\n        this.props.history.push('/login');\n      }\n      )\n        .catch((error) => NotificationManager.error('Wrong input', 'Error!', 4000))\n    }\n  }\n\n  handleKeyUp = () => {\n    var empty = true;\n\n    Object.keys(this.state.formErrors).forEach(e => {\n      if (this.state.formErrors[e] != \"\") {\n        empty = false;\n      }\n    });\n\n    if (!empty) {\n      this.setState({ disableSumbit: true });\n      console.log('disabled');\n    }\n    else {\n\n      if (this.state.email != \"\" && this.state.firstName != \"\" && this.state.lastName != \"\"\n        && this.state.studentId != \"\" && this.state.password != \"\" && this.state.passwordConfirm != \"\"\n        && this.state.email != \"\" && this.state.username != \"\"\n      ) {\n        this.setState({ disableSumbit: false });\n        console.log('enabled');\n      }\n      else {\n        this.setState({ disableSumbit: true });\n        console.log('disabled');\n      }\n    }\n  }\n\n  isEmpty = (obj) => {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key))\n        return false;\n    }\n    return true;\n  }\n\n  /*handleChange(e) {\n      this.setState({...this.state, [e.target.name]: e.target.value});\n  }*/\n\n  handleChange = e => {\n    e.preventDefault();\n    const { name, value } = e.target;\n    let formErrors = { ...this.state.formErrors };\n\n    switch (name) {\n      case \"username\":\n        formErrors.username =\n          value.length < 3 ? \"Minimum 3 characaters required\" : \"\";\n        break;\n      case \"firstName\":\n        formErrors.firstName = capitalLetterRegex.test(value)\n          ? \"\"\n          : \"First name must start with a capital letter\";\n\n        if (formErrors.firstName === \"\") {\n          formErrors.firstName =\n            value.length < 3 ? \"Minimum 3 characaters required\" : \"\";\n        }\n        break;\n      case \"lastName\":\n        formErrors.lastName = capitalLetterRegex.test(value)\n          ? \"\"\n          : \"Last name must start with a capital letter\";\n\n        if (formErrors.lastName === \"\") {\n          formErrors.lastName =\n            value.length < 3 ? \"Minimum 3 characaters required\" : \"\";\n        }\n        break;\n      case \"email\":\n        formErrors.email = emailRegex.test(value)\n          ? \"\"\n          : \"Invalid email address\";\n        break;\n      case \"studentId\":\n        formErrors.studentId =\n          value.length < 3 ? \"Minimum 3 characaters required\" : \"\";\n        break;\n      case \"password\":\n        formErrors.password =\n          value.length < 8 ? \"Minimum 8 characaters required\" : \"\";\n        break;\n      case \"passwordConfirm\":\n        formErrors.passwordConfirm =\n          value.length < 8 ? \"Minimum 8 characaters required\" : \"\";\n        break;\n      default:\n        break;\n    }\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\n\n    this.handleKeyUp();\n  }\n\n  render() {\n    const { formErrors } = this.state;\n    return (\n      <div className=\"c-app c-default-layout flex-row align-items-center\">\n        <CContainer>\n          <CRow className=\"justify-content-center\">\n            <CCol md=\"9\" lg=\"7\" xl=\"6\">\n              <CCard className=\"mx-4\">\n                <CCardBody className=\"p-4\">\n                  <div className=\"col-4 welcome\">\n                    <div className=\"logo\">\n                      <h1 className=\"title\"></h1>\n                    </div>\n                  </div>\n                  <CForm onSubmit={this.SendRegisterRequest}>\n                    <CFormGroup>\n                      <h1>Register</h1>\n                      <p className=\"text-muted\">Create your account</p>\n                      <CLabel htmlFor=\"username\">Username</CLabel>\n                      <CInput type=\"text\"\n                        onKeyUp={this.handleKeyUp}\n                        className={formErrors.username.length > 0 ? \"error\" : null}\n                        id=\"username\"\n                        name=\"username\"\n                        noValidate\n                        onChange={this.handleChange}\n                        placeholder=\"Enter Username\"\n                      />\n                      {formErrors.username.length > 0 && (\n                        <CFormText className=\"help-block\"><p style={{ color: \"red\" }}>{formErrors.username}</p></CFormText>\n                      )}\n                    </CFormGroup>\n\n                    <CFormGroup>\n                      <CLabel htmlFor=\"firstName\">First Name</CLabel>\n                      <CInput type=\"text\"\n                        onKeyUp={this.handleKeyUp}\n                        className={formErrors.firstName.length > 0 ? \"error\" : null}\n                        id=\"firstName\"\n                        name=\"firstName\"\n                        noValidate\n                        onChange={this.handleChange}\n                        placeholder=\"Enter first name\"\n                      />\n                      {formErrors.firstName.length > 0 && (\n                        <CFormText className=\"help-block\"><p style={{ color: \"red\" }}>{formErrors.firstName}</p></CFormText>\n                      )}\n                    </CFormGroup>\n\n                    <CFormGroup>\n                      <CLabel htmlFor=\"lastName\">Last Name</CLabel>\n                      <CInput type=\"text\"\n                        onKeyUp={this.handleKeyUp}\n                        className={formErrors.lastName.length > 0 ? \"error\" : null}\n                        id=\"lastName\"\n                        name=\"lastName\"\n                        onChange={this.handleChange}\n                        placeholder=\"Enter last name\"\n                        noValidate\n                      />\n                      {formErrors.lastName.length > 0 && (\n                        <CFormText className=\"help-block\"><p style={{ color: \"red\" }}>{formErrors.lastName}</p></CFormText>\n                      )}\n                    </CFormGroup>\n\n                    <CFormGroup>\n                      <CLabel htmlFor=\"email\">Email Address</CLabel>\n                      <CInput type=\"email\"\n                        onKeyUp={this.handleKeyUp}\n                        className={formErrors.email.length > 0 ? \"error\" : null}\n                        id=\"email\"\n                        name=\"email\"\n                        onChange={this.handleChange}\n                        placeholder=\"Enter email address\"\n                        noValidate\n                      />\n                      {formErrors.email.length > 0 && (\n                        <CFormText className=\"help-block\"><p style={{ color: \"red\" }}>{formErrors.email}</p></CFormText>\n                      )}\n                    </CFormGroup>\n\n                    <CFormGroup>\n                      <CLabel htmlFor=\"studentId\">StudentId</CLabel>\n                      <CInput type=\"number\"\n                        onKeyUp={this.handleKeyUp}\n                        className={formErrors.studentId.length > 0 ? \"error\" : null}\n                        id=\"studentId\"\n                        name=\"studentId\"\n                        onChange={this.handleChange}\n                        placeholder=\"Enter Student Id\"\n                        noValidate\n                      />\n                      {formErrors.studentId.length > 0 && (\n                        <CFormText className=\"help-block\"><p style={{ color: \"red\" }}>{formErrors.studentId}</p></CFormText>\n                      )}\n                    </CFormGroup>\n\n                    <CFormGroup>\n                      <CLabel htmlFor=\"password\">Password</CLabel>\n                      <CInput type=\"password\"\n                        onKeyUp={this.handleKeyUp}\n                        className={formErrors.password.length > 0 ? \"error\" : null}\n                        id=\"password\"\n                        name=\"password\"\n                        onChange={this.handleChange}\n                        placeholder=\"Enter password\"\n                        noValidate\n                      />\n                      {formErrors.password.length > 0 && (\n                        <CFormText className=\"help-block\"><p style={{ color: \"red\" }}>{formErrors.password}</p></CFormText>\n                      )}\n                    </CFormGroup>\n\n                    <CFormGroup>\n                      <CLabel htmlFor=\"passwordConfirm\">Confirm Password</CLabel>\n                      <CInput type=\"password\"\n                        onKeyUp={this.handleKeyUp}\n                        className={formErrors.passwordConfirm.length > 0 ? \"error\" : null}\n                        id=\"passwordConfirm\"\n                        name=\"passwordConfirm\"\n                        onChange={this.handleChange}\n                        placeholder=\"Confirm password\"\n                        noValidate\n                      />\n                      {formErrors.passwordConfirm.length > 0 && (\n                        <CFormText className=\"help-block\"><p style={{ color: \"red\" }}>{formErrors.passwordConfirm}</p></CFormText>\n                      )}\n                    </CFormGroup>\n\n                    <CButton disabled={this.state.disableSumbit} className=\"register\" type=\"submit\" color=\"success\" block>Create Account</CButton>\n                  </CForm>\n                </CCardBody>\n                <CCardFooter className=\"p-4\">\n                  <CRow>\n                    <CCol xs=\"12\" className=\"text-right\">\n                      <CLink to=\"/login\">Already have an account?</CLink>\n                    </CCol>\n                  </CRow>\n                </CCardFooter>\n              </CCard>\n            </CCol>\n          </CRow>\n        </CContainer>\n        <div className=\"row register-form\">\n        </div>\n        <NotificationContainer />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Register);","/home/milica/Desktop/Master/SOTIS/frontend/src/containers/index.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/assets/icons/logo-negative.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/assets/icons/logo.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/assets/icons/sygnet.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/containers/TheSidebar.js",["351"],"import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CCreateElement,\n  CSidebar,\n  CSidebarBrand,\n  CSidebarNav,\n  CSidebarNavDivider,\n  CSidebarNavTitle,\n  CSidebarMinimizer,\n  CSidebarNavDropdown,\n  CSidebarNavItem,\n} from '@coreui/react'\n\nimport CIcon from '@coreui/icons-react'\n\n// sidebar nav config\nimport templateNavigation from './_nav'\nimport adminNavigation from './_nav_admin';\nimport professorNavigation from './_nav_professor';\nimport studentNavigation from './_nav_student';\nimport navigation from './_navigation';\n\n\nconst nav = () => {\n  if (localStorage.getItem(\"role\") === \"ROLE_ADMIN\") {\n    return adminNavigation;\n  }else if (localStorage.getItem(\"role\") === \"ROLE_PROFESSOR\") {\n    return professorNavigation;\n  }else if (localStorage.getItem(\"role\") === \"ROLE_STUDENT\") {\n    return studentNavigation;\n  } else {\n    return navigation;\n  }\n}\n\nconst TheSidebar = () => {\n  const dispatch = useDispatch()\n  const show = useSelector(state => state.sidebarShow)\n\n  return (\n    <CSidebar\n      show={show}\n      onShowChange={(val) => dispatch({type: 'set', sidebarShow: val })}\n    >\n      <CSidebarBrand className=\"d-md-down-none\" to=\"/\">\n        <CIcon\n          className=\"c-sidebar-brand-full\"\n          name=\"logo-negative\"\n          height={35}\n        />\n        <CIcon\n          className=\"c-sidebar-brand-minimized\"\n          name=\"sygnet\"\n          height={35}\n        />\n      </CSidebarBrand>\n      <CSidebarNav>\n\n        <CCreateElement\n          items={nav()}\n          components={{\n            CSidebarNavDivider,\n            CSidebarNavDropdown,\n            CSidebarNavItem,\n            CSidebarNavTitle\n          }}\n        />\n      </CSidebarNav>\n      <CSidebarMinimizer className=\"c-d-md-down-none\"/>\n    </CSidebar>\n  )\n}\n\nexport default React.memo(TheSidebar)\n","/home/milica/Desktop/Master/SOTIS/frontend/src/containers/TheHeaderDropdownTasks.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/containers/TheHeaderDropdownNotif.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/containers/TheHeaderDropdownMssg.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/containers/TheHeaderDropdown.js",["352","353","354"],"import React from 'react'\nimport {\n  CBadge,\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CImg\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nconst TheHeaderDropdown = () => {\n  return (\n    <CDropdown\n      inNav\n      className=\"c-header-nav-items mx-2\"\n      direction=\"down\"\n    >\n      <CDropdownToggle className=\"c-header-nav-link\" caret={false}>\n        <div className=\"c-avatar\">\n          <CImg\n            src={'avatars/6.jpg'}\n            className=\"c-avatar-img\"\n            alt=\"admin@bootstrapmaster.com\"\n          />\n        </div>\n      </CDropdownToggle>\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n        <CDropdownItem\n          header\n          tag=\"div\"\n          color=\"light\"\n          className=\"text-center\"\n        >\n          <strong>Account</strong>\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon name=\"cil-bell\" className=\"mfe-2\" /> \n          Updates\n          <CBadge color=\"info\" className=\"mfs-auto\">42</CBadge>\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon name=\"cil-envelope-open\" className=\"mfe-2\" /> \n          Messages\n          <CBadge color=\"success\" className=\"mfs-auto\">42</CBadge>\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon name=\"cil-task\" className=\"mfe-2\" /> \n          Tasks\n          <CBadge color=\"danger\" className=\"mfs-auto\">42</CBadge>\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon name=\"cil-comment-square\" className=\"mfe-2\" /> \n          Comments\n          <CBadge color=\"warning\" className=\"mfs-auto\">42</CBadge>\n        </CDropdownItem>\n        <CDropdownItem\n          header\n          tag=\"div\"\n          color=\"light\"\n          className=\"text-center\"\n        >\n          <strong>Settings</strong>\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon name=\"cil-user\" className=\"mfe-2\" />Profile\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon name=\"cil-settings\" className=\"mfe-2\" /> \n          Settings\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon name=\"cil-credit-card\" className=\"mfe-2\" /> \n          Payments\n          <CBadge color=\"secondary\" className=\"mfs-auto\">42</CBadge>\n        </CDropdownItem>\n        <CDropdownItem>\n          <CIcon name=\"cil-file\" className=\"mfe-2\" /> \n          Projects\n          <CBadge color=\"primary\" className=\"mfs-auto\">42</CBadge>\n        </CDropdownItem>\n        <CDropdownItem divider />\n        <CDropdownItem>\n          <CIcon name=\"cil-lock-locked\" className=\"mfe-2\" /> \n          Lock Account\n        </CDropdownItem>\n      </CDropdownMenu>\n    </CDropdown>\n  )\n}\n\nexport default TheHeaderDropdown\n","/home/milica/Desktop/Master/SOTIS/frontend/src/containers/_navigation.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/containers/_nav_professor.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/containers/_nav_student.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/containers/_nav_admin.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/containers/_nav.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/containers/TheFooter.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/containers/TheHeader.js",["355","356","357","358","359","360","361","362"],"import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from \"react-router-dom\";\nimport {\n  CHeader,\n  CToggler,\n  CHeaderBrand,\n  CHeaderNav,\n  CHeaderNavItem,\n  CHeaderNavLink,\n  CSubheader,\n  CBreadcrumbRouter,\n  CLink,\n  CButton\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\n// routes config\nimport routes from '../routes'\nimport axios from 'axios'\n\nimport { \n  TheHeaderDropdown,\n  TheHeaderDropdownMssg,\n  TheHeaderDropdownNotif,\n  TheHeaderDropdownTasks\n}  from './index'\n\nconst url = (process.env.REACT_APP_DOMAIN) + ':' + (process.env.REACT_APP_PORT) + '/';\n\nconst TheHeader = () => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector(state => state.sidebarShow)\n\n  const toggleSidebar = () => {\n    const val = [true, 'responsive'].includes(sidebarShow) ? false : 'responsive'\n    dispatch({type: 'set', sidebarShow: val})\n  }\n\n  const toggleSidebarMobile = () => {\n    const val = [false, 'responsive'].includes(sidebarShow) ? true : 'responsive'\n    dispatch({type: 'set', sidebarShow: val})\n  }\n\n  const history = useHistory();\n\nconst logOut = () => {\n      axios({\n            method: 'post',\n            url: url + 'logout',\n           // headers: { \"Authorization\": AuthStr } ,   \n        }).then((response) => {\n    localStorage.removeItem(\"loggedInUser\");\n    localStorage.removeItem(\"role\");\n    history.push('/login');        }, (error) => {\n            console.log(error);\n        });\n\n  }\n\n  return (\n    <CHeader withSubheader>\n      <CToggler\n        inHeader\n        className=\"ml-md-3 d-lg-none\"\n        onClick={toggleSidebarMobile}\n      />\n      <CToggler\n        inHeader\n        className=\"ml-3 d-md-down-none\"\n        onClick={toggleSidebar}\n      />\n      <CHeaderBrand className=\"mx-auto d-lg-none\" to=\"/\">\n        <CIcon name=\"logo\" height=\"48\" alt=\"Logo\"/>\n      </CHeaderBrand>\n\n      <CHeaderNav className=\"d-md-down-none mr-auto\">\n        <CHeaderNavItem className=\"px-3\" >\n          <CHeaderNavLink to=\"/tests\">Tests</CHeaderNavLink>\n        </CHeaderNavItem>\n        </CHeaderNav>\n          <div className=\"d-md-down-none mfe-2 c-subheader-nav\">\n            <CButton className=\"c-subheader-nav-link\" href=\"#\" onClick ={e => logOut()}>\n              <CIcon name=\"cil-account-logout\" alt=\"Settings\" />&nbsp;Logout\n            </CButton>\n          </div>\n        {/*\n        <CHeaderNavItem  className=\"px-3\">\n          <CHeaderNavLink to=\"/users\">Users</CHeaderNavLink>\n        </CHeaderNavItem>\n        <CHeaderNavItem className=\"px-3\">\n          <CHeaderNavLink>Settings</CHeaderNavLink>\n        </CHeaderNavItem>\n      </CHeaderNav>\n\n      <CHeaderNav className=\"px-3\">\n        <TheHeaderDropdownNotif/>\n        <TheHeaderDropdownTasks/>\n        <TheHeaderDropdownMssg/>\n        <TheHeaderDropdown/>\n      </CHeaderNav>\n*/}\n      <CSubheader className=\"px-3 justify-content-between\">\n        <CBreadcrumbRouter \n          className=\"border-0 c-subheader-nav m-0 px-0 px-md-3\" \n          routes={routes} \n        />\n        {/*\n          <div className=\"d-md-down-none mfe-2 c-subheader-nav\">\n            <CLink className=\"c-subheader-nav-link\"href=\"#\">\n              <CIcon name=\"cil-speech\" alt=\"Settings\" />\n            </CLink>\n            <CLink \n              className=\"c-subheader-nav-link\" \n              aria-current=\"page\" \n              to=\"/dashboard\"\n            >\n              <CIcon name=\"cil-graph\" alt=\"Dashboard\" />&nbsp;Dashboard\n            </CLink>\n            <CLink className=\"c-subheader-nav-link\" href=\"#\">\n              <CIcon name=\"cil-settings\" alt=\"Settings\" />&nbsp;Settings\n            </CLink>\n          </div>\n        */}\n      </CSubheader>\n    </CHeader>\n  )\n}\n\nexport default TheHeader\n","/home/milica/Desktop/Master/SOTIS/frontend/src/containers/TheContent.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/routes.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/pages/KnowledgeSpace/KnowledgeSpace.js",["363","364","365"],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/users/User.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/users/Users.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/widgets/Widgets.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/pages/Graph/Graph.js",["366","367","368","369","370","371","372","373","374","375","376"],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/charts/Charts.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/dashboard/Dashboard.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/notifications/badges/Badges.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/notifications/alerts/Alerts.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/notifications/modals/Modals.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/icons/brands/Brands.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/icons/flags/Flags.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/icons/coreui-icons/CoreUIIcons.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/buttons/buttons/Buttons.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/buttons/button-dropdowns/ButtonDropdowns.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/buttons/button-groups/ButtonGroups.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/buttons/brand-buttons/BrandButtons.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/base/tooltips/Tooltips.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/base/tabs/Tabs.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/base/switches/Switches.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/base/popovers/Popovers.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/base/progress-bar/ProgressBar.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/base/paginations/Pagnations.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/base/navbars/Navbars.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/base/navs/Navs.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/base/list-groups/ListGroups.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/base/forms/BasicForms.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/base/collapses/Collapses.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/base/tables/Tables.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/base/cards/Cards.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/notifications/toaster/Toaster.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/pages/TestPage.js",["377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395"],"import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport {\n  CRow,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardFooter,\n  CLabel,\n  CInput,\n  CButton,\n  CCollapse,\n  CContainer,\n  CCol,\n  CDataTable,\n  CFade,\n  CLink,\n  CFormGroup,\n  CInputCheckbox\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport { RoleAwareComponent } from 'react-router-role-authorization'\nimport {Redirect} from 'react-router-dom'\n\nconst url = (process.env.REACT_APP_DOMAIN) + ':' + (process.env.REACT_APP_PORT) + '/';\n\nconst fields = ['Question','Answer', 'Checked', 'Correct answer', 'Score']\nconst role = localStorage.getItem(\"role\")\n\nclass TestPage extends RoleAwareComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      test: {\n        title: \"\",\n        test_questions: [{\n            title:\"\",\n            test_question_answers:[]\n        }]\n    },\n      testTake: {\n          title: \"\",\n          test_questions: [{\n              title:\"\",\n              test_question_answers:[]\n          }]\n      },\n    };\n\n    let arr = [];\n    arr.push(localStorage.getItem('role'));\n    this.userRoles = arr;\n    this.allowedRoles = ['ROLE_PROFESSOR', 'ROLE_STUDENT'];\n\n\n    this.getTestTakeAnswer = this.getTestTake.bind(this)\n    this.getChecked = this.getChecked.bind(this)\n  }\n\n  componentDidMount() {\n    this.getTestTake()\n  }\n\n\n  getTestTake(){\n    const { id } = this.props.match.params;\n    axios({\n      method: 'get',\n      url: url + 'test_take/' + id,\n    }).then((response) => {\n      this.setState({ testTake: response.data.test_take, test:response.data.test })\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  getChecked(question, answer){\n    var find = this.state.testTake.test_take_answers.filter(function(result) {\n      return result.test_question_id === question && result.test_question_answer_id === answer;\n    });\n    \n    return find[0].selected;\n  }\n\n  render() {\n    let ret =  (\n      <div>\n        <CCardHeader style={{backgroundColor:\"whitesmoke\"}}>\n            <h2>{this.state.test.title}</h2>\n        </CCardHeader>\n          <table responsive style={{border:\"1px solid black\", width: \"100%\", backgroundColor:\"whitesmoke\"}}>\n          <thead style={{textAlign:\"center\"}}>\n            <th><h3>Question</h3></th>            \n            <th><h3>Answer</h3></th>\n            <th><h3>Checked</h3></th>\n            <th><h3>Correct answer</h3></th>\n            <th ><h3>Score</h3></th>\n          </thead>\n          <tbody>\n          {(this.state.test.test_questions).map((question, index) =>\n          <>\n                  <tr style={{borderTop:\"2px solid black\"}}>\n                    <td><h4>{index + 1}. {question.title}</h4></td>\n                    <td></td>\n                    <td></td>\n                    <td></td>\n                    <td style={{textAlign:\"center\"}}>7</td>\n                  </tr>\n                  <>\n                  {(question.test_question_answers).map((answer, indexA) =>\n                          <tr >\n                          <td></td>\n                          <td style={{textAlign:\"center\"}} >{indexA}. {answer.title}</td>\n                          <td style={{textAlign:\"center\"}}> <input type=\"checkbox\" checked={this.getChecked(question.id, answer.id)}></input></td>\n                          <td style={{textAlign:\"center\"}}> <input type=\"checkbox\" checked={answer.isCorrect}></input></td>\n                          <td style={{textAlign:\"center\"}}>1</td>\n                        </tr>\n                        )}\n                        </>\n                  </>\n                )}\n                <tr style={{borderTop:\"2px solid black\"}}>\n                    <td><h4>Total score</h4></td>\n                    <td></td>\n                    <td></td>\n                    <td></td>\n                    <td style={{textAlign:\"center\"}}>4/{this.state.test.max_score}</td>\n                  </tr>\n                </tbody>\n            </table>\n\n      </div>\n    );\n    return this.rolesMatched() ? ret : <Redirect to=\"/tests\" />;\n  }\n}\n\nexport default TestPage;","/home/milica/Desktop/Master/SOTIS/frontend/src/views/pages/TakeTest.js",["396","397","398","399","400","401","402"],"import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport {\n  CRow,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardFooter,\n  CLabel,\n  CInput,\n  CButton,\n  CCollapse,\n  CContainer,\n  CCol,\n  CFade,\n  CLink,\n  CFormGroup,\n  CInputCheckbox\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport { RoleAwareComponent } from 'react-router-role-authorization'\nimport {Redirect} from 'react-router-dom'\n\nconst url = (process.env.REACT_APP_DOMAIN) + ':' + (process.env.REACT_APP_PORT) + '/';\n\nclass TakeTest extends RoleAwareComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accordion: [],\n      test: {\n        title: \"\",\n        test_questions: [{\n          title: \"\",\n          test_question_answers: []\n        }]\n      },\n    };\n\n    let arr = [];\n    arr.push(localStorage.getItem('role'));\n    this.userRoles = arr;\n    this.allowedRoles = ['ROLE_STUDENT'];\n\n\n    this.getTest = this.getTest.bind(this);\n    this.toggleAccordion = this.toggleAccordion.bind(this)\n    this.generateAccordion = this.generateAccordion.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.submitAnswers = this.submitAnswers.bind(this)\n  }\n\n  componentDidMount() {\n    this.getTest()\n  }\n\n  getTest() {\n    const { id } = this.props.match.params;\n    axios({\n      method: 'get',\n      url: url + 'test/' + id,\n    }).then((response) => {\n      this.setState({ test: response.data })\n      this.generateAccordion()\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  generateAccordion() {\n    this.state.accordion = Array((this.state.test.test_questions).length).fill(false)\n  }\n\n  toggleAccordion(tab) {\n\n    const prevState = this.state.accordion;\n    const state = prevState.map((x, index) => tab === index ? !x : x);\n\n    this.setState({\n      accordion: state,\n    });\n  }\n\n  handleChange(question, answer) {\n    let temp = this.state.test\n    temp.test_questions[question].test_question_answers[answer].isCorrect = !temp.test_questions[question].test_question_answers[answer].isCorrect\n    this.setState({ test: temp })\n  }\n\n  submitAnswers() {\n    const { id } = this.props.match.params;\n    let data = {\n      test_id: id,\n      score: 0,\n      test: this.state.test\n    }\n    let token = localStorage.getItem(\"loggedInUser\")\n    let AuthStr = 'Bearer '.concat(token);       \n    axios({\n      method: 'post',\n      url: url + 'test_take',\n      headers: { \"Authorization\": AuthStr } ,   \n      data: data\n    }).then((response) => {\n      this.props.history.push('/tests/test/' + response.data)\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    let ret = (\n      <div>\n        <CCol xl=\"12\" lg=\"12\" md=\"12\" sm=\"12\">\n          <CCard>\n            <CCardHeader>\n              <h1>{this.state.test.title}</h1>\n            </CCardHeader>\n            <CCardBody>\n              <div id=\"accordion\">\n                {(this.state.test.test_questions).map((question, index) =>\n                  <CCard style={{ margin: \"10px\" }} className=\"mb-0\">\n                    <CCardHeader id=\"headingOne\">\n                      <CButton\n                        block\n                        color=\"link\"\n                        className=\"text-left m-0 p-0\"\n                        onClick={() => this.toggleAccordion(index)}\n                      >\n                        <h5 className=\"m-0 p-0\">{question.title}</h5>\n                      </CButton>\n                    </CCardHeader>\n                    <CCollapse show={this.state.accordion[index]}>\n                      <CCardBody>\n                        {(question.test_question_answers).map((answer, indexA) =>\n\n                          <CFormGroup variant=\"checkbox\" className=\"checkbox\">\n                            <br></br>\n                            <CInputCheckbox\n                              id=\"isCorrect\"\n                              name=\"isCorrect\"\n                              value={answer.isCorrect}\n                              checked={answer.isCorrect}\n                              onChange={event => this.handleChange(index, indexA)}\n                            />\n                            <CLabel variant=\"checkbox\" className=\"form-check-label\" htmlFor=\"isCorrect\">{indexA + 1}. {answer.title}</CLabel>\n                          </CFormGroup>\n                        )}\n                      </CCardBody>\n                    </CCollapse>\n                  </CCard>\n                )}\n              </div>\n            </CCardBody>\n            <CCardFooter>\n              <CButton color=\"success\" style={{ marginLeft: \"10px\", height: \"40px\" }} onClick={event => this.submitAnswers()}>Submit</CButton>\n            </CCardFooter>\n          </CCard>\n        </CCol>\n      </div>\n    );\n    return this.rolesMatched() ? ret : <Redirect to=\"/tests\" />;\n  }\n}\n\nexport default TakeTest;","/home/milica/Desktop/Master/SOTIS/frontend/src/views/pages/TestsPage.js",["403","404","405","406","407","408","409","410"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router\";\n\nimport {\n  CCard,\n  CRow,\n  CCardBody,\n  CCardHeader,\n  CLabel,\n  CButton,\n  CCollapse,\n  CContainer,\n  CCol,\n  CFade,\n  CLink,\n  CCardFooter,\n  CBadge,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport * as _ from \"lodash\";\n\nimport { RoleAwareComponent } from \"react-router-role-authorization\";\nimport { Redirect } from \"react-router-dom\";\n\nimport NewTest from \"./NewTest\";\n\nconst url =\n  process.env.REACT_APP_DOMAIN + \":\" + process.env.REACT_APP_PORT + \"/\";\n\nclass TestsPage extends RoleAwareComponent {\n  static propTypes = {\n    match: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      accordion: [],\n      tests: [],\n      collapsed: false,\n      showCard: true,\n      role: \"\",\n      hideNewTest: true,\n    };\n\n    let arr = [];\n    arr.push(localStorage.getItem(\"role\"));\n    this.userRoles = arr;\n    this.allowedRoles = [\"ROLE_PROFESSOR\", \"ROLE_STUDENT\"];\n\n    this.getTests = this.getTests.bind(this);\n    this.toggleAccordion = this.toggleAccordion.bind(this);\n    this.generateAccordion = this.generateAccordion.bind(this);\n    this.setCollapsed = this.setCollapsed.bind(this);\n    this.setShowCard = this.setShowCard.bind(this);\n  }\n\n  setCollapsed(i) {\n    const prevState = this.state.accordion;\n    const state = prevState.map((x, index) => (i === index ? !x : false));\n\n    this.setState({\n      accordion: state,\n    });\n  }\n\n  setShowCard(showCard) {\n    this.setShowCard({ showCard: !showCard });\n  }\n\n  componentDidMount() {\n    this.getTests();\n    this.setState({ role: localStorage.getItem(\"role\") });\n  }\n\n  getTests() {\n    axios({\n      method: \"get\",\n      url: url + \"test\",\n    }).then(\n      (response) => {\n        console.log(response);\n        this.setState({ tests: response.data });\n        this.generateAccordion();\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  generateAccordion() {\n    this.state.accordion = Array(this.state.tests.length).fill(false);\n  }\n\n  toggleAccordion(tab) {\n    const prevState = this.state.accordion;\n    const state = prevState.map((x, index) => (tab === index ? !x : false));\n\n    this.setState({\n      accordion: state,\n    });\n  }\n\n  handleNewTest = (hideNewTest) => {\n    this.setState({ hideNewTest: hideNewTest });\n    this.getTests();\n  };\n\n  render() {\n    const { match, location, history } = this.props;\n    let ret = (\n      <>\n        <CButton\n          hidden={\n            this.state.role !== \"ROLE_PROFESSOR\" || !this.state.hideNewTest\n          }\n          style={{ marginLeft: \"10px\", marginBottom: \"20px\" }}\n          color=\"success\"\n          onClick={(event) => this.setState({ hideNewTest: false })}\n        >\n          +\n        </CButton>\n        <div hidden={this.state.hideNewTest}>\n          <NewTest\n            course_id={this.props.course_id}\n            testsPageCallback={this.handleNewTest}\n          />\n        </div>\n        <CRow hidden={!this.state.hideNewTest}>\n          {this.state.tests.map((test, index) => (\n            <CCol xs=\"12\" sm=\"6\" md=\"4\">\n              <CFade in={this.state.showCard}>\n                <CCard>\n                  <CCardHeader>\n                    {test.title} - {test.max_score} points\n                    <div className=\"card-header-actions\">\n                      <CLink\n                        className=\"card-header-action\"\n                        onClick={() => this.setCollapsed(index)}\n                      >\n                        <CIcon\n                          name={\n                            this.state.accordion[index]\n                              ? \"cil-chevron-bottom\"\n                              : \"cil-chevron-top\"\n                          }\n                        />\n                      </CLink>\n                      <CLink className=\"card-header-action\">\n                        <CIcon name=\"cil-x-circle\" />\n                      </CLink>\n                    </div>\n                  </CCardHeader>\n                  <CCollapse show={this.state.accordion[index]}>\n                    <CCardBody hidden={this.state.role !== \"ROLE_PROFESSOR\"}>\n                      <CRow>\n                        {_.sortBy(test.test_questions, \"position\").map(\n                          (question, indexQ) => (\n                            <CCol xs=\"12\" sm=\"6\" md=\"4\" lg=\"4\">\n                              <CCard\n                                style={{\n                                  backgroundColor: \"whitesmoke\",\n                                  margin: \"1px\",\n                                }}\n                              >\n                                <CCardHeader>\n                                  {indexQ + 1}. {question.title}\n                                  <CBadge\n                                    shape=\"pill\"\n                                    color=\"primary\"\n                                    className=\"float-right\"\n                                  >\n                                    {question.points}\n                                  </CBadge>\n                                </CCardHeader>\n                                <CCardBody style={{ padding: \"3px\" }}>\n                                  {question.test_question_answers.map(\n                                    (answer, indexA) => (\n                                      <CCard style={{ margin: \"3px\" }}>\n                                        <label>\n                                          {indexA + 1}. {answer.title}\n                                        </label>\n                                      </CCard>\n                                    )\n                                  )}\n                                </CCardBody>\n                              </CCard>\n                            </CCol>\n                          )\n                        )}\n                      </CRow>\n                    </CCardBody>\n                    <CCardFooter>\n                      <CButton\n                        hidden={this.state.role !== \"ROLE_STUDENT\"}\n                        color=\"primary\"\n                        onClick={(event) =>\n                          history.push(\"/tests/takeTest/\" + test.id)\n                        }\n                      >\n                        Take test\n                      </CButton>\n                      <CButton\n                        hidden={this.state.role === \"ROLE_STUDENT\"}\n                        color=\"primary\"\n                        onClick={(event) =>\n                          history.push(\"/test/\" + test.id)\n                        }\n                      >\n                        Details\n                      </CButton>\n                    </CCardFooter>\n                  </CCollapse>\n                </CCard>\n              </CFade>\n            </CCol>\n          ))}\n        </CRow>\n      </>\n    );\n    return ret;\n  }\n}\n\nconst TestsPageWithRouter = withRouter(TestsPage);\nexport default TestsPageWithRouter;\n","/home/milica/Desktop/Master/SOTIS/frontend/src/views/pages/NewTest.js",["411","412"],"import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport {\n    CCard,\n    CRow,\n    CCol,\n    CCardBody,\n    CCardHeader,\n    CFormGroup,\n    CLabel,\n    CInput,\n    CButton,\n    CCollapse,\n    CBadge,\n    CModal,\n    CModalTitle,\n    CModalBody,\n    CModalFooter,\n    CModalHeader,\n    CInputCheckbox\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react';\n\nimport { RoleAwareComponent } from 'react-router-role-authorization'\nimport {Redirect} from 'react-router-dom'\n\nconst url = (process.env.REACT_APP_DOMAIN) + ':' + (process.env.REACT_APP_PORT) + '/';\n\nclass TestsPage extends RoleAwareComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            testTitle: \"\",\n            maxScore: 1,\n            questions: [],\n            questionTitle: \"\",\n            questionPoints: 0,\n            hideNewQuestion: true,\n            hideNewAnswer: true,\n            answerTitle: \"\",\n            isCorrect: false,\n            answers: [],\n            newAnswerModalTitle: ''\n        };\n\n        let arr = [];\n        arr.push(localStorage.getItem('role'));\n        this.userRoles = arr;\n        this.allowedRoles = ['ROLE_PROFESSOR', 'ROLE_STUDENT'];\n\n\n        this.createTest = this.createTest.bind(this)\n        this.cancel = this.cancel.bind(this)\n        this.addQuestion = this.addQuestion.bind(this)\n        this.questions = this.questions.bind(this)\n    }\n\n    componentDidMount() {\n    }\n\n    createTest() {\n        let token = localStorage.getItem(\"loggedInUser\")\n        let AuthStr = 'Bearer '.concat(token);    \n        let test = {\n            title: this.state.testTitle,\n            max_score: this.state.maxScore,\n            questions: this.state.questions,\n            course_id: this.props.course_id\n        }\n        axios({\n            method: 'post',\n            url: url + 'test',\n            headers: { \"Authorization\": AuthStr } ,   \n            data: test\n        }).then((response) => {\n            this.props.testsPageCallback(true);\n        }, (error) => {\n            console.log(error);\n        });\n    }\n\n    cancel() {\n        this.props.testsPageCallback(true);\n    }\n\n    addQuestion() {\n        let question = {\n            title: this.state.questionTitle,\n            points: this.state.questionPoints,\n            answers: this.state.answers,\n        }\n        this.setState({ questionTitle: \"\", questionPoints: 0, hideNewQuestion: true, answers: [] })\n        this.state.questions.push(question)\n    }\n\n    addAnswer() {\n        let isCorrect = 0\n        if (this.state.isCorrect) {\n            isCorrect = 1\n        }\n        let answer = {\n            title: this.state.answerTitle,\n            isCorrect: isCorrect\n        }\n        this.state.answers.push(answer)\n        this.setState({ isCorrect: false, answerTitle: \"\", hideNewAnswer: true })\n    }\n\n    questions(questions) {\n        return (\n            <CRow>\n                {(this.state.questions).map((question, indexQ) =>\n                    <CCol xs=\"4\" sm=\"4\" md=\"4\" lg=\"3\">\n                        <CCard style={{margin: \"10px\" }}>\n                            <CCardHeader style={{ padding: \"3px\" }}>\n                                <h3>{indexQ + 1}. {question.title}\n                                    <small className=\"card-header-actions\">\n                                        <CBadge shape=\"pill\" color=\"primary\" className=\"float-right\">{question.points}</CBadge>\n                                    </small>\n                                </h3>\n                            </CCardHeader>\n                            <CCardBody>\n                                {(question.answers).map((answer, indexA) =>\n                                    <div style={{backgroundColor:\"whitesmoke\", margin: \"5px\" }}>\n                                        <CRow hidden={answer.isCorrect === 0}>\n                                        <CCol lg=\"10\" md=\"10\">\n                                            <CLabel style={{ marginRight: \"10px\" }}>{indexA + 1}. {answer.title} </CLabel>\n                                        </CCol>\n                                        <CCol lg=\"2\" md=\"2\">\n                                            <CIcon className=\"text-success\" name=\"cil-check-circle\"></CIcon>\n                                            </CCol>\n                                        </CRow>\n                                        <CRow hidden={answer.isCorrect === 1} >\n                                            <CCol lg=\"10\" md=\"10\">\n                                            <CLabel frameBorder style={{ marginRight: \"10px\" }}>{indexA + 1}. {answer.title} </CLabel>\n                                            </CCol>\n                                            <CCol lg=\"2\" md=\"2\">\n                                            <CIcon className=\"text-danger\" name=\"cil-x-circle\"></CIcon>\n                                            </CCol>\n                                        </CRow>\n                                    </div>\n                                )}\n                            </CCardBody>\n                        </CCard>\n                    </CCol>\n                )}\n            </CRow>\n        )\n    }\n\n    render() {\n        let ret = (\n            <div>\n                <CModal\n                    show={!this.state.hideNewAnswer}\n                    onClose={() => this.setState({ hideNewAnswer: true, newAnswerModalTitle: '' })}\n                    color=\"info\"\n                >\n                    <CModalHeader closeButton>\n                        <CModalTitle>{this.state.newAnswerModalTitle}</CModalTitle>\n                    </CModalHeader>\n                    <CModalBody>\n                        <CFormGroup row>\n\n                            <CCol md=\"12\">\n                                <CLabel>Answer</CLabel>\n                                <CInput type=\"text\" value={this.state.answerTitle}\n                                    onChange={event => this.setState({ answerTitle: event.target.value })} />\n                            </CCol>\n                            <CCol md=\"12\">\n                                <CFormGroup variant=\"checkbox\" className=\"checkbox\">\n                                    <br></br>\n                                    <CInputCheckbox\n                                        id=\"isCorrect\"\n                                        name=\"isCorrect\"\n                                        value={this.state.isCorrect}\n                                        checked={this.state.isCorrect}\n                                        onChange={event => this.setState({ isCorrect: event.target.checked })}\n                                    />\n                                    <CLabel variant=\"checkbox\" className=\"form-check-label\" htmlFor=\"isCorrect\">Is correct</CLabel>\n                                </CFormGroup>\n                            </CCol>\n                            <CRow style={{ margin: \"10px\" }}>\n\n                            </CRow>\n                        </CFormGroup>\n                    </CModalBody>\n                    <CModalFooter>\n                        <CButton color=\"secondary\" onClick={() => this.setState({ hideNewAnswer: true, answerTitle:'', isCorrect:false })}>Cancel</CButton>\n                        <CButton color=\"info\" onClick={() => this.addAnswer()}>Add answer</CButton>\n                    </CModalFooter>\n                </CModal>\n\n                <CCol md=\"12\" lg=\"12\" xs=\"12\">\n                    <CRow>\n                        <CCol md=\"4\" lg=\"3\" xs=\"4\">\n                            <CLabel style={{ marginRight: \"10px\" }}>Title</CLabel>\n                            <CInput type=\"text\" value={this.state.testTitle}\n                                onChange={event => this.setState({ testTitle: event.target.value })} />\n                        </CCol>\n                        <CCol md=\"4\" lg=\"3\" xs=\"4\">\n                            <CLabel style={{ marginRight: \"10px\" }}>Score</CLabel>\n                            <CInput type=\"number\" value={this.state.maxScore} min=\"1\"\n                                onChange={event => this.setState({ maxScore: event.target.value })} />\n                        </CCol>\n                    </CRow>\n                    <CRow>\n                        <CCol md=\"12\" lg=\"12\" xs=\"12\">\n                            {this.questions(this.state.questions)}\n                        </CCol>\n                    </CRow>\n                    <CRow hidden={!this.state.hideNewQuestion}>\n                        <CCol xs=\"12\" sm=\"12\" md=\"12\">\n                            <br></br>\n                            <CButton variant='outline' color='success' style={{ height: \"40px\" }}\n                                onClick={() => this.setState({ hideNewQuestion: false, newAnswerModalTitle: this.state.questionTitle })}>\n                                Add question\n                        </CButton>\n                        </CCol>\n                    </CRow>\n                    <CRow hidden={this.state.hideNewQuestion}>\n                        <CCol md=\"12\" lg=\"12\" xs=\"12\">\n                            <br></br>\n                            <h3>{this.state.questions.length + 1}.</h3>\n                            <CFormGroup row>\n                                <CCol md=\"3\">\n                                    <CLabel style={{ marginRight: \"10px\" }}>Question</CLabel>\n                                    <CInput type=\"text\" value={this.state.questionTitle}\n                                        onChange={event => this.setState({ questionTitle: event.target.value })} />\n                                </CCol>\n                                <CCol md=\"3\">\n                                    <CLabel style={{ marginRight: \"10px\" }}>Points</CLabel>\n                                    <CInput type=\"number\" value={this.state.questionPoints}\n                                        onChange={event => this.setState({ questionPoints: event.target.value })} />\n                                </CCol>\n                                <CCol md=\"3\">\n                                    <br></br>\n                                    <CButton hidden={!this.state.hideNewAnswer} style={{ marginTop: \"7px\" }} color=\"primary\"\n                                        onClick={() => this.setState({ hideNewAnswer: false, newAnswerModalTitle: this.state.questionTitle + ' - New Answer' })}>\n                                        Add new answer\n                                </CButton>\n                                </CCol>\n                            </CFormGroup>\n                            <CCol xs=\"12\" sm=\"12\" md=\"3\" lg=\"3\" >\n                                <h3>Answers:</h3>\n                                {(this.state.answers).map((answer, indexA) =>\n                                    <>\n                                        <CRow className=\"text-success\" hidden={answer.isCorrect === 0} style={{ backgroundColor: \"white\", margin: \"5px\" }}>\n                                            <h4 >{indexA + 1}. {answer.title} </h4><CIcon style={{marginLeft:\"10px\"}} name=\"cil-check-circle\"></CIcon>\n                                        </CRow>\n                                        <CRow className=\"text-danger\" hidden={answer.isCorrect === 1} style={{ backgroundColor: \"white\", margin: \"5px\" }}>\n                                            <h4> {indexA + 1}. {answer.title}</h4><CIcon style={{marginLeft:\"10px\"}} name=\"cil-x-circle\"></CIcon>\n                                        </CRow>\n                                    </>\n                                )}\n                            </CCol>\n                            <CCol xs=\"12\" sm=\"12\" md=\"12\">\n                                <br></br>\n                                <CButton color='success' style={{ height: \"40px\" }} onClick={() => this.addQuestion()}>\n                                    Save question\n                            </CButton>\n                            </CCol>\n                        </CCol>\n                    </CRow>\n                    <CRow>\n                        <CCol xs=\"12\" sm=\"12\" md=\"12\" lg=\"3\">\n                            <br></br>\n                            <CButton style={{ height: \"40px\" }} color='success' onClick={() => this.createTest()}>\n                                Save test\n                            </CButton>\n                            <CButton style={{ marginLeft: \"10px\", height: \"40px\" }} color='danger' onClick={() => this.cancel()}>\n                                Cancel\n                            </CButton>\n                        </CCol>\n                    </CRow>\n                </CCol>\n            </div>\n        );\n        return this.rolesMatched() ? ret : <Redirect to=\"/tests\" />;\n    }\n}\n\nexport default TestsPage;","/home/milica/Desktop/Master/SOTIS/frontend/src/views/pages/StudentsPage.js",["413"],"import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport {\n  Redirect,\n} from 'react-router-dom'\n\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable\n} from '@coreui/react'\n\nimport { RoleAwareComponent } from 'react-router-role-authorization';\n\nconst url = (process.env.REACT_APP_DOMAIN) + ':' + (process.env.REACT_APP_PORT) + '/';\n\nconst fields = ['#','name', 'last_name']\n\nclass StudentsPage extends RoleAwareComponent {\n  constructor(props)\n  {\n    super(props);\n    this.state = {      \n      students: []          \n    };\n\n    let arr = [];\n    arr.push(localStorage.getItem('role'));\n    this.userRoles = arr;\n    this.allowedRoles = ['ROLE_PROFESSOR'];\n\n    this.getStudents = this.getStudents.bind(this);\n  }\n\n  componentDidMount(){\n    this.getStudents()\n}\n\n  getStudents(){\n    let token = localStorage.getItem(\"loggedInUser\")\n    let AuthStr = 'Bearer '.concat(token);     \n    axios({\n      method: 'get',\n      url: url + 'users/student',       \n      headers: { \"Authorization\": AuthStr } ,   \n  }).then((response) => {\n      console.log(response);\n      this.setState({students:response.data})\n  }, (error) => {\n      console.log(error);\n  });\n  }\n\n\n  render() {\n    let ret = (\n      <CCol xs=\"12\" lg=\"12\">\n          <CCard>\n            <CCardHeader>\n              Students\n            </CCardHeader>\n            <CCardBody>\n            <CDataTable\n              items={this.state.students}\n              fields={fields}\n              striped\n              itemsPerPage={5}\n              pagination\n              scopedSlots = {{\n                '#':\n                  (item, index)=>(\n                    <td>\n                        {index + 1}\n                    </td>\n                  ),\n                'name':\n                 (item, index)=>(\n                    <td>\n                        {item.user.name}\n                    </td>\n                 ),\n                'last_name':\n                 (item, index)=>(\n                    <td>\n                        {item.user.last_name}\n                    </td>\n                 )\n              }}\n            />\n            </CCardBody>\n          </CCard>\n        </CCol>\n    );\n    return this.rolesMatched() ? ret : <Redirect to=\"/courses\" />;\n  }\n}\n\nexport default StudentsPage;","/home/milica/Desktop/Master/SOTIS/frontend/src/views/widgets/WidgetsBrand.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/widgets/WidgetsDropdown.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/charts/MainChartExample.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/users/UsersData.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/charts/ChartBarSimple.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/charts/ChartLineSimple.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/pages/Graph/graph-config.js",["414"],"import * as React from 'react';\n\nexport const NODE_KEY = 'id'; // Key used to identify nodes\n\n// These keys are arbitrary (but must match the config)\n// However, GraphView renders text differently for empty types\n// so this has to be passed in if that behavior is desired.\nexport const EMPTY_TYPE = 'customEmpty'; // Empty node type\nexport const POLY_TYPE = 'poly';\nexport const SPECIAL_TYPE = 'special';\nexport const SKINNY_TYPE = 'skinny';\nexport const SPECIAL_CHILD_SUBTYPE = 'specialChild';\nexport const EMPTY_EDGE_TYPE = 'emptyEdge';\nexport const SPECIAL_EDGE_TYPE = 'specialEdge';\nexport const COMPLEX_CIRCLE_TYPE = 'complexCircle';\n\nexport const nodeTypes = [EMPTY_TYPE, POLY_TYPE, SPECIAL_TYPE, SKINNY_TYPE];\nexport const edgeTypes = [EMPTY_EDGE_TYPE, SPECIAL_EDGE_TYPE];\n\nconst EmptyNodeShape = (\n  <symbol viewBox=\"0 0 154 154\" width=\"154\" height=\"154\" id=\"emptyNode\">\n    <circle cx=\"77\" cy=\"77\" r=\"76\" />\n  </symbol>\n);\n\nconst CustomEmptyShape = (\n  <symbol viewBox=\"0 0 100 100\" id=\"customEmpty\">\n    <circle cx=\"50\" cy=\"50\" r=\"45\" />\n  </symbol>\n);\n\nconst SpecialShape = (\n  <symbol viewBox=\"-27 0 154 154\" id=\"special\" width=\"154\" height=\"154\">\n    <rect transform=\"translate(50) rotate(45)\" width=\"109\" height=\"109\" />\n  </symbol>\n);\n\nconst PolyShape = (\n  <symbol viewBox=\"0 0 88 72\" id=\"poly\" width=\"88\" height=\"88\">\n    <path d=\"M 0 36 18 0 70 0 88 36 70 72 18 72Z\" />\n  </symbol>\n);\n\nconst ComplexCircleShape = (\n  <symbol viewBox=\"0 0 100 100\" id=\"complexCircle\" width=\"100\" height=\"100\">\n    <circle cx=\"50\" cy=\"50\" r=\"50\" fill=\"transparent\" stroke=\"transparent\" />\n    <circle cx=\"50\" cy=\"50\" r=\"34\" />\n    <path\n      d=\"M50,0a50,50,0,1,0,50,50A50,50,0,0,0,50,0Zm0,90A40,40,0,1,1,90,50,40,40,0,0,1,50,90Z\"\n      data-intersect-ignore=\"true\"\n    />\n  </symbol>\n);\n\nconst SkinnyShape = (\n  <symbol viewBox=\"0 0 154 54\" width=\"154\" height=\"54\" id=\"skinny\">\n    <rect x=\"0\" y=\"0\" rx=\"2\" ry=\"2\" width=\"154\" height=\"54\" />\n  </symbol>\n);\n\nconst SpecialChildShape = (\n  <symbol viewBox=\"0 0 154 154\" id=\"specialChild\">\n    <rect\n      x=\"2.5\"\n      y=\"0\"\n      width=\"154\"\n      height=\"154\"\n      fill=\"rgba(30, 144, 255, 0.12)\"\n    />\n  </symbol>\n);\n\nconst EmptyEdgeShape = (\n  <symbol viewBox=\"0 0 50 50\" id=\"emptyEdge\">\n    <circle cx=\"25\" cy=\"25\" r=\"8\" fill=\"currentColor\" />\n  </symbol>\n);\n\nconst SpecialEdgeShape = (\n  <symbol viewBox=\"0 0 50 50\" id=\"specialEdge\">\n    <rect\n      transform=\"rotate(45)\"\n      x=\"27.5\"\n      y=\"-7.5\"\n      width=\"15\"\n      height=\"15\"\n      fill=\"currentColor\"\n    />\n  </symbol>\n);\n\nexport default {\n  EdgeTypes: {\n    emptyEdge: {\n      shape: EmptyEdgeShape,\n      shapeId: '#emptyEdge',\n    },\n    specialEdge: {\n      shape: SpecialEdgeShape,\n      shapeId: '#specialEdge',\n    },\n  },\n  NodeSubtypes: {\n    specialChild: {\n      shape: SpecialChildShape,\n      shapeId: '#specialChild',\n    },\n  },\n  NodeTypes: {\n    emptyNode: {\n      shape: EmptyNodeShape,\n      shapeId: '#emptyNode',\n      typeText: 'None',\n    },\n    empty: {\n      shape: CustomEmptyShape,\n      shapeId: '#empty',\n      typeText: 'None',\n    },\n    special: {\n      shape: SpecialShape,\n      shapeId: '#special',\n      typeText: 'Special',\n    },\n    skinny: {\n      shape: SkinnyShape,\n      shapeId: '#skinny',\n      typeText: 'Skinny',\n    },\n    poly: {\n      shape: PolyShape,\n      shapeId: '#poly',\n      typeText: 'Poly',\n    },\n    complexCircle: {\n      shape: ComplexCircleShape,\n      shapeId: '#complexCircle',\n      typeText: '#complexCircle',\n    },\n  },\n};","/home/milica/Desktop/Master/SOTIS/frontend/src/reusable/index.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/reusable/DocsLink.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/pages/Profile/Profile.js",["415","416","417","418","419","420","421"],"import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport {\n  Redirect,\n} from 'react-router-dom'\n\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CLabel,\n  CContainer, \n  CButton\n} from '@coreui/react'\n\nimport { RoleAwareComponent } from 'react-router-role-authorization';\n\nconst url = (process.env.REACT_APP_DOMAIN) + ':' + (process.env.REACT_APP_PORT) + '/';\n\nconst fields = ['#','name', 'last_name']\n\nclass Profile extends RoleAwareComponent {\n  constructor(props)\n  {\n    super(props);\n    this.state = {      \n      user: []          \n    };\n\n    let arr = [];\n    arr.push(localStorage.getItem('role'));\n    this.userRoles = arr;\n    this.allowedRoles = ['ROLE_PROFESSOR', 'ROLE_STUDENT', 'ROLE_ADMIN'];\n\n    this.getUser = this.getUser.bind(this);\n    this.changePassword = this.changePassword.bind(this)\n  }\n\n  componentDidMount(){\n    this.getUser()\n}\n\n  getUser(){\n    let token = localStorage.getItem(\"loggedInUser\")\n    let AuthStr = 'Bearer '.concat(token);     \n    axios({\n      method: 'get',\n      url: url + 'user',       \n      headers: { \"Authorization\": AuthStr } ,   \n  }).then((response) => {\n      console.log(response);\n      this.setState({user:response.data})\n  }, (error) => {\n      console.log(error);\n  });\n  }\n\nchangePassword(){\n\n}\n\n  render() {\n    const user = this.state.user;\n    let ret = (\n      <CCol xs=\"12\" lg=\"12\">\n          <CRow>\n            <CCol md=\"1\" lg=\"1\" xl=\"1\">\n              <CLabel>Name:</CLabel>\n            </CCol>\n            <CCol md=\"4\" lg=\"4\" xl=\"4\">\n               <CLabel>{user.name}</CLabel>\n            </CCol>\n          </CRow>\n            <CRow>\n            <CCol md=\"1\" lg=\"1\" xl=\"1\">\n              <CLabel>Lastname:</CLabel>\n            </CCol>\n            <CCol md=\"4\" lg=\"4\" xl=\"4\">\n               <CLabel>{user.last_name}</CLabel>\n            </CCol>\n          </CRow>\n          <CRow>\n            <CCol md=\"1\" lg=\"1\" xl=\"1\">\n              <CLabel>Username:</CLabel>\n            </CCol>\n            <CCol md=\"4\" lg=\"4\" xl=\"4\">\n               <CLabel>{user.username}</CLabel>\n            </CCol>\n          </CRow>\n            <CRow>\n            <CCol md=\"1\" lg=\"1\" xl=\"1\">\n              <CLabel>Email:</CLabel>\n            </CCol>\n            <CCol md=\"4\" lg=\"4\" xl=\"4\">\n               <CLabel>{user.email}</CLabel>\n            </CCol>\n          </CRow>\n          <CRow>\n            <CCol md=\"2\" lg=\"2\" xl=\"2\">\n              <CButton id=\"changePassword\" onClick={() => this.changePassword()} color=\"primary\" className=\"px-4\">Change password</CButton>\n            </CCol>\n          </CRow>\n        </CCol>\n    );\n    return this.rolesMatched() ? ret : <Redirect to=\"/courses\" />;\n  }\n}\n\nexport default Profile;","/home/milica/Desktop/Master/SOTIS/frontend/src/views/pages/Professors/Professors.js",["422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport { Redirect } from \"react-router-dom\";\n\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CButton,\n  CRow,\n  CForm,\n  CFormGroup,\n  CFormText,\n  CCardFooter,\n  CContainer,\n  CLabel,\n  CInput,\n  CLink,\n  CModal,\n  CModalHeader,\n  CModalTitle,\n  CModalBody\n} from \"@coreui/react\";\n\nimport { RoleAwareComponent } from \"react-router-role-authorization\";\n\nimport { NotificationManager } from \"react-notifications\";\n\nconst url =\n  process.env.REACT_APP_DOMAIN + \":\" + process.env.REACT_APP_PORT + \"/\";\n\nconst fields = [\"#\", \"name\", \"last_name\", \"email\"];\n\nconst emailRegex = RegExp(\n  /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n);\n\nconst phoneRegex = RegExp(/06[0-9]{7,8}$/);\n\nconst capitalLetterRegex = RegExp(/^([A-Z][a-z]+)+$/);\n\nconst medicalNumberRegex = RegExp(/[0-9]{9,10}$/);\n\nconst formValid = ({ formErrors, ...rest }) => {\n  let valid = true;\n\n  // validate form errors being empty\n  Object.values(formErrors).forEach((val) => {\n    val.length > 0 && (valid = false);\n  });\n\n  // validate the form was filled out\n  Object.values(rest).forEach((val) => {\n    val === null && (valid = false);\n  });\n\n  return valid;\n};\n\nclass ProfessorsPage extends RoleAwareComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      professors: [],\n      hideForm: true,\n      formErrors: {\n        username: \"\",\n        password: \"\",\n        email: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        passwordConfirm: \"\",\n      },\n      username: \"\",\n      password: \"\",\n      email: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      passwordConfirm: \"\",\n      disableSubmit: true,\n    };\n\n    let arr = [];\n    arr.push(localStorage.getItem(\"role\"));\n    this.userRoles = arr;\n    this.allowedRoles = [\"ROLE_ADMIN\"];\n\n    this.getProfessors = this.getProfessors.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.SendRegisterRequest = this.SendRegisterRequest.bind(this);\n    this.clearAll = this.clearAll.bind(this);\n  }\n\n  componentDidMount() {\n    this.getProfessors();\n  }\n\n  getProfessors() {\n    let token = localStorage.getItem(\"loggedInUser\");\n    let AuthStr = \"Bearer \".concat(token);\n    axios({\n      method: \"get\",\n      url: url + \"users/professor\",\n      headers: { Authorization: AuthStr },\n    }).then(\n      (response) => {\n        console.log(response);\n        this.setState({ professors: response.data });\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  clearAll() {\n    this.setState({\n      username: \"\",\n      password: \"\",\n      email: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      passwordConfirm: \"\",\n      disableSubmit: true,\n      hideForm: true,\n      formErrors: {\n        username: \"\",\n        password: \"\",\n        email: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        passwordConfirm: \"\",\n      },\n    });\n  }\n\n  SendRegisterRequest = (event) => {\n    event.preventDefault();\n    console.log(this.state);\n    const { password, passwordConfirm } = this.state;\n    if (password !== passwordConfirm) {\n      alert(\"Passwords don't match\");\n    } else {\n      axios\n        .post(url + \"register\", {\n          username: this.state.username,\n          password: this.state.password,\n          email: this.state.email,\n          name: this.state.firstName,\n          last_name: this.state.lastName,\n          student_id: this.state.studentId,\n          role: 'professor'\n        })\n        .then((resp) => {\n          NotificationManager.success(\n            \"Professor registered successfuly.\",\n            \"Success!\",\n            4000\n          );\n          let temp = this.state.professors\n          temp.push(resp.data)\n          this.setState({professors: temp})\n          this.clearAll()\n        })\n        .catch((error) =>\n          NotificationManager.error(\"Wrong input\", \"Error!\", 4000)\n        );\n    }\n  };\n\n  handleKeyUp = () => {\n    var empty = true;\n\n    Object.keys(this.state.formErrors).forEach((e) => {\n      if (this.state.formErrors[e] != \"\") {\n        empty = false;\n      }\n    });\n\n    if (!empty) {\n      this.setState({ disableSumbit: true });\n      console.log(\"disabled\");\n    } else {\n      if (\n        this.state.email != \"\" &&\n        this.state.firstName != \"\" &&\n        this.state.lastName != \"\" &&\n        this.state.studentId != \"\" &&\n        this.state.password != \"\" &&\n        this.state.passwordConfirm != \"\" &&\n        this.state.email != \"\" &&\n        this.state.username != \"\"\n      ) {\n        this.setState({ disableSumbit: false });\n        console.log(\"enabled\");\n      } else {\n        this.setState({ disableSumbit: true });\n        console.log(\"disabled\");\n      }\n    }\n  };\n\n  isEmpty = (obj) => {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) return false;\n    }\n    return true;\n  };\n\n  /*handleChange(e) {\n      this.setState({...this.state, [e.target.name]: e.target.value});\n  }*/\n\n  handleChange = (e) => {\n    e.preventDefault();\n    const { name, value } = e.target;\n    let formErrors = { ...this.state.formErrors };\n\n    switch (name) {\n      case \"username\":\n        formErrors.username =\n          value.length < 3 ? \"Minimum 3 characaters required\" : \"\";\n        break;\n      case \"firstName\":\n        formErrors.firstName = capitalLetterRegex.test(value)\n          ? \"\"\n          : \"First name must start with a capital letter\";\n\n        if (formErrors.firstName === \"\") {\n          formErrors.firstName =\n            value.length < 3 ? \"Minimum 3 characaters required\" : \"\";\n        }\n        break;\n      case \"lastName\":\n        formErrors.lastName = capitalLetterRegex.test(value)\n          ? \"\"\n          : \"Last name must start with a capital letter\";\n\n        if (formErrors.lastName === \"\") {\n          formErrors.lastName =\n            value.length < 3 ? \"Minimum 3 characaters required\" : \"\";\n        }\n        break;\n      case \"email\":\n        formErrors.email = emailRegex.test(value)\n          ? \"\"\n          : \"Invalid email address\";\n        break;\n      case \"password\":\n        formErrors.password =\n          value.length < 8 ? \"Minimum 8 characaters required\" : \"\";\n        break;\n      case \"passwordConfirm\":\n        formErrors.passwordConfirm =\n          value.length < 8 ? \"Minimum 8 characaters required\" : \"\";\n        break;\n      default:\n        break;\n    }\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\n\n    this.handleKeyUp();\n  };\n\n  render() {\n    const { formErrors } = this.state;\n    const role = localStorage.getItem(\"role\");\n    let ret = (\n      <CCol xs=\"12\" lg=\"12\">\n        <CButton\n          hidden={role !== \"ROLE_ADMIN\"}\n          style={{ marginBottom: \"20px\" }}\n          id=\"confirmButton\"\n          onClick={() => this.setState({ hideForm: false })}\n          color=\"success\"\n          className=\"px-4\"\n        >\n          Register new professor\n        </CButton>\n        <CCard>\n          <CCardHeader>Professors</CCardHeader>\n          <CCardBody>\n            <CDataTable\n              items={this.state.professors}\n              fields={fields}\n              striped\n              itemsPerPage={5}\n              pagination\n              scopedSlots={{\n                \"#\": (item, index) => <td>{index + 1}</td>,\n                name: (item, index) => <td>{item.user.name}</td>,\n                last_name: (item, index) => <td>{item.user.last_name}</td>,\n                email: (item, index) => <td>{item.user.email}</td>,\n              }}\n            />\n          </CCardBody>\n        </CCard>\n        <CModal show = {!this.state.hideForm} onClose={() => this.clearAll()}>\n          <CModalHeader closeButton>\n            <CModalTitle>Register new professor</CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n          <CRow className=\"justify-content-center\">\n            <CCol md=\"12\" lg=\"12\" xl=\"12\">\n                  <CForm onSubmit={this.SendRegisterRequest}>\n                    <CFormGroup>\n                      <p className=\"text-muted\">Create professor account</p>\n                      <CLabel htmlFor=\"username\">Username</CLabel>\n                      <CInput\n                        type=\"text\"\n                        onKeyUp={this.handleKeyUp}\n                        className={\n                          formErrors.username.length > 0 ? \"error\" : null\n                        }\n                        id=\"username\"\n                        name=\"username\"\n                        noValidate\n                        onChange={this.handleChange}\n                        placeholder=\"Enter Username\"\n                      />\n                      {formErrors.username.length > 0 && (\n                        <CFormText className=\"help-block\">\n                          <p style={{ color: \"red\" }}>{formErrors.username}</p>\n                        </CFormText>\n                      )}\n                    </CFormGroup>\n\n                    <CFormGroup>\n                      <CLabel htmlFor=\"firstName\">First Name</CLabel>\n                      <CInput\n                        type=\"text\"\n                        onKeyUp={this.handleKeyUp}\n                        className={\n                          formErrors.firstName.length > 0 ? \"error\" : null\n                        }\n                        id=\"firstName\"\n                        name=\"firstName\"\n                        noValidate\n                        onChange={this.handleChange}\n                        placeholder=\"Enter first name\"\n                      />\n                      {formErrors.firstName.length > 0 && (\n                        <CFormText className=\"help-block\">\n                          <p style={{ color: \"red\" }}>{formErrors.firstName}</p>\n                        </CFormText>\n                      )}\n                    </CFormGroup>\n\n                    <CFormGroup>\n                      <CLabel htmlFor=\"lastName\">Last Name</CLabel>\n                      <CInput\n                        type=\"text\"\n                        onKeyUp={this.handleKeyUp}\n                        className={\n                          formErrors.lastName.length > 0 ? \"error\" : null\n                        }\n                        id=\"lastName\"\n                        name=\"lastName\"\n                        onChange={this.handleChange}\n                        placeholder=\"Enter last name\"\n                        noValidate\n                      />\n                      {formErrors.lastName.length > 0 && (\n                        <CFormText className=\"help-block\">\n                          <p style={{ color: \"red\" }}>{formErrors.lastName}</p>\n                        </CFormText>\n                      )}\n                    </CFormGroup>\n\n                    <CFormGroup>\n                      <CLabel htmlFor=\"email\">Email Address</CLabel>\n                      <CInput\n                        type=\"email\"\n                        onKeyUp={this.handleKeyUp}\n                        className={formErrors.email.length > 0 ? \"error\" : null}\n                        id=\"email\"\n                        name=\"email\"\n                        onChange={this.handleChange}\n                        placeholder=\"Enter email address\"\n                        noValidate\n                      />\n                      {formErrors.email.length > 0 && (\n                        <CFormText className=\"help-block\">\n                          <p style={{ color: \"red\" }}>{formErrors.email}</p>\n                        </CFormText>\n                      )}\n                    </CFormGroup>\n\n                    <CFormGroup>\n                      <CLabel htmlFor=\"password\">Password</CLabel>\n                      <CInput\n                        type=\"password\"\n                        onKeyUp={this.handleKeyUp}\n                        className={\n                          formErrors.password.length > 0 ? \"error\" : null\n                        }\n                        id=\"password\"\n                        name=\"password\"\n                        onChange={this.handleChange}\n                        placeholder=\"Enter password\"\n                        noValidate\n                      />\n                      {formErrors.password.length > 0 && (\n                        <CFormText className=\"help-block\">\n                          <p style={{ color: \"red\" }}>{formErrors.password}</p>\n                        </CFormText>\n                      )}\n                    </CFormGroup>\n\n                    <CFormGroup>\n                      <CLabel htmlFor=\"passwordConfirm\">\n                        Confirm Password\n                      </CLabel>\n                      <CInput\n                        type=\"password\"\n                        onKeyUp={this.handleKeyUp}\n                        className={\n                          formErrors.passwordConfirm.length > 0 ? \"error\" : null\n                        }\n                        id=\"passwordConfirm\"\n                        name=\"passwordConfirm\"\n                        onChange={this.handleChange}\n                        placeholder=\"Confirm password\"\n                        noValidate\n                      />\n                      {formErrors.passwordConfirm.length > 0 && (\n                        <CFormText className=\"help-block\">\n                          <p style={{ color: \"red\" }}>\n                            {formErrors.passwordConfirm}\n                          </p>\n                        </CFormText>\n                      )}\n                    </CFormGroup>\n                    <CRow>\n                      <CCol md=\"6\" lg=\"6\" xl=\"6\">\n                        <CButton\n                          disabled={this.state.disableSumbit}\n                          className=\"register\"\n                          type=\"submit\"\n                          color=\"success\"\n                          block\n                        >\n                          Create Account\n                        </CButton>\n                      </CCol>\n                      <CCol md=\"4\" lg=\"4\" xl=\"4\">\n                        <CButton\n                          onClick={() => this.clearAll()}\n                          className=\"register\"\n                          color=\"danger\"\n                          block\n                        >\n                          Cancel\n                        </CButton>\n                      </CCol>\n                    </CRow>\n                  </CForm>\n            </CCol>\n          </CRow>\n        </CModalBody>\n        </CModal>\n      </CCol>\n    );\n    return this.rolesMatched() ? ret : <Redirect to=\"/courses\" />;\n  }\n}\n\nexport default ProfessorsPage;\n","/home/milica/Desktop/Master/SOTIS/frontend/src/views/pages/Courses/Courses.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/pages/Courses/CoursePage.js",["438","439","440","441","442","443","444","445","446","447"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport { Redirect } from \"react-router-dom\";\n\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CButton,\n  CCardFooter,\n  CRow,\n  CModal,\n  CModalHeader,\n  CModalTitle,\n  CModalBody,\n  CFormGroup,\n  CLabel,\n  CInput,\n  CFormText,\n  CModalFooter,\n  CTabs,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CTabContent,\n  CTabPane,\n} from \"@coreui/react\";\n\nimport { RoleAwareComponent } from \"react-router-role-authorization\";\n\nimport TestsPage from \"../TestsPage.js\";\nimport KnowledgeSpace from \"../KnowledgeSpace/KnowledgeSpace.js\";\n\nconst url =\n  process.env.REACT_APP_DOMAIN + \":\" + process.env.REACT_APP_PORT + \"/\";\n\nconst fields = [\"#\", \"name\", \"last_name\", \"email\"];\nconst fieldsAdd = [\"#\", \"name\", \"last_name\", \"add\"];\nconst fieldsRemove = [\"#\", \"name\", \"last_name\", \"remove\"];\n\nclass CoursePage extends RoleAwareComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      course: [],\n      showModal: [false, false], // 0 - professors, 1 - students\n      usersToAdd: [[], []],\n      users: [[], []],\n      searchUsers: [\"\", \"\"],\n      usersTable: [],\n    };\n\n    let arr = [];\n    arr.push(localStorage.getItem(\"role\"));\n    this.userRoles = arr;\n    this.allowedRoles = [\"ROLE_PROFESSOR\", \"ROLE_STUDENT\", \"ROLE_ADMIN\"];\n\n    this.getCourse = this.getCourse.bind(this);\n    this.getProfessors = this.getProfessors.bind(this);\n    this.getStudents = this.getStudents.bind(this);\n    this.handleUsersSearch = this.handleUsersSearch.bind(this);\n    this.addUserToList = this.addUserToList.bind(this);\n    this.removeUserFromList = this.removeUserFromList.bind(this);\n    this.resetAll = this.resetAll.bind(this);\n    this.addUsers = this.addUsers.bind(this);\n  }\n\n  componentDidMount() {\n    this.getCourse();\n  }\n\n  getProfessors(course_professors) {\n    let token = localStorage.getItem(\"loggedInUser\");\n    let AuthStr = \"Bearer \".concat(token);\n    axios({\n      method: \"get\",\n      url: url + \"users/professor\",\n      headers: { Authorization: AuthStr },\n    }).then(\n      (response) => {\n        console.log(response);\n        var newArray = response.data.filter(function (professor) {\n          return !course_professors.some((p) => p.id === professor.id);\n        });\n        let temp = this.state.usersTable;\n        temp[0] = newArray;\n        let temp2 = this.state.users;\n        temp2[0] = response.data;\n        this.setState({ users: temp2, usersTable: temp });\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  getStudents(course_students) {\n    let token = localStorage.getItem(\"loggedInUser\");\n    let AuthStr = \"Bearer \".concat(token);\n    axios({\n      method: \"get\",\n      url: url + \"users/student\",\n      headers: { Authorization: AuthStr },\n    }).then(\n      (response) => {\n        console.log(response);\n        var newArray = response.data.filter(function (student) {\n          return !course_students.some((p) => p.id === student.id);\n        });\n        let temp = this.state.usersTable;\n        temp[1] = newArray;\n        let temp2 = this.state.users;\n        temp2[1] = response.data;\n        this.setState({ users: temp2, usersTable: temp });\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  getCourse() {\n    const { id } = this.props.match.params;\n    axios({\n      method: \"get\",\n      url: url + \"course/\" + id,\n    }).then(\n      (response) => {\n        this.setState({ course: response.data });\n        this.getProfessors(response.data.professors);\n        this.getStudents(response.data.students);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  resetAll(index) {\n    let course_list = this.state.course.professors;\n    let users = this.state.users[index];\n    if (index == 1) {\n      course_list = this.state.course.students;\n    }\n\n    var newArray = users.filter(function (user) {\n      return !course_list.some((u) => u.id === user.id);\n    });\n    if (index == 0) {\n      this.setState({\n        showModal: [false, false],\n        usersToAdd: [[], []],\n        searchUsers: [\"\", \"\"],\n        usersTable: [newArray, this.state.usersTable[1]],\n      });\n    } else {\n      this.setState({\n        showModal: [false, false],\n        usersToAdd: [[], []],\n        searchUsers: [\"\", \"\"],\n        usersTable: [this.state.usersTable[0], newArray],\n      });\n    }\n  }\n\n  handleUsersSearch(e, index) {\n    let search = e.target.value;\n    let course_list = this.state.course.professors;\n    let selected = this.state.usersToAdd[index];\n    if (index === 1) {\n      course_list = this.state.course.students;\n    }\n    let users = this.state.users[index];\n    var temp = users.filter(function (user) {\n      return !(\n        course_list.some((p) => p.id === user.id) ||\n        selected.some((p) => p.id === user.id)\n      );\n    });\n    var newArray = temp.filter(function (u) {\n      return (\n        u.user.name.toLowerCase().includes(search.toLowerCase()) ||\n        u.user.last_name.toLowerCase().includes(search.toLowerCase())\n      );\n    });\n    if (index == 0) {\n      this.setState({\n        searchUsers: [search, \"\"],\n        usersTable: [newArray, this.state.usersTable[1]],\n      });\n    } else {\n      this.setState({\n        searchUsers: [\"\", search],\n        usersTable: [this.state.usersTable[0], newArray],\n      });\n    }\n  }\n\n  addUserToList(user, index) {\n    let search = this.state.searchUsers[index];\n    let course_list = this.state.course.professors;\n    let list_to_add = this.state.usersToAdd[index];\n    list_to_add.push(user);\n    if (index === 1) {\n      course_list = this.state.course.students;\n    }\n    let users = this.state.users[index];\n    var temp2 = users.filter(function (user) {\n      return !(\n        course_list.some((p) => p.id === user.id) ||\n        list_to_add.some((p) => p.id === user.id)\n      );\n    });\n    var newArray = temp2.filter(function (u) {\n      return (\n        u.user.name.toLowerCase().includes(search.toLowerCase()) ||\n        u.user.last_name.toLowerCase().includes(search.toLowerCase())\n      );\n    });\n    if (index == 0) {\n      this.setState({\n        usersToAdd: [list_to_add, this.state.usersToAdd[1]],\n        usersTable: [newArray, this.state.usersTable[1]],\n      });\n    } else {\n      this.setState({\n        usersToAdd: [this.state.usersToAdd[0], list_to_add],\n        usersTable: [this.state.usersTable[0], newArray],\n      });\n    }\n  }\n\n  removeUserFromList(user, index) {\n    let list_to_add = this.state.usersToAdd[index];\n    let afterFilter = list_to_add.filter(function (p) {\n      return p.id !== user.id;\n    });\n\n    let search = this.state.searchUsers[index];\n    let course_list = this.state.course.professors;\n    if (index === 1) {\n      course_list = this.state.course.students;\n    }\n    let users = this.state.users[index];\n    var temp2 = users.filter(function (u) {\n      return !(\n        course_list.some((p) => p.id === u.id) ||\n        afterFilter.some((p) => p.id === u.id)\n      );\n    });\n    var newArray = temp2.filter(function (u) {\n      return (\n        u.user.name.toLowerCase().includes(search.toLowerCase()) ||\n        u.user.last_name.toLowerCase().includes(search.toLowerCase())\n      );\n    });\n    if (index == 0) {\n      this.setState({\n        usersToAdd: [afterFilter, this.state.usersToAdd[1]],\n        usersTable: [newArray, this.state.usersTable[1]],\n      });\n    } else {\n      this.setState({\n        usersToAdd: [this.state.usersToAdd[0], afterFilter],\n        usersTable: [this.state.usersTable[0], newArray],\n      });\n    }\n    this.setState({ professorsTable: newArray, professorsToAdd: afterFilter });\n  }\n\n  addUsers(role) {\n    const { id } = this.props.match.params;\n    let token = localStorage.getItem(\"loggedInUser\");\n    let AuthStr = \"Bearer \".concat(token);\n    let list = this.state.usersToAdd[0];\n    if (role == \"student\") {\n      list = this.state.usersToAdd[1];\n    }\n    let data = {\n      role: role,\n      users: list,\n    };\n    axios({\n      method: \"put\",\n      url: url + \"course/\" + id,\n      headers: { Authorization: AuthStr },\n      data: data,\n    }).then(\n      (response) => {\n        this.setState({ course: response.data });\n        this.resetAll(0);\n        this.resetAll(1);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  render() {\n    const role = localStorage.getItem(\"role\");\n    const professors = this.state.course.professors;\n    const students = this.state.course.students;\n    let ret = (\n      <CCol xs=\"12\" lg=\"12\">\n        <CModal\n          show={this.state.showModal[0]}\n          onClose={() => this.resetAll(0)}\n          size=\"lg\"\n        >\n          <CModalHeader closeButton>\n            <CModalTitle>Add professors to course</CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <CCol xs=\"12\" lg=\"12\">\n              <CRow>\n                <CCol xs=\"6\" lg=\"6\">\n                  <CInput\n                    type=\"text\"\n                    id=\"ksTitle\"\n                    name=\"ksTitle\"\n                    onChange={(e) => this.handleUsersSearch(e, 0)}\n                    value={this.state.searchUsers[0]}\n                    placeholder=\"search\"\n                  />\n                </CCol>\n              </CRow>\n              <CRow>\n                <CCol xs=\"6\" lg=\"6\">\n                  <CDataTable\n                    items={this.state.usersTable[0]}\n                    fields={fieldsAdd}\n                    striped\n                    itemsPerPage={5}\n                    pagination\n                    scopedSlots={{\n                      \"#\": (item, index) => <td>{index + 1}</td>,\n                      name: (item, index) => <td>{item.user.name}</td>,\n                      last_name: (item, index) => (\n                        <td>{item.user.last_name}</td>\n                      ),\n                      add: (item, index) => (\n                        <td>\n                          <CButton\n                            color=\"success\"\n                            onClick={(event) => this.addUserToList(item, 0)}\n                          >\n                            +\n                          </CButton>\n                        </td>\n                      ),\n                    }}\n                  />\n                </CCol>\n                <CCol xs=\"6\" lg=\"6\">\n                  <CDataTable\n                    items={this.state.usersToAdd[0]}\n                    fields={fieldsRemove}\n                    striped\n                    itemsPerPage={5}\n                    pagination\n                    scopedSlots={{\n                      \"#\": (item, index) => <td>{index + 1}</td>,\n                      name: (item, index) => <td>{item.user.name}</td>,\n                      last_name: (item, index) => (\n                        <td>{item.user.last_name}</td>\n                      ),\n                      remove: (item, index) => (\n                        <td>\n                          <CButton\n                            color=\"danger\"\n                            onClick={(event) =>\n                              this.removeUserFromList(item, 0)\n                            }\n                          >\n                            -\n                          </CButton>\n                        </td>\n                      ),\n                    }}\n                  />\n                </CCol>\n              </CRow>\n            </CCol>\n          </CModalBody>\n          <CModalFooter>\n            <CButton\n              disabled={this.state.buttonDisabled}\n              color=\"success\"\n              onClick={() => this.addUsers(\"professor\")}\n            >\n              Add professors\n            </CButton>{\" \"}\n            <CButton color=\"danger\" onClick={() => this.resetAll(0)}>\n              Cancel\n            </CButton>\n          </CModalFooter>\n        </CModal>\n        <CModal\n          show={this.state.showModal[1]}\n          onClose={() => this.resetAll(1)}\n          size=\"lg\"\n        >\n          <CModalHeader closeButton>\n            <CModalTitle>Add students to course</CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <CCol xs=\"12\" lg=\"12\">\n              <CRow>\n                <CCol xs=\"6\" lg=\"6\">\n                  <CInput\n                    type=\"text\"\n                    id=\"ksTitle\"\n                    name=\"ksTitle\"\n                    onChange={(e) => this.handleUsersSearch(e, 1)}\n                    value={this.state.searchUsers[1]}\n                    placeholder=\"search\"\n                  />\n                </CCol>\n              </CRow>\n              <CRow>\n                <CCol xs=\"6\" lg=\"6\">\n                  <CDataTable\n                    items={this.state.usersTable[1]}\n                    fields={fieldsAdd}\n                    striped\n                    itemsPerPage={5}\n                    pagination\n                    scopedSlots={{\n                      \"#\": (item, index) => <td>{index + 1}</td>,\n                      name: (item, index) => <td>{item.user.name}</td>,\n                      last_name: (item, index) => (\n                        <td>{item.user.last_name}</td>\n                      ),\n                      add: (item, index) => (\n                        <td>\n                          <CButton\n                            color=\"success\"\n                            onClick={(event) => this.addUserToList(item, 1)}\n                          >\n                            +\n                          </CButton>\n                        </td>\n                      ),\n                    }}\n                  />\n                </CCol>\n                <CCol xs=\"6\" lg=\"6\">\n                  <CDataTable\n                    items={this.state.usersToAdd[1]}\n                    fields={fieldsRemove}\n                    striped\n                    itemsPerPage={5}\n                    pagination\n                    scopedSlots={{\n                      \"#\": (item, index) => <td>{index + 1}</td>,\n                      name: (item, index) => <td>{item.user.name}</td>,\n                      last_name: (item, index) => (\n                        <td>{item.user.last_name}</td>\n                      ),\n                      remove: (item, index) => (\n                        <td>\n                          <CButton\n                            color=\"danger\"\n                            onClick={(event) =>\n                              this.removeUserFromList(item, 1)\n                            }\n                          >\n                            -\n                          </CButton>\n                        </td>\n                      ),\n                    }}\n                  />\n                </CCol>\n              </CRow>\n            </CCol>\n          </CModalBody>\n          <CModalFooter>\n            <CButton\n              disabled={this.state.buttonDisabled}\n              color=\"success\"\n              onClick={() => this.addUsers(\"student\")}\n            >\n              Add students\n            </CButton>{\" \"}\n            <CButton color=\"danger\" onClick={() => this.resetAll(1)}>\n              Cancel\n            </CButton>\n          </CModalFooter>\n        </CModal>\n\n        <CRow>\n          <h2>{this.state.course.title}</h2>\n        </CRow>\n        <CTabs activeTab=\"people\">\n          <br/>\n          <CNav variant=\"tabs\">\n            <CNavItem>\n              <CNavLink data-tab=\"people\">People</CNavLink>\n            </CNavItem>\n            <CNavItem>\n              <CNavLink data-tab=\"tests\">Tests</CNavLink>\n            </CNavItem>\n            <CNavItem>\n              <CNavLink data-tab=\"knowledge_spaces\">Knowledge Spaces</CNavLink>\n            </CNavItem>\n          </CNav>\n          <CTabContent>\n            <CTabPane data-tab=\"people\">\n              <CRow>\n                <CCol xs=\"6\" lg=\"6\">\n                  <CCard>\n                    <CCardHeader>\n                      <h4>Professors</h4>\n                    </CCardHeader>\n                    <CCardBody>\n                      <CDataTable\n                        items={professors}\n                        fields={fields}\n                        striped\n                        itemsPerPage={5}\n                        pagination\n                        scopedSlots={{\n                          \"#\": (item, index) => <td>{index + 1}</td>,\n                          name: (item, index) => <td>{item.user.name}</td>,\n                          last_name: (item, index) => (\n                            <td>{item.user.last_name}</td>\n                          ),\n                          email: (item, index) => <td>{item.user.email}</td>,\n                        }}\n                      />\n                    </CCardBody>\n                    <CCardFooter>\n                      <CButton\n                        hidden={role !== \"ROLE_ADMIN\"}\n                        style={{ marginBottom: \"20px\" }}\n                        id=\"confirmButton\"\n                        onClick={() =>\n                          this.setState({ showModal: [true, false] })\n                        }\n                        color=\"success\"\n                        className=\"px-4\"\n                      >\n                        Add professors\n                      </CButton>\n                    </CCardFooter>\n                  </CCard>\n                </CCol>\n                <CCol xs=\"6\" lg=\"6\">\n                  <CCard>\n                    <CCardHeader>\n                      <h4>Students</h4>\n                    </CCardHeader>\n                    <CCardBody>\n                      <CDataTable\n                        items={students}\n                        fields={fields}\n                        striped\n                        itemsPerPage={5}\n                        pagination\n                        scopedSlots={{\n                          \"#\": (item, index) => <td>{index + 1}</td>,\n                          name: (item, index) => <td>{item.user.name}</td>,\n                          last_name: (item, index) => (\n                            <td>{item.user.last_name}</td>\n                          ),\n                          email: (item, index) => <td>{item.user.email}</td>,\n                        }}\n                      />\n                    </CCardBody>\n                    <CCardFooter>\n                      <CButton\n                        hidden={\n                          role !== \"ROLE_ADMIN\" && role !== \"ROLE_PROFESSOR\"\n                        }\n                        style={{ marginBottom: \"20px\" }}\n                        id=\"confirmButton\"\n                        onClick={() =>\n                          this.setState({ showModal: [false, true] })\n                        }\n                        color=\"success\"\n                        className=\"px-4\"\n                      >\n                        Add students\n                      </CButton>\n                    </CCardFooter>\n                  </CCard>\n                </CCol>\n              </CRow>\n            </CTabPane>\n            <CTabPane data-tab=\"tests\">\n              <br/>\n              <TestsPage course_id ={this.state.course.id} />\n            </CTabPane>\n            <CTabPane data-tab=\"knowledge_spaces\">\n            <br/>\n              <KnowledgeSpace course_id={this.state.course.id}/>\n            </CTabPane>\n          </CTabContent>\n        </CTabs>\n      </CCol>\n    );\n    return this.rolesMatched() ? ret : <Redirect to=\"/courses\" />;\n  }\n}\n\nexport default CoursePage;\n","/home/milica/Desktop/Master/SOTIS/frontend/src/views/pages/Test/ShowTest.js",[],"/home/milica/Desktop/Master/SOTIS/frontend/src/views/pages/Test/StudentTests.js",["448","449"],{"ruleId":"450","replacedBy":"451"},{"ruleId":"452","replacedBy":"453"},{"ruleId":"454","severity":1,"message":"455","line":30,"column":7,"nodeType":"456","messageId":"457","endLine":30,"endColumn":17},{"ruleId":"454","severity":1,"message":"458","line":38,"column":7,"nodeType":"456","messageId":"457","endLine":38,"endColumn":25},{"ruleId":"454","severity":1,"message":"459","line":42,"column":7,"nodeType":"456","messageId":"457","endLine":42,"endColumn":16},{"ruleId":"460","severity":1,"message":"461","line":115,"column":36,"nodeType":"462","messageId":"463","endLine":115,"endColumn":38},{"ruleId":"460","severity":1,"message":"461","line":126,"column":28,"nodeType":"462","messageId":"463","endLine":126,"endColumn":30},{"ruleId":"460","severity":1,"message":"461","line":126,"column":58,"nodeType":"462","messageId":"463","endLine":126,"endColumn":60},{"ruleId":"460","severity":1,"message":"461","line":126,"column":87,"nodeType":"462","messageId":"463","endLine":126,"endColumn":89},{"ruleId":"460","severity":1,"message":"461","line":127,"column":33,"nodeType":"462","messageId":"463","endLine":127,"endColumn":35},{"ruleId":"460","severity":1,"message":"461","line":127,"column":62,"nodeType":"462","messageId":"463","endLine":127,"endColumn":64},{"ruleId":"460","severity":1,"message":"461","line":127,"column":98,"nodeType":"462","messageId":"463","endLine":127,"endColumn":100},{"ruleId":"460","severity":1,"message":"461","line":128,"column":29,"nodeType":"462","messageId":"463","endLine":128,"endColumn":31},{"ruleId":"460","severity":1,"message":"461","line":128,"column":58,"nodeType":"462","messageId":"463","endLine":128,"endColumn":60},{"ruleId":"464","severity":1,"message":"465","line":218,"column":23,"nodeType":"466","endLine":218,"endColumn":45},{"ruleId":"454","severity":1,"message":"467","line":18,"column":8,"nodeType":"456","messageId":"457","endLine":18,"endColumn":26},{"ruleId":"454","severity":1,"message":"468","line":2,"column":10,"nodeType":"456","messageId":"457","endLine":2,"endColumn":20},{"ruleId":"454","severity":1,"message":"469","line":5,"column":3,"nodeType":"456","messageId":"457","endLine":5,"endColumn":9},{"ruleId":"454","severity":1,"message":"470","line":10,"column":3,"nodeType":"456","messageId":"457","endLine":10,"endColumn":7},{"ruleId":"454","severity":1,"message":"471","line":13,"column":3,"nodeType":"456","messageId":"457","endLine":13,"endColumn":8},{"ruleId":"454","severity":1,"message":"472","line":14,"column":3,"nodeType":"456","messageId":"457","endLine":14,"endColumn":10},{"ruleId":"454","severity":1,"message":"473","line":20,"column":8,"nodeType":"456","messageId":"457","endLine":20,"endColumn":13},{"ruleId":"454","severity":1,"message":"474","line":24,"column":3,"nodeType":"456","messageId":"457","endLine":24,"endColumn":24},{"ruleId":"454","severity":1,"message":"475","line":25,"column":3,"nodeType":"456","messageId":"457","endLine":25,"endColumn":25},{"ruleId":"454","severity":1,"message":"476","line":26,"column":3,"nodeType":"456","messageId":"457","endLine":26,"endColumn":25},{"ruleId":"454","severity":1,"message":"477","line":29,"column":7,"nodeType":"456","messageId":"457","endLine":29,"endColumn":10},{"ruleId":"454","severity":1,"message":"478","line":45,"column":9,"nodeType":"456","messageId":"457","endLine":45,"endColumn":16},{"ruleId":"454","severity":1,"message":"479","line":181,"column":13,"nodeType":"456","messageId":"457","endLine":181,"endColumn":18},{"ruleId":"454","severity":1,"message":"480","line":181,"column":20,"nodeType":"456","messageId":"457","endLine":181,"endColumn":28},{"ruleId":"481","severity":1,"message":"482","line":245,"column":42,"nodeType":"483","messageId":"484","endLine":245,"endColumn":51},{"ruleId":"454","severity":1,"message":"485","line":29,"column":3,"nodeType":"456","messageId":"457","endLine":29,"endColumn":7},{"ruleId":"454","severity":1,"message":"486","line":38,"column":3,"nodeType":"456","messageId":"457","endLine":38,"endColumn":22},{"ruleId":"454","severity":1,"message":"487","line":39,"column":3,"nodeType":"456","messageId":"457","endLine":39,"endColumn":12},{"ruleId":"454","severity":1,"message":"488","line":40,"column":3,"nodeType":"456","messageId":"457","endLine":40,"endColumn":24},{"ruleId":"454","severity":1,"message":"489","line":43,"column":3,"nodeType":"456","messageId":"457","endLine":43,"endColumn":14},{"ruleId":"454","severity":1,"message":"490","line":50,"column":10,"nodeType":"456","messageId":"457","endLine":50,"endColumn":28},{"ruleId":"454","severity":1,"message":"491","line":51,"column":9,"nodeType":"456","messageId":"457","endLine":51,"endColumn":17},{"ruleId":"460","severity":1,"message":"492","line":755,"column":13,"nodeType":"462","messageId":"463","endLine":755,"endColumn":15},{"ruleId":"460","severity":1,"message":"492","line":758,"column":18,"nodeType":"462","messageId":"463","endLine":758,"endColumn":20},{"ruleId":"454","severity":1,"message":"493","line":836,"column":11,"nodeType":"456","messageId":"457","endLine":836,"endColumn":22},{"ruleId":"481","severity":1,"message":"482","line":874,"column":58,"nodeType":"483","messageId":"484","endLine":874,"endColumn":67},{"ruleId":"454","severity":1,"message":"494","line":1,"column":17,"nodeType":"456","messageId":"457","endLine":1,"endColumn":26},{"ruleId":"454","severity":1,"message":"495","line":5,"column":3,"nodeType":"456","messageId":"457","endLine":5,"endColumn":7},{"ruleId":"454","severity":1,"message":"496","line":6,"column":3,"nodeType":"456","messageId":"457","endLine":6,"endColumn":8},{"ruleId":"454","severity":1,"message":"497","line":7,"column":3,"nodeType":"456","messageId":"457","endLine":7,"endColumn":12},{"ruleId":"454","severity":1,"message":"498","line":9,"column":3,"nodeType":"456","messageId":"457","endLine":9,"endColumn":14},{"ruleId":"454","severity":1,"message":"499","line":10,"column":3,"nodeType":"456","messageId":"457","endLine":10,"endColumn":9},{"ruleId":"454","severity":1,"message":"500","line":11,"column":3,"nodeType":"456","messageId":"457","endLine":11,"endColumn":9},{"ruleId":"454","severity":1,"message":"472","line":12,"column":3,"nodeType":"456","messageId":"457","endLine":12,"endColumn":10},{"ruleId":"454","severity":1,"message":"501","line":13,"column":3,"nodeType":"456","messageId":"457","endLine":13,"endColumn":12},{"ruleId":"454","severity":1,"message":"502","line":14,"column":3,"nodeType":"456","messageId":"457","endLine":14,"endColumn":13},{"ruleId":"454","severity":1,"message":"503","line":15,"column":3,"nodeType":"456","messageId":"457","endLine":15,"endColumn":7},{"ruleId":"454","severity":1,"message":"504","line":16,"column":3,"nodeType":"456","messageId":"457","endLine":16,"endColumn":13},{"ruleId":"454","severity":1,"message":"505","line":17,"column":3,"nodeType":"456","messageId":"457","endLine":17,"endColumn":8},{"ruleId":"454","severity":1,"message":"471","line":18,"column":3,"nodeType":"456","messageId":"457","endLine":18,"endColumn":8},{"ruleId":"454","severity":1,"message":"506","line":19,"column":3,"nodeType":"456","messageId":"457","endLine":19,"endColumn":13},{"ruleId":"454","severity":1,"message":"507","line":20,"column":3,"nodeType":"456","messageId":"457","endLine":20,"endColumn":17},{"ruleId":"454","severity":1,"message":"508","line":22,"column":8,"nodeType":"456","messageId":"457","endLine":22,"endColumn":13},{"ruleId":"454","severity":1,"message":"509","line":29,"column":7,"nodeType":"456","messageId":"457","endLine":29,"endColumn":13},{"ruleId":"454","severity":1,"message":"510","line":30,"column":7,"nodeType":"456","messageId":"457","endLine":30,"endColumn":11},{"ruleId":"454","severity":1,"message":"494","line":1,"column":17,"nodeType":"456","messageId":"457","endLine":1,"endColumn":26},{"ruleId":"454","severity":1,"message":"495","line":5,"column":3,"nodeType":"456","messageId":"457","endLine":5,"endColumn":7},{"ruleId":"454","severity":1,"message":"500","line":11,"column":3,"nodeType":"456","messageId":"457","endLine":11,"endColumn":9},{"ruleId":"454","severity":1,"message":"502","line":14,"column":3,"nodeType":"456","messageId":"457","endLine":14,"endColumn":13},{"ruleId":"454","severity":1,"message":"505","line":16,"column":3,"nodeType":"456","messageId":"457","endLine":16,"endColumn":8},{"ruleId":"454","severity":1,"message":"471","line":17,"column":3,"nodeType":"456","messageId":"457","endLine":17,"endColumn":8},{"ruleId":"454","severity":1,"message":"508","line":21,"column":8,"nodeType":"456","messageId":"457","endLine":21,"endColumn":13},{"ruleId":"454","severity":1,"message":"494","line":1,"column":17,"nodeType":"456","messageId":"457","endLine":1,"endColumn":26},{"ruleId":"454","severity":1,"message":"511","line":4,"column":10,"nodeType":"456","messageId":"457","endLine":4,"endColumn":25},{"ruleId":"454","severity":1,"message":"499","line":14,"column":3,"nodeType":"456","messageId":"457","endLine":14,"endColumn":9},{"ruleId":"454","severity":1,"message":"502","line":17,"column":3,"nodeType":"456","messageId":"457","endLine":17,"endColumn":13},{"ruleId":"454","severity":1,"message":"469","line":22,"column":3,"nodeType":"456","messageId":"457","endLine":22,"endColumn":9},{"ruleId":"454","severity":1,"message":"491","line":28,"column":10,"nodeType":"456","messageId":"457","endLine":28,"endColumn":18},{"ruleId":"454","severity":1,"message":"479","line":117,"column":13,"nodeType":"456","messageId":"457","endLine":117,"endColumn":18},{"ruleId":"454","severity":1,"message":"480","line":117,"column":20,"nodeType":"456","messageId":"457","endLine":117,"endColumn":28},{"ruleId":"454","severity":1,"message":"494","line":1,"column":17,"nodeType":"456","messageId":"457","endLine":1,"endColumn":26},{"ruleId":"454","severity":1,"message":"501","line":14,"column":5,"nodeType":"456","messageId":"457","endLine":14,"endColumn":14},{"ruleId":"454","severity":1,"message":"494","line":1,"column":17,"nodeType":"456","messageId":"457","endLine":1,"endColumn":26},{"ruleId":"512","severity":1,"message":"513","line":106,"column":1,"nodeType":"514","endLine":163,"endColumn":3},{"ruleId":"454","severity":1,"message":"494","line":1,"column":17,"nodeType":"456","messageId":"457","endLine":1,"endColumn":26},{"ruleId":"454","severity":1,"message":"496","line":9,"column":3,"nodeType":"456","messageId":"457","endLine":9,"endColumn":8},{"ruleId":"454","severity":1,"message":"497","line":10,"column":3,"nodeType":"456","messageId":"457","endLine":10,"endColumn":12},{"ruleId":"454","severity":1,"message":"515","line":11,"column":3,"nodeType":"456","messageId":"457","endLine":11,"endColumn":14},{"ruleId":"454","severity":1,"message":"504","line":13,"column":3,"nodeType":"456","messageId":"457","endLine":13,"endColumn":13},{"ruleId":"454","severity":1,"message":"502","line":16,"column":3,"nodeType":"456","messageId":"457","endLine":16,"endColumn":13},{"ruleId":"454","severity":1,"message":"509","line":24,"column":7,"nodeType":"456","messageId":"457","endLine":24,"endColumn":13},{"ruleId":"454","severity":1,"message":"494","line":1,"column":17,"nodeType":"456","messageId":"457","endLine":1,"endColumn":26},{"ruleId":"454","severity":1,"message":"498","line":17,"column":3,"nodeType":"456","messageId":"457","endLine":17,"endColumn":14},{"ruleId":"454","severity":1,"message":"502","line":18,"column":3,"nodeType":"456","messageId":"457","endLine":18,"endColumn":13},{"ruleId":"454","severity":1,"message":"471","line":21,"column":3,"nodeType":"456","messageId":"457","endLine":21,"endColumn":8},{"ruleId":"454","severity":1,"message":"455","line":41,"column":7,"nodeType":"456","messageId":"457","endLine":41,"endColumn":17},{"ruleId":"454","severity":1,"message":"458","line":45,"column":7,"nodeType":"456","messageId":"457","endLine":45,"endColumn":25},{"ruleId":"454","severity":1,"message":"459","line":47,"column":7,"nodeType":"456","messageId":"457","endLine":47,"endColumn":16},{"ruleId":"460","severity":1,"message":"461","line":178,"column":36,"nodeType":"462","messageId":"463","endLine":178,"endColumn":38},{"ruleId":"460","severity":1,"message":"461","line":188,"column":26,"nodeType":"462","messageId":"463","endLine":188,"endColumn":28},{"ruleId":"460","severity":1,"message":"461","line":189,"column":30,"nodeType":"462","messageId":"463","endLine":189,"endColumn":32},{"ruleId":"460","severity":1,"message":"461","line":190,"column":29,"nodeType":"462","messageId":"463","endLine":190,"endColumn":31},{"ruleId":"460","severity":1,"message":"461","line":191,"column":30,"nodeType":"462","messageId":"463","endLine":191,"endColumn":32},{"ruleId":"460","severity":1,"message":"461","line":192,"column":29,"nodeType":"462","messageId":"463","endLine":192,"endColumn":31},{"ruleId":"460","severity":1,"message":"461","line":193,"column":36,"nodeType":"462","messageId":"463","endLine":193,"endColumn":38},{"ruleId":"460","severity":1,"message":"461","line":194,"column":26,"nodeType":"462","messageId":"463","endLine":194,"endColumn":28},{"ruleId":"460","severity":1,"message":"461","line":195,"column":29,"nodeType":"462","messageId":"463","endLine":195,"endColumn":31},{"ruleId":"454","severity":1,"message":"494","line":1,"column":17,"nodeType":"456","messageId":"457","endLine":1,"endColumn":26},{"ruleId":"454","severity":1,"message":"506","line":19,"column":3,"nodeType":"456","messageId":"457","endLine":19,"endColumn":13},{"ruleId":"454","severity":1,"message":"499","line":20,"column":3,"nodeType":"456","messageId":"457","endLine":20,"endColumn":9},{"ruleId":"454","severity":1,"message":"516","line":22,"column":3,"nodeType":"456","messageId":"457","endLine":22,"endColumn":12},{"ruleId":"460","severity":1,"message":"492","line":145,"column":15,"nodeType":"462","messageId":"463","endLine":145,"endColumn":17},{"ruleId":"460","severity":1,"message":"492","line":152,"column":15,"nodeType":"462","messageId":"463","endLine":152,"endColumn":17},{"ruleId":"460","severity":1,"message":"492","line":189,"column":15,"nodeType":"462","messageId":"463","endLine":189,"endColumn":17},{"ruleId":"460","severity":1,"message":"492","line":223,"column":15,"nodeType":"462","messageId":"463","endLine":223,"endColumn":17},{"ruleId":"460","severity":1,"message":"492","line":260,"column":15,"nodeType":"462","messageId":"463","endLine":260,"endColumn":17},{"ruleId":"460","severity":1,"message":"492","line":279,"column":14,"nodeType":"462","messageId":"463","endLine":279,"endColumn":16},{"ruleId":"454","severity":1,"message":"510","line":24,"column":7,"nodeType":"456","messageId":"457","endLine":24,"endColumn":11},{"ruleId":"454","severity":1,"message":"517","line":49,"column":13,"nodeType":"456","messageId":"457","endLine":49,"endColumn":15},"no-native-reassign",["518"],"no-negated-in-lhs",["519"],"no-unused-vars","'phoneRegex' is assigned a value but never used.","Identifier","unusedVar","'medicalNumberRegex' is assigned a value but never used.","'formValid' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'templateNavigation' is defined but never used.","'useHistory' is defined but never used.","'CBadge' is defined but never used.","'CImg' is defined but never used.","'CLink' is defined but never used.","'CButton' is defined but never used.","'axios' is defined but never used.","'TheHeaderDropdownMssg' is defined but never used.","'TheHeaderDropdownNotif' is defined but never used.","'TheHeaderDropdownTasks' is defined but never used.","'url' is assigned a value but never used.","'history' is assigned a value but never used.","'match' is assigned a value but never used.","'location' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","'Node' is defined but never used.","'COMPLEX_CIRCLE_TYPE' is defined but never used.","'POLY_TYPE' is defined but never used.","'SPECIAL_CHILD_SUBTYPE' is defined but never used.","'SKINNY_TYPE' is defined but never used.","'RoleAwareComponent' is defined but never used.","'Redirect' is defined but never used.","Expected '===' and instead saw '=='.","'question_id' is assigned a value but never used.","'Component' is defined but never used.","'CRow' is defined but never used.","'CCard' is defined but never used.","'CCardBody' is defined but never used.","'CCardFooter' is defined but never used.","'CLabel' is defined but never used.","'CInput' is defined but never used.","'CCollapse' is defined but never used.","'CContainer' is defined but never used.","'CCol' is defined but never used.","'CDataTable' is defined but never used.","'CFade' is defined but never used.","'CFormGroup' is defined but never used.","'CInputCheckbox' is defined but never used.","'CIcon' is defined but never used.","'fields' is assigned a value but never used.","'role' is assigned a value but never used.","'FontAwesomeIcon' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'CCardHeader' is defined but never used.","'CFormText' is defined but never used.","'id' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]