[{"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/index.js":"1","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/polyfill.js":"2","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/App.js":"3","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/serviceWorker.js":"4","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/store.js":"5","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/assets/icons/index.js":"6","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/pages/page404/Page404.js":"7","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/pages/page500/Page500.js":"8","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/assets/icons/logo-negative.js":"9","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/assets/icons/logo.js":"10","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/assets/icons/sygnet.js":"11","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/pages/LoginAndRegistration/Login/Login.js":"12","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/containers/TheLayout.js":"13","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/pages/LoginAndRegistration/Registration/Register.js":"14","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/containers/index.js":"15","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/containers/TheFooter.js":"16","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/containers/TheHeader.js":"17","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/containers/TheContent.js":"18","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/containers/TheHeaderDropdown.js":"19","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/containers/TheHeaderDropdownMssg.js":"20","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/containers/TheHeaderDropdownNotif.js":"21","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/containers/TheHeaderDropdownTasks.js":"22","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/containers/TheSidebar.js":"23","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/routes.js":"24","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/containers/_nav.js":"25","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/containers/_nav_professor.js":"26","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/containers/_nav_student.js":"27","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/containers/_nav_admin.js":"28","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/containers/_navigation.js":"29","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/pages/KnowledgeSpace/KnowledgeSpace.js":"30","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/pages/Graph/Graph.js":"31","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/pages/StudentsPage.js":"32","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/pages/TestsPage.js":"33","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/pages/NewTest.js":"34","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/charts/Charts.js":"35","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/users/Users.js":"36","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/users/User.js":"37","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/widgets/Widgets.js":"38","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/notifications/toaster/Toaster.js":"39","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/notifications/badges/Badges.js":"40","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/notifications/alerts/Alerts.js":"41","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/base/tables/Tables.js":"42","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/base/paginations/Pagnations.js":"43","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/base/navbars/Navbars.js":"44","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/base/popovers/Popovers.js":"45","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/base/progress-bar/ProgressBar.js":"46","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/base/tabs/Tabs.js":"47","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/base/tooltips/Tooltips.js":"48","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/buttons/button-groups/ButtonGroups.js":"49","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/icons/coreui-icons/CoreUIIcons.js":"50","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/icons/flags/Flags.js":"51","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/icons/brands/Brands.js":"52","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/dashboard/Dashboard.js":"53","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/notifications/modals/Modals.js":"54","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/base/collapses/Collapses.js":"55","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/base/list-groups/ListGroups.js":"56","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/base/navs/Navs.js":"57","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/buttons/brand-buttons/BrandButtons.js":"58","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/base/cards/Cards.js":"59","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/buttons/button-dropdowns/ButtonDropdowns.js":"60","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/base/switches/Switches.js":"61","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/buttons/buttons/Buttons.js":"62","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/base/forms/BasicForms.js":"63","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/pages/Graph/graph-config.js":"64","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/widgets/WidgetsBrand.js":"65","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/widgets/WidgetsDropdown.js":"66","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/charts/MainChartExample.js":"67","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/users/UsersData.js":"68","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/charts/ChartLineSimple.js":"69","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/charts/ChartBarSimple.js":"70","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/reusable/index.js":"71","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/reusable/DocsLink.js":"72","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/pages/TestPage.js":"73","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/pages/TakeTest.js":"74"},{"size":718,"mtime":1607519916928,"results":"75","hashOfConfig":"76"},{"size":1429,"mtime":1607519916928,"results":"77","hashOfConfig":"76"},{"size":1433,"mtime":1607519916928,"results":"78","hashOfConfig":"76"},{"size":4686,"mtime":1607519916928,"results":"79","hashOfConfig":"76"},{"size":324,"mtime":1607519916928,"results":"80","hashOfConfig":"76"},{"size":3813,"mtime":1607519916928,"results":"81","hashOfConfig":"76"},{"size":1294,"mtime":1607519916932,"results":"82","hashOfConfig":"76"},{"size":1313,"mtime":1607519916932,"results":"83","hashOfConfig":"76"},{"size":6933,"mtime":1607519916928,"results":"84","hashOfConfig":"76"},{"size":6920,"mtime":1607519916928,"results":"85","hashOfConfig":"76"},{"size":978,"mtime":1607519916928,"results":"86","hashOfConfig":"76"},{"size":4398,"mtime":1608720835531,"results":"87","hashOfConfig":"76"},{"size":557,"mtime":1607519916928,"results":"88","hashOfConfig":"76"},{"size":12047,"mtime":1607519916932,"results":"89","hashOfConfig":"76"},{"size":596,"mtime":1607519916928,"results":"90","hashOfConfig":"76"},{"size":569,"mtime":1607519916928,"results":"91","hashOfConfig":"76"},{"size":3747,"mtime":1608720835527,"results":"92","hashOfConfig":"76"},{"size":1091,"mtime":1608720835527,"results":"93","hashOfConfig":"76"},{"size":2696,"mtime":1607519916928,"results":"94","hashOfConfig":"76"},{"size":4788,"mtime":1607519916928,"results":"95","hashOfConfig":"76"},{"size":2543,"mtime":1607519916928,"results":"96","hashOfConfig":"76"},{"size":2253,"mtime":1607519916928,"results":"97","hashOfConfig":"76"},{"size":1841,"mtime":1607519916928,"results":"98","hashOfConfig":"76"},{"size":5785,"mtime":1608114882966,"results":"99","hashOfConfig":"76"},{"size":5025,"mtime":1608114882962,"results":"100","hashOfConfig":"76"},{"size":569,"mtime":1608720835527,"results":"101","hashOfConfig":"76"},{"size":248,"mtime":1608720835527,"results":"102","hashOfConfig":"76"},{"size":483,"mtime":1607519916928,"results":"103","hashOfConfig":"76"},{"size":570,"mtime":1607519916928,"results":"104","hashOfConfig":"76"},{"size":5833,"mtime":1608720835531,"results":"105","hashOfConfig":"76"},{"size":22269,"mtime":1609327026837,"results":"106","hashOfConfig":"76"},{"size":2296,"mtime":1608720835531,"results":"107","hashOfConfig":"76"},{"size":4861,"mtime":1608720835535,"results":"108","hashOfConfig":"76"},{"size":12702,"mtime":1608720835531,"results":"109","hashOfConfig":"76"},{"size":5779,"mtime":1607519916932,"results":"110","hashOfConfig":"76"},{"size":2132,"mtime":1607519916932,"results":"111","hashOfConfig":"76"},{"size":1200,"mtime":1607519916932,"results":"112","hashOfConfig":"76"},{"size":12301,"mtime":1607519916932,"results":"113","hashOfConfig":"76"},{"size":5328,"mtime":1607519916932,"results":"114","hashOfConfig":"76"},{"size":3605,"mtime":1607519916932,"results":"115","hashOfConfig":"76"},{"size":5910,"mtime":1607519916932,"results":"116","hashOfConfig":"76"},{"size":5048,"mtime":1607519916928,"results":"117","hashOfConfig":"76"},{"size":2166,"mtime":1607519916928,"results":"118","hashOfConfig":"76"},{"size":5774,"mtime":1607519916928,"results":"119","hashOfConfig":"76"},{"size":2910,"mtime":1607519916928,"results":"120","hashOfConfig":"76"},{"size":2970,"mtime":1607519916928,"results":"121","hashOfConfig":"76"},{"size":5618,"mtime":1607519916928,"results":"122","hashOfConfig":"76"},{"size":2717,"mtime":1607519916928,"results":"123","hashOfConfig":"76"},{"size":6169,"mtime":1607519916928,"results":"124","hashOfConfig":"76"},{"size":606,"mtime":1607519916932,"results":"125","hashOfConfig":"76"},{"size":590,"mtime":1607519916932,"results":"126","hashOfConfig":"76"},{"size":963,"mtime":1607519916932,"results":"127","hashOfConfig":"76"},{"size":23856,"mtime":1607519916932,"results":"128","hashOfConfig":"76"},{"size":10997,"mtime":1607519916932,"results":"129","hashOfConfig":"76"},{"size":9261,"mtime":1607519916928,"results":"130","hashOfConfig":"76"},{"size":12862,"mtime":1607519916928,"results":"131","hashOfConfig":"76"},{"size":9425,"mtime":1607519916928,"results":"132","hashOfConfig":"76"},{"size":13855,"mtime":1607519916928,"results":"133","hashOfConfig":"76"},{"size":18183,"mtime":1607519916928,"results":"134","hashOfConfig":"76"},{"size":16489,"mtime":1607519916928,"results":"135","hashOfConfig":"76"},{"size":24660,"mtime":1607519916928,"results":"136","hashOfConfig":"76"},{"size":33216,"mtime":1607519916928,"results":"137","hashOfConfig":"76"},{"size":51528,"mtime":1607519916928,"results":"138","hashOfConfig":"76"},{"size":3512,"mtime":1607519916932,"results":"139","hashOfConfig":"76"},{"size":4031,"mtime":1607519916932,"results":"140","hashOfConfig":"76"},{"size":4776,"mtime":1607519916932,"results":"141","hashOfConfig":"76"},{"size":2486,"mtime":1607519916932,"results":"142","hashOfConfig":"76"},{"size":2442,"mtime":1607519916932,"results":"143","hashOfConfig":"76"},{"size":3294,"mtime":1607519916932,"results":"144","hashOfConfig":"76"},{"size":1545,"mtime":1607519916932,"results":"145","hashOfConfig":"76"},{"size":56,"mtime":1607519916928,"results":"146","hashOfConfig":"76"},{"size":581,"mtime":1607519916928,"results":"147","hashOfConfig":"76"},{"size":4070,"mtime":1608720835531,"results":"148","hashOfConfig":"76"},{"size":4851,"mtime":1608720835531,"results":"149","hashOfConfig":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},"bmb6j6",{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"152"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"152"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"152"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"152"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"152"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"152"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"152"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"152"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"152"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"152"},"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/index.js",[],["309","310"],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/polyfill.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/App.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/serviceWorker.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/store.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/assets/icons/index.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/pages/page404/Page404.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/pages/page500/Page500.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/assets/icons/logo-negative.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/assets/icons/logo.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/assets/icons/sygnet.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/pages/LoginAndRegistration/Login/Login.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/containers/TheLayout.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/pages/LoginAndRegistration/Registration/Register.js",["311","312","313","314","315","316","317","318","319","320","321","322","323"],"import './Register.css'\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCol,\n  CContainer,\n  CForm,\n  CFormGroup,\n  CFormText,\n  CInput,\n  CLabel,\n  CLink,\n  CRow\n} from '@coreui/react'\nimport { NotificationManager, NotificationContainer } from 'react-notifications';\nimport { withRouter } from 'react-router-dom';\n\nimport 'react-notifications/lib/notifications.css';\n\nconst url = (process.env.REACT_APP_DOMAIN) + ':' + (process.env.REACT_APP_PORT) + '/';\n\nconst emailRegex = RegExp(\n  /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n);\n\nconst phoneRegex = RegExp(\n  /06[0-9]{7,8}$/\n);\n\nconst capitalLetterRegex = RegExp(\n  /^([A-Z][a-z]+)+$/\n);\n\nconst medicalNumberRegex = RegExp(\n  /[0-9]{9,10}$/\n);\n\nconst formValid = ({ formErrors, ...rest }) => {\n  let valid = true;\n\n  // validate form errors being empty\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n\n  // validate the form was filled out\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n\n  return valid;\n};\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.SendRegisterRequest = this.SendRegisterRequest.bind(this);\n\n    this.state = {\n      username: '',\n      password: '',\n      email: '',\n      firstName: '',\n      lastName: '',\n      studentId: '',\n      passwordConfirm: '',\n      formErrors: {\n        username: '',\n        password: '',\n        email: '',\n        firstName: '',\n        lastName: '',\n        studentId: '',\n        passwordConfirm: ''\n      },\n      disableSubmit: true\n    }\n  }\n\n  SendRegisterRequest = event => {\n    event.preventDefault();\n    console.log(this.state);\n    const { password, passwordConfirm } = this.state;\n    if (password !== passwordConfirm) {\n      alert(\"Passwords don't match\");\n    } else {\n      axios.post(url + 'register', {\n        username: this.state.username,\n        password: this.state.password,\n        email: this.state.email,\n        name: this.state.firstName,\n        last_name: this.state.lastName,\n        student_id: this.state.studentId\n      }\n      ).then((resp) => {\n        NotificationManager.success('Registered successfuly. Please log in', 'Success!', 4000);\n        this.props.history.push('/login');\n      }\n      )\n        .catch((error) => NotificationManager.error('Wrong input', 'Error!', 4000))\n    }\n  }\n\n  handleKeyUp = () => {\n    var empty = true;\n\n    Object.keys(this.state.formErrors).forEach(e => {\n      if (this.state.formErrors[e] != \"\") {\n        empty = false;\n      }\n    });\n\n    if (!empty) {\n      this.setState({ disableSumbit: true });\n      console.log('disabled');\n    }\n    else {\n\n      if (this.state.email != \"\" && this.state.firstName != \"\" && this.state.lastName != \"\"\n        && this.state.studentId != \"\" && this.state.password != \"\" && this.state.passwordConfirm != \"\"\n        && this.state.email != \"\" && this.state.username != \"\"\n      ) {\n        this.setState({ disableSumbit: false });\n        console.log('enabled');\n      }\n      else {\n        this.setState({ disableSumbit: true });\n        console.log('disabled');\n      }\n    }\n  }\n\n  isEmpty = (obj) => {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key))\n        return false;\n    }\n    return true;\n  }\n\n  /*handleChange(e) {\n      this.setState({...this.state, [e.target.name]: e.target.value});\n  }*/\n\n  handleChange = e => {\n    e.preventDefault();\n    const { name, value } = e.target;\n    let formErrors = { ...this.state.formErrors };\n\n    switch (name) {\n      case \"username\":\n        formErrors.username =\n          value.length < 3 ? \"Minimum 3 characaters required\" : \"\";\n        break;\n      case \"firstName\":\n        formErrors.firstName = capitalLetterRegex.test(value)\n          ? \"\"\n          : \"First name must start with a capital letter\";\n\n        if (formErrors.firstName === \"\") {\n          formErrors.firstName =\n            value.length < 3 ? \"Minimum 3 characaters required\" : \"\";\n        }\n        break;\n      case \"lastName\":\n        formErrors.lastName = capitalLetterRegex.test(value)\n          ? \"\"\n          : \"Last name must start with a capital letter\";\n\n        if (formErrors.lastName === \"\") {\n          formErrors.lastName =\n            value.length < 3 ? \"Minimum 3 characaters required\" : \"\";\n        }\n        break;\n      case \"email\":\n        formErrors.email = emailRegex.test(value)\n          ? \"\"\n          : \"Invalid email address\";\n        break;\n      case \"studentId\":\n        formErrors.studentId =\n          value.length < 3 ? \"Minimum 3 characaters required\" : \"\";\n        break;\n      case \"password\":\n        formErrors.password =\n          value.length < 8 ? \"Minimum 8 characaters required\" : \"\";\n        break;\n      case \"passwordConfirm\":\n        formErrors.passwordConfirm =\n          value.length < 8 ? \"Minimum 8 characaters required\" : \"\";\n        break;\n      default:\n        break;\n    }\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\n\n    this.handleKeyUp();\n  }\n\n  render() {\n    const { formErrors } = this.state;\n    return (\n      <div className=\"c-app c-default-layout flex-row align-items-center\">\n        <CContainer>\n          <CRow className=\"justify-content-center\">\n            <CCol md=\"9\" lg=\"7\" xl=\"6\">\n              <CCard className=\"mx-4\">\n                <CCardBody className=\"p-4\">\n                  <div className=\"col-4 welcome\">\n                    <div className=\"logo\">\n                      <h1 className=\"title\"></h1>\n                    </div>\n                  </div>\n                  <CForm onSubmit={this.SendRegisterRequest}>\n                    <CFormGroup>\n                      <h1>Register</h1>\n                      <p className=\"text-muted\">Create your account</p>\n                      <CLabel htmlFor=\"username\">Username</CLabel>\n                      <CInput type=\"text\"\n                        onKeyUp={this.handleKeyUp}\n                        className={formErrors.username.length > 0 ? \"error\" : null}\n                        id=\"username\"\n                        name=\"username\"\n                        noValidate\n                        onChange={this.handleChange}\n                        placeholder=\"Enter Username\"\n                      />\n                      {formErrors.username.length > 0 && (\n                        <CFormText className=\"help-block\"><p style={{ color: \"red\" }}>{formErrors.username}</p></CFormText>\n                      )}\n                    </CFormGroup>\n\n                    <CFormGroup>\n                      <CLabel htmlFor=\"firstName\">First Name</CLabel>\n                      <CInput type=\"text\"\n                        onKeyUp={this.handleKeyUp}\n                        className={formErrors.firstName.length > 0 ? \"error\" : null}\n                        id=\"firstName\"\n                        name=\"firstName\"\n                        noValidate\n                        onChange={this.handleChange}\n                        placeholder=\"Enter first name\"\n                      />\n                      {formErrors.firstName.length > 0 && (\n                        <CFormText className=\"help-block\"><p style={{ color: \"red\" }}>{formErrors.firstName}</p></CFormText>\n                      )}\n                    </CFormGroup>\n\n                    <CFormGroup>\n                      <CLabel htmlFor=\"lastName\">Last Name</CLabel>\n                      <CInput type=\"text\"\n                        onKeyUp={this.handleKeyUp}\n                        className={formErrors.lastName.length > 0 ? \"error\" : null}\n                        id=\"lastName\"\n                        name=\"lastName\"\n                        onChange={this.handleChange}\n                        placeholder=\"Enter last name\"\n                        noValidate\n                      />\n                      {formErrors.lastName.length > 0 && (\n                        <CFormText className=\"help-block\"><p style={{ color: \"red\" }}>{formErrors.lastName}</p></CFormText>\n                      )}\n                    </CFormGroup>\n\n                    <CFormGroup>\n                      <CLabel htmlFor=\"email\">Email Address</CLabel>\n                      <CInput type=\"email\"\n                        onKeyUp={this.handleKeyUp}\n                        className={formErrors.email.length > 0 ? \"error\" : null}\n                        id=\"email\"\n                        name=\"email\"\n                        onChange={this.handleChange}\n                        placeholder=\"Enter email address\"\n                        noValidate\n                      />\n                      {formErrors.email.length > 0 && (\n                        <CFormText className=\"help-block\"><p style={{ color: \"red\" }}>{formErrors.email}</p></CFormText>\n                      )}\n                    </CFormGroup>\n\n                    <CFormGroup>\n                      <CLabel htmlFor=\"studentId\">StudentId</CLabel>\n                      <CInput type=\"number\"\n                        onKeyUp={this.handleKeyUp}\n                        className={formErrors.studentId.length > 0 ? \"error\" : null}\n                        id=\"studentId\"\n                        name=\"studentId\"\n                        onChange={this.handleChange}\n                        placeholder=\"Enter Student Id\"\n                        noValidate\n                      />\n                      {formErrors.studentId.length > 0 && (\n                        <CFormText className=\"help-block\"><p style={{ color: \"red\" }}>{formErrors.studentId}</p></CFormText>\n                      )}\n                    </CFormGroup>\n\n                    <CFormGroup>\n                      <CLabel htmlFor=\"password\">Password</CLabel>\n                      <CInput type=\"password\"\n                        onKeyUp={this.handleKeyUp}\n                        className={formErrors.password.length > 0 ? \"error\" : null}\n                        id=\"password\"\n                        name=\"password\"\n                        onChange={this.handleChange}\n                        placeholder=\"Enter password\"\n                        noValidate\n                      />\n                      {formErrors.password.length > 0 && (\n                        <CFormText className=\"help-block\"><p style={{ color: \"red\" }}>{formErrors.password}</p></CFormText>\n                      )}\n                    </CFormGroup>\n\n                    <CFormGroup>\n                      <CLabel htmlFor=\"passwordConfirm\">Confirm Password</CLabel>\n                      <CInput type=\"password\"\n                        onKeyUp={this.handleKeyUp}\n                        className={formErrors.passwordConfirm.length > 0 ? \"error\" : null}\n                        id=\"passwordConfirm\"\n                        name=\"passwordConfirm\"\n                        onChange={this.handleChange}\n                        placeholder=\"Confirm password\"\n                        noValidate\n                      />\n                      {formErrors.passwordConfirm.length > 0 && (\n                        <CFormText className=\"help-block\"><p style={{ color: \"red\" }}>{formErrors.passwordConfirm}</p></CFormText>\n                      )}\n                    </CFormGroup>\n\n                    <CButton disabled={this.state.disableSumbit} className=\"register\" type=\"submit\" color=\"success\" block>Create Account</CButton>\n                  </CForm>\n                </CCardBody>\n                <CCardFooter className=\"p-4\">\n                  <CRow>\n                    <CCol xs=\"12\" className=\"text-right\">\n                      <CLink to=\"/login\">Already have an account?</CLink>\n                    </CCol>\n                  </CRow>\n                </CCardFooter>\n              </CCard>\n            </CCol>\n          </CRow>\n        </CContainer>\n        <div className=\"row register-form\">\n        </div>\n        <NotificationContainer />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Register);","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/containers/index.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/containers/TheFooter.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/containers/TheHeader.js",["324","325","326","327","328"],"import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from \"react-router-dom\";\nimport {\n  CHeader,\n  CToggler,\n  CHeaderBrand,\n  CHeaderNav,\n  CHeaderNavItem,\n  CHeaderNavLink,\n  CSubheader,\n  CBreadcrumbRouter,\n  CLink,\n  CButton\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\n// routes config\nimport routes from '../routes'\nimport axios from 'axios'\n\nimport { \n  TheHeaderDropdown,\n  TheHeaderDropdownMssg,\n  TheHeaderDropdownNotif,\n  TheHeaderDropdownTasks\n}  from './index'\n\nconst url = (process.env.REACT_APP_DOMAIN) + ':' + (process.env.REACT_APP_PORT) + '/';\n\nconst TheHeader = () => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector(state => state.sidebarShow)\n\n  const toggleSidebar = () => {\n    const val = [true, 'responsive'].includes(sidebarShow) ? false : 'responsive'\n    dispatch({type: 'set', sidebarShow: val})\n  }\n\n  const toggleSidebarMobile = () => {\n    const val = [false, 'responsive'].includes(sidebarShow) ? true : 'responsive'\n    dispatch({type: 'set', sidebarShow: val})\n  }\n\n  const history = useHistory();\n\nconst logOut = () => {\n      axios({\n            method: 'post',\n            url: url + 'logout',\n           // headers: { \"Authorization\": AuthStr } ,   \n        }).then((response) => {\n    localStorage.removeItem(\"loggedInUser\");\n    localStorage.removeItem(\"role\");\n    history.push('/login');        }, (error) => {\n            console.log(error);\n        });\n\n  }\n\n  return (\n    <CHeader withSubheader>\n      <CToggler\n        inHeader\n        className=\"ml-md-3 d-lg-none\"\n        onClick={toggleSidebarMobile}\n      />\n      <CToggler\n        inHeader\n        className=\"ml-3 d-md-down-none\"\n        onClick={toggleSidebar}\n      />\n      <CHeaderBrand className=\"mx-auto d-lg-none\" to=\"/\">\n        <CIcon name=\"logo\" height=\"48\" alt=\"Logo\"/>\n      </CHeaderBrand>\n\n      <CHeaderNav className=\"d-md-down-none mr-auto\">\n        <CHeaderNavItem className=\"px-3\" >\n          <CHeaderNavLink to=\"/tests\">Tests</CHeaderNavLink>\n        </CHeaderNavItem>\n        </CHeaderNav>\n          <div className=\"d-md-down-none mfe-2 c-subheader-nav\">\n            <CButton className=\"c-subheader-nav-link\" href=\"#\" onClick ={e => logOut()}>\n              <CIcon name=\"cil-account-logout\" alt=\"Settings\" />&nbsp;Logout\n            </CButton>\n          </div>\n        {/*\n        <CHeaderNavItem  className=\"px-3\">\n          <CHeaderNavLink to=\"/users\">Users</CHeaderNavLink>\n        </CHeaderNavItem>\n        <CHeaderNavItem className=\"px-3\">\n          <CHeaderNavLink>Settings</CHeaderNavLink>\n        </CHeaderNavItem>\n      </CHeaderNav>\n\n      <CHeaderNav className=\"px-3\">\n        <TheHeaderDropdownNotif/>\n        <TheHeaderDropdownTasks/>\n        <TheHeaderDropdownMssg/>\n        <TheHeaderDropdown/>\n      </CHeaderNav>\n*/}\n      <CSubheader className=\"px-3 justify-content-between\">\n        <CBreadcrumbRouter \n          className=\"border-0 c-subheader-nav m-0 px-0 px-md-3\" \n          routes={routes} \n        />\n        {/*\n          <div className=\"d-md-down-none mfe-2 c-subheader-nav\">\n            <CLink className=\"c-subheader-nav-link\"href=\"#\">\n              <CIcon name=\"cil-speech\" alt=\"Settings\" />\n            </CLink>\n            <CLink \n              className=\"c-subheader-nav-link\" \n              aria-current=\"page\" \n              to=\"/dashboard\"\n            >\n              <CIcon name=\"cil-graph\" alt=\"Dashboard\" />&nbsp;Dashboard\n            </CLink>\n            <CLink className=\"c-subheader-nav-link\" href=\"#\">\n              <CIcon name=\"cil-settings\" alt=\"Settings\" />&nbsp;Settings\n            </CLink>\n          </div>\n        */}\n      </CSubheader>\n    </CHeader>\n  )\n}\n\nexport default TheHeader\n","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/containers/TheContent.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/containers/TheHeaderDropdown.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/containers/TheHeaderDropdownMssg.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/containers/TheHeaderDropdownNotif.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/containers/TheHeaderDropdownTasks.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/containers/TheSidebar.js",["329"],"import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CCreateElement,\n  CSidebar,\n  CSidebarBrand,\n  CSidebarNav,\n  CSidebarNavDivider,\n  CSidebarNavTitle,\n  CSidebarMinimizer,\n  CSidebarNavDropdown,\n  CSidebarNavItem,\n} from '@coreui/react'\n\nimport CIcon from '@coreui/icons-react'\n\n// sidebar nav config\nimport templateNavigation from './_nav'\nimport adminNavigation from './_nav_admin';\nimport professorNavigation from './_nav_professor';\nimport studentNavigation from './_nav_student';\nimport navigation from './_navigation';\n\n\nconst nav = () => {\n  if (localStorage.getItem(\"role\") === \"ROLE_ADMIN\") {\n    return adminNavigation;\n  }else if (localStorage.getItem(\"role\") === \"ROLE_PROFESSOR\") {\n    return professorNavigation;\n  }else if (localStorage.getItem(\"role\") === \"ROLE_STUDENT\") {\n    return studentNavigation;\n  } else {\n    return navigation;\n  }\n}\n\nconst TheSidebar = () => {\n  const dispatch = useDispatch()\n  const show = useSelector(state => state.sidebarShow)\n\n  return (\n    <CSidebar\n      show={show}\n      onShowChange={(val) => dispatch({type: 'set', sidebarShow: val })}\n    >\n      <CSidebarBrand className=\"d-md-down-none\" to=\"/\">\n        <CIcon\n          className=\"c-sidebar-brand-full\"\n          name=\"logo-negative\"\n          height={35}\n        />\n        <CIcon\n          className=\"c-sidebar-brand-minimized\"\n          name=\"sygnet\"\n          height={35}\n        />\n      </CSidebarBrand>\n      <CSidebarNav>\n\n        <CCreateElement\n          items={nav()}\n          components={{\n            CSidebarNavDivider,\n            CSidebarNavDropdown,\n            CSidebarNavItem,\n            CSidebarNavTitle\n          }}\n        />\n      </CSidebarNav>\n      <CSidebarMinimizer className=\"c-d-md-down-none\"/>\n    </CSidebar>\n  )\n}\n\nexport default React.memo(TheSidebar)\n","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/routes.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/containers/_nav.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/containers/_nav_professor.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/containers/_nav_student.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/containers/_nav_admin.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/containers/_navigation.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/pages/KnowledgeSpace/KnowledgeSpace.js",["330"],"import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport {\n    CCol,\n    CButton,\n    CModal,\n    CModalHeader,\n    CModalBody,\n    CModalTitle,\n    CModalFooter,\n    CFormGroup,\n    CLabel,\n    CInput,\n    CFormText,\n    CRow,\n    CWidgetBrand\n} from '@coreui/react'\n\nimport { RoleAwareComponent } from 'react-router-role-authorization'\nimport {Redirect} from 'react-router-dom'\n\nconst url = (process.env.REACT_APP_DOMAIN) + ':' + (process.env.REACT_APP_PORT) + '/';\n\nclass KnowledgeSpace extends RoleAwareComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            knowledgeSpaces: [],\n            showModal: false,\n            title: '',\n            errorTitle: '',\n            buttonDisabled: true\n        };\n\n        let arr = [];\n        arr.push(localStorage.getItem('role'));\n        this.userRoles = arr;\n        this.allowedRoles = ['ROLE_PROFESSOR'];\n\n\n        this.getKnowledgeSpaces = this.getKnowledgeSpaces.bind(this);\n        this.addKnowledgeSpace = this.addKnowledgeSpace.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.validateTitle = this.validateTitle.bind(this);\n        this.resetAll = this.resetAll.bind(this);\n    }\n\n    componentDidMount() {\n        this.getKnowledgeSpaces()\n    }\n\n    getKnowledgeSpaces() {\n        axios({\n            method: 'get',\n            url: url + 'knowledge_space',\n        }).then((response) => {\n            console.log(response);\n            this.setState({ knowledgeSpaces: response.data })\n        }, (error) => {\n            console.log(error);\n        });\n    }\n\n    addKnowledgeSpace() {\n        let data = {\n            \"title\": this.state.title,\n            \"test_id\": 1\n        }\n        axios({\n            method: 'post',\n            url: url + 'knowledge_space',\n            //headers: { \"Authorization\": AuthStr } ,   \n            data: data\n        }).then((response) => {\n            let temp = this.state.knowledgeSpaces\n            temp.push(response.data)\n            this.setState({ knowledgeSpaces: temp })\n            this.resetAll()\n        }, (error) => {\n            console.log(error);\n        });\n    }\n\n    resetAll() {\n        this.setState({ showModal: false, buttonDisabled: true, title: '', errorTitle: '' })\n    }\n\n    handleChange = e => {\n        e.preventDefault();\n\n        this.setState({ title: e.target.value })\n        this.validateTitle(e.target.value)\n    }\n\n    validateTitle(title) {\n        title = title.trim()\n        if (title === '') {\n            this.setState({ errorTitle: 'Title can not be empty', buttonDisabled: true })\n        }\n        else {\n            this.setState({ errorTitle: '', buttonDisabled: false })\n        }\n    }\n\n    getColor(index) {\n        let n = index % 7\n        switch (n) {\n            case 0:\n                return \"facebook\"\n            case 1:\n                return \"info\"\n            case 2:\n                return \"warning\"\n            case 3:\n                return \"danger\"\n            case 4:\n                return \"linkedin\"\n            case 5:\n                return \"success\"\n            default:\n                return \"primary\"\n        }\n    }\n\n    render() {\n        let ret = (\n            <div>\n                <CCol col=\"6\" sm=\"4\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\n                    <CButton style={{ marginBottom: \"20px\" }} id=\"confirmButton\" onClick={() => this.setState({ showModal: true })} color=\"success\" className=\"px-4\">New Knowledge Space</CButton>\n                </CCol>\n                <CRow>\n                    {(this.state.knowledgeSpaces).map((ks, index) =>\n                        <CCol xs=\"12\" sm=\"6\" lg=\"3\">\n                            <CWidgetBrand onClick={event => this.props.history.push('/knowledgeSpace/'+ ks.id)}\n                                color={this.getColor(index)}\n                                rightHeader={ks.problems.length}\n                                rightFooter={'nodes'}\n                                leftHeader={ks.edges.length}\n                                leftFooter=\"edges\"\n                            >\n                                <h1 height=\"56px\"\n                                    className=\"my-4\">{ks.title}</h1>\n                            </CWidgetBrand>\n                        </CCol>\n                    )}\n                </CRow>\n\n                <CModal\n                    show={this.state.showModal}\n                    onClose={() => this.resetAll()}\n                >\n                    <CModalHeader closeButton>\n                        <CModalTitle>Add Knowledge Space</CModalTitle>\n                    </CModalHeader>\n                    <CModalBody>\n                        <CFormGroup>\n                            <CLabel htmlFor=\"problemTitle\">Knowledge Space Title</CLabel>\n                            <CInput type=\"text\"\n                                id=\"ksTitle\"\n                                name=\"ksTitle\"\n                                onChange={this.handleChange}\n                                value={this.state.title}\n                                placeholder=\"Title\"\n                            />\n                            <CFormText className=\"help-block\"><p style={{ color: \"red\" }}>{this.state.errorTitle}</p></CFormText>\n\n                        </CFormGroup>\n                    </CModalBody>\n                    <CModalFooter>\n                        <CButton disabled={this.state.buttonDisabled} color=\"success\" onClick={() => this.addKnowledgeSpace()}>Add</CButton>{' '}\n                        <CButton color=\"danger\" onClick={() => this.resetAll()}>Cancel</CButton>\n                    </CModalFooter>\n                </CModal>\n            </div>\n        );\n        return this.rolesMatched() ? ret : <Redirect to=\"/tests\" />;\n    }\n}\n\nexport default KnowledgeSpace;","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/pages/Graph/Graph.js",["331","332","333","334","335","336","337","338","339","340","341"],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/pages/StudentsPage.js",["342"],"import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport {\n  Redirect,\n} from 'react-router-dom'\n\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable\n} from '@coreui/react'\n\nimport { RoleAwareComponent } from 'react-router-role-authorization';\n\nconst url = (process.env.REACT_APP_DOMAIN) + ':' + (process.env.REACT_APP_PORT) + '/';\n\nconst fields = ['#','name', 'last_name']\n\nclass StudentsPage extends RoleAwareComponent {\n  constructor(props)\n  {\n    super(props);\n    this.state = {      \n      students: []          \n    };\n\n    let arr = [];\n    arr.push(localStorage.getItem('role'));\n    this.userRoles = arr;\n    this.allowedRoles = ['ROLE_PROFESSOR'];\n\n    this.getStudents = this.getStudents.bind(this);\n  }\n\n  componentDidMount(){\n    this.getStudents()\n}\n\n  getStudents(){\n    let token = localStorage.getItem(\"loggedInUser\")\n    let AuthStr = 'Bearer '.concat(token);     \n    axios({\n      method: 'get',\n      url: url + 'student',       \n      headers: { \"Authorization\": AuthStr } ,   \n  }).then((response) => {\n      console.log(response);\n      this.setState({students:response.data.students})\n  }, (error) => {\n      console.log(error);\n  });\n  }\n\n\n  render() {\n    let ret = (\n      <CCol xs=\"12\" lg=\"12\">\n          <CCard>\n            <CCardHeader>\n              Students\n            </CCardHeader>\n            <CCardBody>\n            <CDataTable\n              items={this.state.students}\n              fields={fields}\n              striped\n              itemsPerPage={5}\n              pagination\n              scopedSlots = {{\n                '#':\n                  (item, index)=>(\n                    <td>\n                        {index + 1}\n                    </td>\n                  ),\n                'name':\n                 (item, index)=>(\n                    <td>\n                        {item.user.name}\n                    </td>\n                 ),\n                'last_name':\n                 (item, index)=>(\n                    <td>\n                        {item.user.last_name}\n                    </td>\n                 )\n              }}\n            />\n            </CCardBody>\n          </CCard>\n        </CCol>\n    );\n    return this.rolesMatched() ? ret : <Redirect to=\"/tests\" />;\n  }\n}\n\nexport default StudentsPage;","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/pages/TestsPage.js",["343","344","345","346"],"import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport {\n  CCard,\n  CRow,\n  CCardBody,\n  CCardHeader,\n  CLabel,\n  CButton,\n  CCollapse,\n  CContainer,\n  CCol,\n  CFade,\n  CLink,\n  CCardFooter,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport * as _ from 'lodash'\n\n\nimport { RoleAwareComponent } from 'react-router-role-authorization';\nimport {Redirect} from 'react-router-dom'\n\n\nconst url = (process.env.REACT_APP_DOMAIN) + ':' + (process.env.REACT_APP_PORT) + '/';\n\nclass TestsPage extends RoleAwareComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accordion: [],\n      tests: [],\n      collapsed: false,\n      showCard: true,\n      role: ''\n    };\n\n    let arr = [];\n    arr.push(localStorage.getItem('role'));\n    this.userRoles = arr;\n    this.allowedRoles = ['ROLE_PROFESSOR', 'ROLE_STUDENT'];\n\n    this.getTests = this.getTests.bind(this);\n    this.toggleAccordion = this.toggleAccordion.bind(this)\n    this.generateAccordion = this.generateAccordion.bind(this)\n    this.setCollapsed = this.setCollapsed.bind(this)\n    this.setShowCard = this.setShowCard.bind(this)\n  }\n\n  setCollapsed(i) {\n    const prevState = this.state.accordion;\n    const state = prevState.map((x, index) => i === index ? !x : false);\n\n    this.setState({\n      accordion: state,\n    });\n  }\n\n  setShowCard(showCard) {\n    this.setShowCard({ showCard: !showCard })\n  }\n\n  componentDidMount() {\n    this.getTests()\n    this.setState({role:localStorage.getItem(\"role\")})\n  }\n\n  getTests() {\n    axios({\n      method: 'get',\n      url: url + 'test',\n    }).then((response) => {\n      console.log(response);\n      this.setState({ tests: response.data })\n      this.generateAccordion()\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  generateAccordion() {\n    this.state.accordion = Array((this.state.tests).length).fill(false)\n  }\n\n  toggleAccordion(tab) {\n\n    const prevState = this.state.accordion;\n    const state = prevState.map((x, index) => tab === index ? !x : false);\n\n    this.setState({\n      accordion: state,\n    });\n  }\n\n  render() {\n    let ret = (\n      <>\n        <CButton hidden={this.state.role !== 'ROLE_PROFESSOR'} style={{ marginLeft: \"10px\", marginBottom: \"20px\" }} color=\"success\" onClick={event => this.props.history.push('/tests/newTest')}>\n          +\n        </CButton>\n        <CRow>\n          {(this.state.tests).map((test, index) =>\n            <CCol xs=\"12\" sm=\"6\" md=\"4\">\n              <CFade in={this.state.showCard}>\n                <CCard>\n                  <CCardHeader>\n                    {test.title} - {test.max_score} points\n                <div className=\"card-header-actions\">\n                      <CLink className=\"card-header-action\" onClick={() => this.setCollapsed(index)}>\n                        <CIcon name={this.state.accordion[index] ? 'cil-chevron-bottom' : 'cil-chevron-top'} />\n                      </CLink>\n                      <CLink className=\"card-header-action\">\n                        <CIcon name=\"cil-x-circle\" />\n                      </CLink>\n                    </div>\n                  </CCardHeader>\n                  <CCollapse show={this.state.accordion[index]}>\n                    <CCardBody hidden={this.state.role !== 'ROLE_PROFESSOR'}>\n                      <CRow>\n                        {(_.sortBy(test.test_questions,\"position\")).map((question, indexQ) =>\n                          <CCol xs=\"12\" sm=\"6\" md=\"4\" lg=\"4\">\n                            <CCard style={{ backgroundColor: \"whitesmoke\", margin:\"1px\" }}>\n                              <CCardHeader>\n                                {indexQ + 1}. {question.title} ({question.points})\n                      </CCardHeader>\n                              <CCardBody style={{padding:\"3px\"}}>\n                                {(question.test_question_answers).map((answer, indexA) =>\n                                  <CCard style={{ margin: \"3px\" }}>\n                                    <label>{indexA + 1}. {answer.title}</label>\n                                  </CCard>\n                                )}\n                              </CCardBody>\n                            </CCard>\n                          </CCol>\n                        )}\n                      </CRow>\n                    </CCardBody>\n                    <CCardFooter>\n                      <CButton hidden={this.state.role !== 'ROLE_STUDENT'} color=\"primary\" onClick={event => this.props.history.push('/tests/takeTest/' + test.id)} >Take test</CButton>\n                    </CCardFooter>\n                  </CCollapse>\n                </CCard>\n              </CFade>\n            </CCol>\n          )}\n        </CRow>\n      </>\n    );\n    return this.rolesMatched() ? ret : <Redirect to=\"/tests\" />;\n  }\n}\n\nexport default TestsPage;","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/pages/NewTest.js",["347","348"],"import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport {\n    CCard,\n    CRow,\n    CCol,\n    CCardBody,\n    CCardHeader,\n    CFormGroup,\n    CLabel,\n    CInput,\n    CButton,\n    CCollapse,\n    CBadge,\n    CModal,\n    CModalTitle,\n    CModalBody,\n    CModalFooter,\n    CModalHeader,\n    CInputCheckbox\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react';\n\nimport { RoleAwareComponent } from 'react-router-role-authorization'\nimport {Redirect} from 'react-router-dom'\n\nconst url = (process.env.REACT_APP_DOMAIN) + ':' + (process.env.REACT_APP_PORT) + '/';\n\nclass TestsPage extends RoleAwareComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            testTitle: \"\",\n            maxScore: 1,\n            questions: [],\n            questionTitle: \"\",\n            questionPoints: 0,\n            hideNewQuestion: true,\n            hideNewAnswer: true,\n            answerTitle: \"\",\n            isCorrect: false,\n            answers: [],\n            newAnswerModalTitle: ''\n        };\n\n        let arr = [];\n        arr.push(localStorage.getItem('role'));\n        this.userRoles = arr;\n        this.allowedRoles = ['ROLE_PROFESSOR'];\n\n\n        this.createTest = this.createTest.bind(this)\n        this.cancel = this.cancel.bind(this)\n        this.addQuestion = this.addQuestion.bind(this)\n        this.questions = this.questions.bind(this)\n    }\n\n    componentDidMount() {\n    }\n\n    createTest() {\n        let token = localStorage.getItem(\"loggedInUser\")\n        let AuthStr = 'Bearer '.concat(token);    \n        let test = {\n            title: this.state.testTitle,\n            max_score: this.state.maxScore,\n            questions: this.state.questions\n        }\n        axios({\n            method: 'post',\n            url: url + 'test',\n            headers: { \"Authorization\": AuthStr } ,   \n            data: test\n        }).then((response) => {\n            this.props.history.push('/tests')\n        }, (error) => {\n            console.log(error);\n        });\n    }\n\n    cancel() {\n        this.props.history.push('/tests')\n    }\n\n    addQuestion() {\n        let question = {\n            title: this.state.questionTitle,\n            points: this.state.questionPoints,\n            answers: this.state.answers,\n        }\n        this.setState({ questionTitle: \"\", questionPoints: 0, hideNewQuestion: true, answers: [] })\n        this.state.questions.push(question)\n    }\n\n    addAnswer() {\n        let isCorrect = 0\n        if (this.state.isCorrect) {\n            isCorrect = 1\n        }\n        let answer = {\n            title: this.state.answerTitle,\n            isCorrect: isCorrect\n        }\n        this.state.answers.push(answer)\n        this.setState({ isCorrect: false, answerTitle: \"\", hideNewAnswer: true })\n    }\n\n    questions(questions) {\n        return (\n            <CRow>\n                {(this.state.questions).map((question, indexQ) =>\n                    <CCol xs=\"4\" sm=\"4\" md=\"4\" lg=\"3\">\n                        <CCard style={{margin: \"10px\" }}>\n                            <CCardHeader style={{ padding: \"3px\" }}>\n                                <h3>{indexQ + 1}. {question.title}\n                                    <small className=\"card-header-actions\">\n                                        <CBadge shape=\"pill\" color=\"primary\" className=\"float-right\">{question.points}</CBadge>\n                                    </small>\n                                </h3>\n                            </CCardHeader>\n                            <CCardBody>\n                                {(question.answers).map((answer, indexA) =>\n                                    <div style={{backgroundColor:\"whitesmoke\", margin: \"5px\" }}>\n                                        <CRow hidden={answer.isCorrect === 0}>\n                                        <CCol lg=\"10\" md=\"10\">\n                                            <CLabel style={{ marginRight: \"10px\" }}>{indexA + 1}. {answer.title} </CLabel>\n                                        </CCol>\n                                        <CCol lg=\"2\" md=\"2\">\n                                            <CIcon className=\"text-success\" name=\"cil-check-circle\"></CIcon>\n                                            </CCol>\n                                        </CRow>\n                                        <CRow hidden={answer.isCorrect === 1} >\n                                            <CCol lg=\"10\" md=\"10\">\n                                            <CLabel frameBorder style={{ marginRight: \"10px\" }}>{indexA + 1}. {answer.title} </CLabel>\n                                            </CCol>\n                                            <CCol lg=\"2\" md=\"2\">\n                                            <CIcon className=\"text-danger\" name=\"cil-x-circle\"></CIcon>\n                                            </CCol>\n                                        </CRow>\n                                    </div>\n                                )}\n                            </CCardBody>\n                        </CCard>\n                    </CCol>\n                )}\n            </CRow>\n        )\n    }\n\n    render() {\n        let ret = (\n            <div>\n                <CModal\n                    show={!this.state.hideNewAnswer}\n                    onClose={() => this.setState({ hideNewAnswer: true, newAnswerModalTitle: '' })}\n                    color=\"info\"\n                >\n                    <CModalHeader closeButton>\n                        <CModalTitle>{this.state.newAnswerModalTitle}</CModalTitle>\n                    </CModalHeader>\n                    <CModalBody>\n                        <CFormGroup row>\n\n                            <CCol md=\"12\">\n                                <CLabel>Answer</CLabel>\n                                <CInput type=\"text\" value={this.state.answerTitle}\n                                    onChange={event => this.setState({ answerTitle: event.target.value })} />\n                            </CCol>\n                            <CCol md=\"12\">\n                                <CFormGroup variant=\"checkbox\" className=\"checkbox\">\n                                    <br></br>\n                                    <CInputCheckbox\n                                        id=\"isCorrect\"\n                                        name=\"isCorrect\"\n                                        value={this.state.isCorrect}\n                                        checked={this.state.isCorrect}\n                                        onChange={event => this.setState({ isCorrect: event.target.checked })}\n                                    />\n                                    <CLabel variant=\"checkbox\" className=\"form-check-label\" htmlFor=\"isCorrect\">Is correct</CLabel>\n                                </CFormGroup>\n                            </CCol>\n                            <CRow style={{ margin: \"10px\" }}>\n\n                            </CRow>\n                        </CFormGroup>\n                    </CModalBody>\n                    <CModalFooter>\n                        <CButton color=\"secondary\" onClick={() => this.setState({ hideNewAnswer: true, answerTitle:'', isCorrect:false })}>Cancel</CButton>\n                        <CButton color=\"info\" onClick={() => this.addAnswer()}>Add answer</CButton>\n                    </CModalFooter>\n                </CModal>\n\n                <CCol md=\"12\" lg=\"12\" xs=\"12\">\n                    <CRow>\n                        <CCol md=\"4\" lg=\"3\" xs=\"4\">\n                            <CLabel style={{ marginRight: \"10px\" }}>Title</CLabel>\n                            <CInput type=\"text\" value={this.state.testTitle}\n                                onChange={event => this.setState({ testTitle: event.target.value })} />\n                        </CCol>\n                        <CCol md=\"4\" lg=\"3\" xs=\"4\">\n                            <CLabel style={{ marginRight: \"10px\" }}>Score</CLabel>\n                            <CInput type=\"number\" value={this.state.maxScore} min=\"1\"\n                                onChange={event => this.setState({ maxScore: event.target.value })} />\n                        </CCol>\n                    </CRow>\n                    <CRow>\n                        <CCol md=\"12\" lg=\"12\" xs=\"12\">\n                            {this.questions(this.state.questions)}\n                        </CCol>\n                    </CRow>\n                    <CRow hidden={!this.state.hideNewQuestion}>\n                        <CCol xs=\"12\" sm=\"12\" md=\"12\">\n                            <br></br>\n                            <CButton variant='outline' color='success' style={{ height: \"40px\" }}\n                                onClick={() => this.setState({ hideNewQuestion: false, newAnswerModalTitle: this.state.questionTitle })}>\n                                Add question\n                        </CButton>\n                        </CCol>\n                    </CRow>\n                    <CRow hidden={this.state.hideNewQuestion}>\n                        <CCol md=\"12\" lg=\"12\" xs=\"12\">\n                            <br></br>\n                            <h3>{this.state.questions.length + 1}.</h3>\n                            <CFormGroup row>\n                                <CCol md=\"3\">\n                                    <CLabel style={{ marginRight: \"10px\" }}>Question</CLabel>\n                                    <CInput type=\"text\" value={this.state.questionTitle}\n                                        onChange={event => this.setState({ questionTitle: event.target.value })} />\n                                </CCol>\n                                <CCol md=\"3\">\n                                    <CLabel style={{ marginRight: \"10px\" }}>Points</CLabel>\n                                    <CInput type=\"number\" value={this.state.questionPoints}\n                                        onChange={event => this.setState({ questionPoints: event.target.value })} />\n                                </CCol>\n                                <CCol md=\"3\">\n                                    <br></br>\n                                    <CButton hidden={!this.state.hideNewAnswer} style={{ marginTop: \"7px\" }} color=\"primary\"\n                                        onClick={() => this.setState({ hideNewAnswer: false, newAnswerModalTitle: this.state.questionTitle + ' - New Answer' })}>\n                                        Add new answer\n                                </CButton>\n                                </CCol>\n                            </CFormGroup>\n                            <CCol xs=\"12\" sm=\"12\" md=\"3\" lg=\"3\" >\n                                <h3>Answers:</h3>\n                                {(this.state.answers).map((answer, indexA) =>\n                                    <>\n                                        <CRow className=\"text-success\" hidden={answer.isCorrect === 0} style={{ backgroundColor: \"white\", margin: \"5px\" }}>\n                                            <h4 >{indexA + 1}. {answer.title} </h4><CIcon style={{marginLeft:\"10px\"}} name=\"cil-check-circle\"></CIcon>\n                                        </CRow>\n                                        <CRow className=\"text-danger\" hidden={answer.isCorrect === 1} style={{ backgroundColor: \"white\", margin: \"5px\" }}>\n                                            <h4> {indexA + 1}. {answer.title}</h4><CIcon style={{marginLeft:\"10px\"}} name=\"cil-x-circle\"></CIcon>\n                                        </CRow>\n                                    </>\n                                )}\n                            </CCol>\n                            <CCol xs=\"12\" sm=\"12\" md=\"12\">\n                                <br></br>\n                                <CButton color='success' style={{ height: \"40px\" }} onClick={() => this.addQuestion()}>\n                                    Save question\n                            </CButton>\n                            </CCol>\n                        </CCol>\n                    </CRow>\n                    <CRow>\n                        <CCol xs=\"12\" sm=\"12\" md=\"12\" lg=\"3\">\n                            <br></br>\n                            <CButton style={{ height: \"40px\" }} color='success' onClick={() => this.createTest()}>\n                                Save test\n                            </CButton>\n                            <CButton style={{ marginLeft: \"10px\", height: \"40px\" }} color='danger' onClick={() => this.cancel()}>\n                                Cancel\n                            </CButton>\n                        </CCol>\n                    </CRow>\n                </CCol>\n            </div>\n        );\n        return this.rolesMatched() ? ret : <Redirect to=\"/tests\" />;\n    }\n}\n\nexport default TestsPage;","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/charts/Charts.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/users/Users.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/users/User.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/widgets/Widgets.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/notifications/toaster/Toaster.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/notifications/badges/Badges.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/notifications/alerts/Alerts.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/base/tables/Tables.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/base/paginations/Pagnations.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/base/navbars/Navbars.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/base/popovers/Popovers.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/base/progress-bar/ProgressBar.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/base/tabs/Tabs.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/base/tooltips/Tooltips.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/buttons/button-groups/ButtonGroups.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/icons/coreui-icons/CoreUIIcons.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/icons/flags/Flags.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/icons/brands/Brands.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/dashboard/Dashboard.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/notifications/modals/Modals.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/base/collapses/Collapses.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/base/list-groups/ListGroups.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/base/navs/Navs.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/buttons/brand-buttons/BrandButtons.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/base/cards/Cards.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/buttons/button-dropdowns/ButtonDropdowns.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/base/switches/Switches.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/buttons/buttons/Buttons.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/base/forms/BasicForms.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/pages/Graph/graph-config.js",["349"],"import * as React from 'react';\n\nexport const NODE_KEY = 'id'; // Key used to identify nodes\n\n// These keys are arbitrary (but must match the config)\n// However, GraphView renders text differently for empty types\n// so this has to be passed in if that behavior is desired.\nexport const EMPTY_TYPE = 'customEmpty'; // Empty node type\nexport const POLY_TYPE = 'poly';\nexport const SPECIAL_TYPE = 'special';\nexport const SKINNY_TYPE = 'skinny';\nexport const SPECIAL_CHILD_SUBTYPE = 'specialChild';\nexport const EMPTY_EDGE_TYPE = 'emptyEdge';\nexport const SPECIAL_EDGE_TYPE = 'specialEdge';\nexport const COMPLEX_CIRCLE_TYPE = 'complexCircle';\n\nexport const nodeTypes = [EMPTY_TYPE, POLY_TYPE, SPECIAL_TYPE, SKINNY_TYPE];\nexport const edgeTypes = [EMPTY_EDGE_TYPE, SPECIAL_EDGE_TYPE];\n\nconst EmptyNodeShape = (\n  <symbol viewBox=\"0 0 154 154\" width=\"154\" height=\"154\" id=\"emptyNode\">\n    <circle cx=\"77\" cy=\"77\" r=\"76\" />\n  </symbol>\n);\n\nconst CustomEmptyShape = (\n  <symbol viewBox=\"0 0 100 100\" id=\"customEmpty\">\n    <circle cx=\"50\" cy=\"50\" r=\"45\" />\n  </symbol>\n);\n\nconst SpecialShape = (\n  <symbol viewBox=\"-27 0 154 154\" id=\"special\" width=\"154\" height=\"154\">\n    <rect transform=\"translate(50) rotate(45)\" width=\"109\" height=\"109\" />\n  </symbol>\n);\n\nconst PolyShape = (\n  <symbol viewBox=\"0 0 88 72\" id=\"poly\" width=\"88\" height=\"88\">\n    <path d=\"M 0 36 18 0 70 0 88 36 70 72 18 72Z\" />\n  </symbol>\n);\n\nconst ComplexCircleShape = (\n  <symbol viewBox=\"0 0 100 100\" id=\"complexCircle\" width=\"100\" height=\"100\">\n    <circle cx=\"50\" cy=\"50\" r=\"50\" fill=\"transparent\" stroke=\"transparent\" />\n    <circle cx=\"50\" cy=\"50\" r=\"34\" />\n    <path\n      d=\"M50,0a50,50,0,1,0,50,50A50,50,0,0,0,50,0Zm0,90A40,40,0,1,1,90,50,40,40,0,0,1,50,90Z\"\n      data-intersect-ignore=\"true\"\n    />\n  </symbol>\n);\n\nconst SkinnyShape = (\n  <symbol viewBox=\"0 0 154 54\" width=\"154\" height=\"54\" id=\"skinny\">\n    <rect x=\"0\" y=\"0\" rx=\"2\" ry=\"2\" width=\"154\" height=\"54\" />\n  </symbol>\n);\n\nconst SpecialChildShape = (\n  <symbol viewBox=\"0 0 154 154\" id=\"specialChild\">\n    <rect\n      x=\"2.5\"\n      y=\"0\"\n      width=\"154\"\n      height=\"154\"\n      fill=\"rgba(30, 144, 255, 0.12)\"\n    />\n  </symbol>\n);\n\nconst EmptyEdgeShape = (\n  <symbol viewBox=\"0 0 50 50\" id=\"emptyEdge\">\n    <circle cx=\"25\" cy=\"25\" r=\"8\" fill=\"currentColor\" />\n  </symbol>\n);\n\nconst SpecialEdgeShape = (\n  <symbol viewBox=\"0 0 50 50\" id=\"specialEdge\">\n    <rect\n      transform=\"rotate(45)\"\n      x=\"27.5\"\n      y=\"-7.5\"\n      width=\"15\"\n      height=\"15\"\n      fill=\"currentColor\"\n    />\n  </symbol>\n);\n\nexport default {\n  EdgeTypes: {\n    emptyEdge: {\n      shape: EmptyEdgeShape,\n      shapeId: '#emptyEdge',\n    },\n    specialEdge: {\n      shape: SpecialEdgeShape,\n      shapeId: '#specialEdge',\n    },\n  },\n  NodeSubtypes: {\n    specialChild: {\n      shape: SpecialChildShape,\n      shapeId: '#specialChild',\n    },\n  },\n  NodeTypes: {\n    emptyNode: {\n      shape: EmptyNodeShape,\n      shapeId: '#emptyNode',\n      typeText: 'None',\n    },\n    empty: {\n      shape: CustomEmptyShape,\n      shapeId: '#empty',\n      typeText: 'None',\n    },\n    special: {\n      shape: SpecialShape,\n      shapeId: '#special',\n      typeText: 'Special',\n    },\n    skinny: {\n      shape: SkinnyShape,\n      shapeId: '#skinny',\n      typeText: 'Skinny',\n    },\n    poly: {\n      shape: PolyShape,\n      shapeId: '#poly',\n      typeText: 'Poly',\n    },\n    complexCircle: {\n      shape: ComplexCircleShape,\n      shapeId: '#complexCircle',\n      typeText: '#complexCircle',\n    },\n  },\n};","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/widgets/WidgetsBrand.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/widgets/WidgetsDropdown.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/charts/MainChartExample.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/users/UsersData.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/charts/ChartLineSimple.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/charts/ChartBarSimple.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/reusable/index.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/reusable/DocsLink.js",[],"/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/pages/TestPage.js",["350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368"],"import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport {\n  CRow,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardFooter,\n  CLabel,\n  CInput,\n  CButton,\n  CCollapse,\n  CContainer,\n  CCol,\n  CDataTable,\n  CFade,\n  CLink,\n  CFormGroup,\n  CInputCheckbox\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport { RoleAwareComponent } from 'react-router-role-authorization'\nimport {Redirect} from 'react-router-dom'\n\nconst url = (process.env.REACT_APP_DOMAIN) + ':' + (process.env.REACT_APP_PORT) + '/';\n\nconst fields = ['Question','Answer', 'Checked', 'Correct answer', 'Score']\nconst role = localStorage.getItem(\"role\")\n\nclass TestPage extends RoleAwareComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      test: {\n        title: \"\",\n        test_questions: [{\n            title:\"\",\n            test_question_answers:[]\n        }]\n    },\n      testTake: {\n          title: \"\",\n          test_questions: [{\n              title:\"\",\n              test_question_answers:[]\n          }]\n      },\n    };\n\n    let arr = [];\n    arr.push(localStorage.getItem('role'));\n    this.userRoles = arr;\n    this.allowedRoles = ['ROLE_PROFESSOR', 'ROLE_STUDENT'];\n\n\n    this.getTestTakeAnswer = this.getTestTake.bind(this)\n    this.getChecked = this.getChecked.bind(this)\n  }\n\n  componentDidMount() {\n    this.getTestTake()\n  }\n\n\n  getTestTake(){\n    const { id } = this.props.match.params;\n    axios({\n      method: 'get',\n      url: url + 'test_take/' + id,\n    }).then((response) => {\n      this.setState({ testTake: response.data.test_take, test:response.data.test })\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  getChecked(question, answer){\n    var find = this.state.testTake.test_take_answers.filter(function(result) {\n      return result.test_question_id === question && result.test_question_answer_id === answer;\n    });\n    \n    return find[0].selected;\n  }\n\n  render() {\n    let ret =  (\n      <div>\n        <CCardHeader style={{backgroundColor:\"whitesmoke\"}}>\n            <h2>{this.state.test.title}</h2>\n        </CCardHeader>\n          <table responsive style={{border:\"1px solid black\", width: \"100%\", backgroundColor:\"whitesmoke\"}}>\n          <thead style={{textAlign:\"center\"}}>\n            <th><h3>Question</h3></th>            \n            <th><h3>Answer</h3></th>\n            <th><h3>Checked</h3></th>\n            <th><h3>Correct answer</h3></th>\n            <th ><h3>Score</h3></th>\n          </thead>\n          <tbody>\n          {(this.state.test.test_questions).map((question, index) =>\n          <>\n                  <tr style={{borderTop:\"2px solid black\"}}>\n                    <td><h4>{index + 1}. {question.title}</h4></td>\n                    <td></td>\n                    <td></td>\n                    <td></td>\n                    <td style={{textAlign:\"center\"}}>7</td>\n                  </tr>\n                  <>\n                  {(question.test_question_answers).map((answer, indexA) =>\n                          <tr >\n                          <td></td>\n                          <td style={{textAlign:\"center\"}} >{indexA}. {answer.title}</td>\n                          <td style={{textAlign:\"center\"}}> <input type=\"checkbox\" checked={this.getChecked(question.id, answer.id)}></input></td>\n                          <td style={{textAlign:\"center\"}}> <input type=\"checkbox\" checked={answer.isCorrect}></input></td>\n                          <td style={{textAlign:\"center\"}}>1</td>\n                        </tr>\n                        )}\n                        </>\n                  </>\n                )}\n                <tr style={{borderTop:\"2px solid black\"}}>\n                    <td><h4>Total score</h4></td>\n                    <td></td>\n                    <td></td>\n                    <td></td>\n                    <td style={{textAlign:\"center\"}}>4/{this.state.test.max_score}</td>\n                  </tr>\n                </tbody>\n            </table>\n\n      </div>\n    );\n    return this.rolesMatched() ? ret : <Redirect to=\"/tests\" />;\n  }\n}\n\nexport default TestPage;","/home/djordje/Desktop/Master/SOTIS/SOTIS/frontend/src/views/pages/TakeTest.js",["369","370","371","372","373","374","375"],"import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport {\n  CRow,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCardFooter,\n  CLabel,\n  CInput,\n  CButton,\n  CCollapse,\n  CContainer,\n  CCol,\n  CFade,\n  CLink,\n  CFormGroup,\n  CInputCheckbox\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport { RoleAwareComponent } from 'react-router-role-authorization'\nimport {Redirect} from 'react-router-dom'\n\nconst url = (process.env.REACT_APP_DOMAIN) + ':' + (process.env.REACT_APP_PORT) + '/';\n\nclass TakeTest extends RoleAwareComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accordion: [],\n      test: {\n        title: \"\",\n        test_questions: [{\n          title: \"\",\n          test_question_answers: []\n        }]\n      },\n    };\n\n    let arr = [];\n    arr.push(localStorage.getItem('role'));\n    this.userRoles = arr;\n    this.allowedRoles = ['ROLE_STUDENT'];\n\n\n    this.getTest = this.getTest.bind(this);\n    this.toggleAccordion = this.toggleAccordion.bind(this)\n    this.generateAccordion = this.generateAccordion.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.submitAnswers = this.submitAnswers.bind(this)\n  }\n\n  componentDidMount() {\n    this.getTest()\n  }\n\n  getTest() {\n    const { id } = this.props.match.params;\n    axios({\n      method: 'get',\n      url: url + 'test/' + id,\n    }).then((response) => {\n      this.setState({ test: response.data })\n      this.generateAccordion()\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  generateAccordion() {\n    this.state.accordion = Array((this.state.test.test_questions).length).fill(false)\n  }\n\n  toggleAccordion(tab) {\n\n    const prevState = this.state.accordion;\n    const state = prevState.map((x, index) => tab === index ? !x : x);\n\n    this.setState({\n      accordion: state,\n    });\n  }\n\n  handleChange(question, answer) {\n    let temp = this.state.test\n    temp.test_questions[question].test_question_answers[answer].isCorrect = !temp.test_questions[question].test_question_answers[answer].isCorrect\n    this.setState({ test: temp })\n  }\n\n  submitAnswers() {\n    const { id } = this.props.match.params;\n    let data = {\n      test_id: id,\n      score: 0,\n      test: this.state.test\n    }\n    let token = localStorage.getItem(\"loggedInUser\")\n    let AuthStr = 'Bearer '.concat(token);       \n    axios({\n      method: 'post',\n      url: url + 'test_take',\n      headers: { \"Authorization\": AuthStr } ,   \n      data: data\n    }).then((response) => {\n      this.props.history.push('/tests/test/' + response.data)\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    let ret = (\n      <div>\n        <CCol xl=\"12\" lg=\"12\" md=\"12\" sm=\"12\">\n          <CCard>\n            <CCardHeader>\n              <h1>{this.state.test.title}</h1>\n            </CCardHeader>\n            <CCardBody>\n              <div id=\"accordion\">\n                {(this.state.test.test_questions).map((question, index) =>\n                  <CCard style={{ margin: \"10px\" }} className=\"mb-0\">\n                    <CCardHeader id=\"headingOne\">\n                      <CButton\n                        block\n                        color=\"link\"\n                        className=\"text-left m-0 p-0\"\n                        onClick={() => this.toggleAccordion(index)}\n                      >\n                        <h5 className=\"m-0 p-0\">{question.title}</h5>\n                      </CButton>\n                    </CCardHeader>\n                    <CCollapse show={this.state.accordion[index]}>\n                      <CCardBody>\n                        {(question.test_question_answers).map((answer, indexA) =>\n\n                          <CFormGroup variant=\"checkbox\" className=\"checkbox\">\n                            <br></br>\n                            <CInputCheckbox\n                              id=\"isCorrect\"\n                              name=\"isCorrect\"\n                              value={answer.isCorrect}\n                              checked={answer.isCorrect}\n                              onChange={event => this.handleChange(index, indexA)}\n                            />\n                            <CLabel variant=\"checkbox\" className=\"form-check-label\" htmlFor=\"isCorrect\">{indexA + 1}. {answer.title}</CLabel>\n                          </CFormGroup>\n                        )}\n                      </CCardBody>\n                    </CCollapse>\n                  </CCard>\n                )}\n              </div>\n            </CCardBody>\n            <CCardFooter>\n              <CButton color=\"success\" style={{ marginLeft: \"10px\", height: \"40px\" }} onClick={event => this.submitAnswers()}>Submit</CButton>\n            </CCardFooter>\n          </CCard>\n        </CCol>\n      </div>\n    );\n    return this.rolesMatched() ? ret : <Redirect to=\"/tests\" />;\n  }\n}\n\nexport default TakeTest;",{"ruleId":"376","replacedBy":"377"},{"ruleId":"378","replacedBy":"379"},{"ruleId":"380","severity":1,"message":"381","line":30,"column":7,"nodeType":"382","messageId":"383","endLine":30,"endColumn":17},{"ruleId":"380","severity":1,"message":"384","line":38,"column":7,"nodeType":"382","messageId":"383","endLine":38,"endColumn":25},{"ruleId":"380","severity":1,"message":"385","line":42,"column":7,"nodeType":"382","messageId":"383","endLine":42,"endColumn":16},{"ruleId":"386","severity":1,"message":"387","line":114,"column":36,"nodeType":"388","messageId":"389","endLine":114,"endColumn":38},{"ruleId":"386","severity":1,"message":"387","line":125,"column":28,"nodeType":"388","messageId":"389","endLine":125,"endColumn":30},{"ruleId":"386","severity":1,"message":"387","line":125,"column":58,"nodeType":"388","messageId":"389","endLine":125,"endColumn":60},{"ruleId":"386","severity":1,"message":"387","line":125,"column":87,"nodeType":"388","messageId":"389","endLine":125,"endColumn":89},{"ruleId":"386","severity":1,"message":"387","line":126,"column":33,"nodeType":"388","messageId":"389","endLine":126,"endColumn":35},{"ruleId":"386","severity":1,"message":"387","line":126,"column":62,"nodeType":"388","messageId":"389","endLine":126,"endColumn":64},{"ruleId":"386","severity":1,"message":"387","line":126,"column":98,"nodeType":"388","messageId":"389","endLine":126,"endColumn":100},{"ruleId":"386","severity":1,"message":"387","line":127,"column":29,"nodeType":"388","messageId":"389","endLine":127,"endColumn":31},{"ruleId":"386","severity":1,"message":"387","line":127,"column":58,"nodeType":"388","messageId":"389","endLine":127,"endColumn":60},{"ruleId":"390","severity":1,"message":"391","line":217,"column":23,"nodeType":"392","endLine":217,"endColumn":45},{"ruleId":"380","severity":1,"message":"393","line":13,"column":3,"nodeType":"382","messageId":"383","endLine":13,"endColumn":8},{"ruleId":"380","severity":1,"message":"394","line":23,"column":3,"nodeType":"382","messageId":"383","endLine":23,"endColumn":20},{"ruleId":"380","severity":1,"message":"395","line":24,"column":3,"nodeType":"382","messageId":"383","endLine":24,"endColumn":24},{"ruleId":"380","severity":1,"message":"396","line":25,"column":3,"nodeType":"382","messageId":"383","endLine":25,"endColumn":25},{"ruleId":"380","severity":1,"message":"397","line":26,"column":3,"nodeType":"382","messageId":"383","endLine":26,"endColumn":25},{"ruleId":"380","severity":1,"message":"398","line":18,"column":8,"nodeType":"382","messageId":"383","endLine":18,"endColumn":26},{"ruleId":"380","severity":1,"message":"399","line":1,"column":17,"nodeType":"382","messageId":"383","endLine":1,"endColumn":26},{"ruleId":"380","severity":1,"message":"400","line":15,"column":3,"nodeType":"382","messageId":"383","endLine":15,"endColumn":7},{"ruleId":"380","severity":1,"message":"401","line":21,"column":3,"nodeType":"382","messageId":"383","endLine":21,"endColumn":7},{"ruleId":"380","severity":1,"message":"402","line":30,"column":3,"nodeType":"382","messageId":"383","endLine":30,"endColumn":22},{"ruleId":"380","severity":1,"message":"403","line":31,"column":3,"nodeType":"382","messageId":"383","endLine":31,"endColumn":12},{"ruleId":"380","severity":1,"message":"404","line":32,"column":3,"nodeType":"382","messageId":"383","endLine":32,"endColumn":24},{"ruleId":"380","severity":1,"message":"405","line":35,"column":3,"nodeType":"382","messageId":"383","endLine":35,"endColumn":14},{"ruleId":"380","severity":1,"message":"406","line":39,"column":30,"nodeType":"382","messageId":"383","endLine":39,"endColumn":51},{"ruleId":"380","severity":1,"message":"407","line":41,"column":10,"nodeType":"382","messageId":"383","endLine":41,"endColumn":28},{"ruleId":"380","severity":1,"message":"408","line":42,"column":9,"nodeType":"382","messageId":"383","endLine":42,"endColumn":17},{"ruleId":"380","severity":1,"message":"409","line":709,"column":11,"nodeType":"382","messageId":"383","endLine":709,"endColumn":22},{"ruleId":"410","severity":1,"message":"411","line":745,"column":58,"nodeType":"412","messageId":"413","endLine":745,"endColumn":67},{"ruleId":"380","severity":1,"message":"399","line":1,"column":17,"nodeType":"382","messageId":"383","endLine":1,"endColumn":26},{"ruleId":"380","severity":1,"message":"399","line":1,"column":17,"nodeType":"382","messageId":"383","endLine":1,"endColumn":26},{"ruleId":"380","severity":1,"message":"414","line":4,"column":10,"nodeType":"382","messageId":"383","endLine":4,"endColumn":25},{"ruleId":"380","severity":1,"message":"415","line":11,"column":3,"nodeType":"382","messageId":"383","endLine":11,"endColumn":9},{"ruleId":"380","severity":1,"message":"416","line":14,"column":3,"nodeType":"382","messageId":"383","endLine":14,"endColumn":13},{"ruleId":"380","severity":1,"message":"399","line":1,"column":17,"nodeType":"382","messageId":"383","endLine":1,"endColumn":26},{"ruleId":"380","severity":1,"message":"417","line":14,"column":5,"nodeType":"382","messageId":"383","endLine":14,"endColumn":14},{"ruleId":"418","severity":1,"message":"419","line":92,"column":1,"nodeType":"420","endLine":141,"endColumn":3},{"ruleId":"380","severity":1,"message":"399","line":1,"column":17,"nodeType":"382","messageId":"383","endLine":1,"endColumn":26},{"ruleId":"380","severity":1,"message":"400","line":5,"column":3,"nodeType":"382","messageId":"383","endLine":5,"endColumn":7},{"ruleId":"380","severity":1,"message":"421","line":6,"column":3,"nodeType":"382","messageId":"383","endLine":6,"endColumn":8},{"ruleId":"380","severity":1,"message":"422","line":7,"column":3,"nodeType":"382","messageId":"383","endLine":7,"endColumn":12},{"ruleId":"380","severity":1,"message":"423","line":9,"column":3,"nodeType":"382","messageId":"383","endLine":9,"endColumn":14},{"ruleId":"380","severity":1,"message":"415","line":10,"column":3,"nodeType":"382","messageId":"383","endLine":10,"endColumn":9},{"ruleId":"380","severity":1,"message":"424","line":11,"column":3,"nodeType":"382","messageId":"383","endLine":11,"endColumn":9},{"ruleId":"380","severity":1,"message":"425","line":12,"column":3,"nodeType":"382","messageId":"383","endLine":12,"endColumn":10},{"ruleId":"380","severity":1,"message":"417","line":13,"column":3,"nodeType":"382","messageId":"383","endLine":13,"endColumn":12},{"ruleId":"380","severity":1,"message":"416","line":14,"column":3,"nodeType":"382","messageId":"383","endLine":14,"endColumn":13},{"ruleId":"380","severity":1,"message":"426","line":15,"column":3,"nodeType":"382","messageId":"383","endLine":15,"endColumn":7},{"ruleId":"380","severity":1,"message":"427","line":16,"column":3,"nodeType":"382","messageId":"383","endLine":16,"endColumn":13},{"ruleId":"380","severity":1,"message":"428","line":17,"column":3,"nodeType":"382","messageId":"383","endLine":17,"endColumn":8},{"ruleId":"380","severity":1,"message":"393","line":18,"column":3,"nodeType":"382","messageId":"383","endLine":18,"endColumn":8},{"ruleId":"380","severity":1,"message":"429","line":19,"column":3,"nodeType":"382","messageId":"383","endLine":19,"endColumn":13},{"ruleId":"380","severity":1,"message":"430","line":20,"column":3,"nodeType":"382","messageId":"383","endLine":20,"endColumn":17},{"ruleId":"380","severity":1,"message":"431","line":22,"column":8,"nodeType":"382","messageId":"383","endLine":22,"endColumn":13},{"ruleId":"380","severity":1,"message":"432","line":29,"column":7,"nodeType":"382","messageId":"383","endLine":29,"endColumn":13},{"ruleId":"380","severity":1,"message":"433","line":30,"column":7,"nodeType":"382","messageId":"383","endLine":30,"endColumn":11},{"ruleId":"380","severity":1,"message":"399","line":1,"column":17,"nodeType":"382","messageId":"383","endLine":1,"endColumn":26},{"ruleId":"380","severity":1,"message":"400","line":5,"column":3,"nodeType":"382","messageId":"383","endLine":5,"endColumn":7},{"ruleId":"380","severity":1,"message":"424","line":11,"column":3,"nodeType":"382","messageId":"383","endLine":11,"endColumn":9},{"ruleId":"380","severity":1,"message":"416","line":14,"column":3,"nodeType":"382","messageId":"383","endLine":14,"endColumn":13},{"ruleId":"380","severity":1,"message":"428","line":16,"column":3,"nodeType":"382","messageId":"383","endLine":16,"endColumn":8},{"ruleId":"380","severity":1,"message":"393","line":17,"column":3,"nodeType":"382","messageId":"383","endLine":17,"endColumn":8},{"ruleId":"380","severity":1,"message":"431","line":21,"column":8,"nodeType":"382","messageId":"383","endLine":21,"endColumn":13},"no-native-reassign",["434"],"no-negated-in-lhs",["435"],"no-unused-vars","'phoneRegex' is assigned a value but never used.","Identifier","unusedVar","'medicalNumberRegex' is assigned a value but never used.","'formValid' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'CLink' is defined but never used.","'TheHeaderDropdown' is defined but never used.","'TheHeaderDropdownMssg' is defined but never used.","'TheHeaderDropdownNotif' is defined but never used.","'TheHeaderDropdownTasks' is defined but never used.","'templateNavigation' is defined but never used.","'Component' is defined but never used.","'CRow' is defined but never used.","'Node' is defined but never used.","'COMPLEX_CIRCLE_TYPE' is defined but never used.","'POLY_TYPE' is defined but never used.","'SPECIAL_CHILD_SUBTYPE' is defined but never used.","'SKINNY_TYPE' is defined but never used.","'NotificationContainer' is defined but never used.","'RoleAwareComponent' is defined but never used.","'Redirect' is defined but never used.","'question_id' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","'FontAwesomeIcon' is defined but never used.","'CLabel' is defined but never used.","'CContainer' is defined but never used.","'CCollapse' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'CCard' is defined but never used.","'CCardBody' is defined but never used.","'CCardFooter' is defined but never used.","'CInput' is defined but never used.","'CButton' is defined but never used.","'CCol' is defined but never used.","'CDataTable' is defined but never used.","'CFade' is defined but never used.","'CFormGroup' is defined but never used.","'CInputCheckbox' is defined but never used.","'CIcon' is defined but never used.","'fields' is assigned a value but never used.","'role' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]