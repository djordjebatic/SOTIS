{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/milica/Desktop/SOTIS/frontend/src/views/Pages/TestsPage.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Sidebar, InputItem, DropdownItem, Icon, Item, Logo, LogoText } from 'react-sidebar-ui';\nimport { Row, Col, Card, CardHeader, CardBody, FormGroup, Label, Modal, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Button, Collapse, FormText, Dropdown, DropdownToggle, DropdownMenu, ListGroup, ListGroupItem } from \"reactstrap\";\nconst url = process.env.REACT_APP_DOMAIN + ':' + process.env.REACT_APP_PORT + '/';\n\nclass TestsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accordion: [],\n      tests: [{\n        \"title\": \"test\",\n        \"professor_id\": \"1\",\n        \"max_score\": \"2\",\n        \"questions\": [{\n          \"title\": \"Ko je lenjivac\",\n          \"points\": \"1\",\n          \"answers\": [{\n            \"title\": \"Zec\",\n            \"isCorrect\": 0\n          }, {\n            \"title\": \"Zmija\",\n            \"isCorrect\": 1\n          }, {\n            \"title\": \"Guster\",\n            \"isCorrect\": 1\n          }]\n        }, {\n          \"title\": \"Ko je nesto drugo\",\n          \"points\": \"1\",\n          \"answers\": [{\n            \"title\": \"Zec\",\n            \"isCorrect\": 0\n          }, {\n            \"title\": \"Orao\",\n            \"isCorrect\": 1\n          }, {\n            \"title\": \"Vrabac\",\n            \"isCorrect\": 1\n          }]\n        }]\n      }, {\n        \"title\": \"Drugi test\",\n        \"professor_id\": \"1\",\n        \"max_score\": \"3\",\n        \"questions\": [{\n          \"title\": \"Pitanje 1\",\n          \"points\": \"1\",\n          \"answers\": [{\n            \"title\": \"Odgovor1\",\n            \"isCorrect\": 0\n          }, {\n            \"title\": \"ODgvor 2\",\n            \"isCorrect\": 1\n          }, {\n            \"title\": \"Odgovor 2\",\n            \"isCorrect\": 1\n          }]\n        }, {\n          \"title\": \"Pitanje 2\",\n          \"points\": \"2\",\n          \"answers\": [{\n            \"title\": \"Odgovor 21\",\n            \"isCorrect\": 0\n          }, {\n            \"title\": \"Odgovor2-2\",\n            \"isCorrect\": 1\n          }, {\n            \"title\": \"Odgovor 3-3\",\n            \"isCorrect\": 1\n          }]\n        }]\n      }]\n    };\n    this.getTests = this.getTests.bind(this);\n    this.toggleAccordion = this.toggleAccordion.bind(this);\n    this.generateAccordion = this.generateAccordion.bind(this);\n  }\n\n  componentDidMount() {\n    //this.getTests()\n    this.generateAccordion();\n  }\n\n  getTests() {\n    axios({\n      method: 'get',\n      url: url + 'test'\n    }).then(response => {\n      console.log(response);\n      this.setState({\n        tests: response.data\n      });\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  generateAccordion() {\n    this.state.accordion = Array(this.state.tests.length).fill(false);\n  }\n\n  toggleAccordion(tab) {\n    const prevState = this.state.accordion;\n    const state = prevState.map((x, index) => tab === index ? !x : false);\n    this.setState({\n      accordion: state\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          backgroundColor: \"lightgreen\",\n          marginLeft: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fas fa-plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), this.state.tests.map((test, index) => /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          backgroundColor: \"lightblue\",\n          margin: \"10px\",\n          padding: \"2px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            hidden: !this.state.accordion[index],\n            onClick: () => this.toggleAccordion(index),\n            children: [test.title, /*#__PURE__*/_jsxDEV(\"i\", {\n              style: {\n                marginLeft: \"10px\"\n              },\n              class: \"fas fa-angle-up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            hidden: this.state.accordion[index],\n            onClick: () => this.toggleAccordion(index),\n            children: [test.title, /*#__PURE__*/_jsxDEV(\"i\", {\n              style: {\n                marginLeft: \"10px\"\n              },\n              class: \"fas fa-angle-down\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          hidden: !this.state.accordion[index],\n          isOpen: this.state.accordion[index],\n          \"data-parent\": \"#accordion\",\n          id: index,\n          \"aria-labelledby\": index,\n          children: /*#__PURE__*/_jsxDEV(CardBody, {\n            style: {\n              border: \"3px solid lightblue\",\n              padding: \"5px\"\n            },\n            children: test.questions.map((question, indexQ) => /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                style: {\n                  backgroundColor: \"whitesmoke\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                  style: {\n                    padding: \"3px\"\n                  },\n                  children: [indexQ + 1, \". \", question.title]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n                  children: question.answers.map((answer, indexA) => /*#__PURE__*/_jsxDEV(Card, {\n                    style: {\n                      margin: \"5px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        style: {\n                          marginRight: \"10px\"\n                        },\n                        type: \"checkbox\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 174,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        children: [indexA + 1, \". \", answer.title]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 175,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 31\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: this.state.openModal,\n        className: \"modal-primary\",\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: [\"You selected more than one car from the same agent. Do you want to create bundle for your requests?\", /*#__PURE__*/_jsxDEV(\"b\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 30\n          }, this), this.state.agentForBundle.map((agent, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkbox-inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onChange: event => this.addToBundle(agent, event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 23\n            }, this), agent]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 22\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: event => this.createRequests(true),\n            children: \"Create bundle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 21\n          }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n            color: \"secondary\",\n            onClick: event => this.createRequests(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TestsPage;","map":{"version":3,"sources":["/home/milica/Desktop/SOTIS/frontend/src/views/Pages/TestsPage.js"],"names":["React","Component","axios","Sidebar","InputItem","DropdownItem","Icon","Item","Logo","LogoText","Row","Col","Card","CardHeader","CardBody","FormGroup","Label","Modal","Form","Input","InputGroup","InputGroupAddon","InputGroupText","Button","Collapse","FormText","Dropdown","DropdownToggle","DropdownMenu","ListGroup","ListGroupItem","url","process","env","REACT_APP_DOMAIN","REACT_APP_PORT","TestsPage","constructor","props","state","accordion","tests","getTests","bind","toggleAccordion","generateAccordion","componentDidMount","method","then","response","console","log","setState","data","error","Array","length","fill","tab","prevState","map","x","index","render","backgroundColor","marginLeft","test","margin","padding","title","border","questions","question","indexQ","answers","answer","indexA","marginRight","openModal","agentForBundle","agent","event","addToBundle","createRequests"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,YAA7B,EAA2CC,IAA3C,EAAiDC,IAAjD,EAAuDC,IAAvD,EAA6DC,QAA7D,QAA6E,kBAA7E;AACA,SACEC,GADF,EACOC,GADP,EACYC,IADZ,EACkBC,UADlB,EAC8BC,QAD9B,EACwCC,SADxC,EACmDC,KADnD,EAC0DC,KAD1D,EACiEC,IADjE,EACuEC,KADvE,EAC8EC,UAD9E,EAC0FC,eAD1F,EAEEC,cAFF,EAEkBC,MAFlB,EAE0BC,QAF1B,EAEoCC,QAFpC,EAE8CC,QAF9C,EAEwDC,cAFxD,EAEwEC,YAFxE,EAEsFC,SAFtF,EAEiGC,aAFjG,QAGO,YAHP;AAKA,MAAMC,GAAG,GAAIC,OAAO,CAACC,GAAR,CAAYC,gBAAb,GAAiC,GAAjC,GAAwCF,OAAO,CAACC,GAAR,CAAYE,cAApD,GAAsE,GAAlF;;AAEA,MAAMC,SAAN,SAAwBnC,SAAxB,CAAkC;AAChCoC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,KAAK,EAAE,CAAC;AACN,iBAAS,MADH;AAEN,wBAAgB,GAFV;AAGN,qBAAa,GAHP;AAIN,qBAAa,CACX;AACE,mBAAS,gBADX;AAEE,oBAAU,GAFZ;AAGE,qBAAW,CACT;AACE,qBAAS,KADX;AAEE,yBAAa;AAFf,WADS,EAKT;AACE,qBAAS,OADX;AAEE,yBAAa;AAFf,WALS,EAST;AACE,qBAAS,QADX;AAEE,yBAAa;AAFf,WATS;AAHb,SADW,EAmBX;AACE,mBAAS,mBADX;AAEE,oBAAU,GAFZ;AAGE,qBAAW,CACT;AACE,qBAAS,KADX;AAEE,yBAAa;AAFf,WADS,EAKT;AACE,qBAAS,MADX;AAEE,yBAAa;AAFf,WALS,EAST;AACE,qBAAS,QADX;AAEE,yBAAa;AAFf,WATS;AAHb,SAnBW;AAJP,OAAD,EA2CP;AACE,iBAAS,YADX;AAEE,wBAAgB,GAFlB;AAGE,qBAAa,GAHf;AAIE,qBAAa,CACX;AACE,mBAAS,WADX;AAEE,oBAAU,GAFZ;AAGE,qBAAW,CACT;AACE,qBAAS,UADX;AAEE,yBAAa;AAFf,WADS,EAKT;AACE,qBAAS,UADX;AAEE,yBAAa;AAFf,WALS,EAST;AACE,qBAAS,WADX;AAEE,yBAAa;AAFf,WATS;AAHb,SADW,EAmBX;AACE,mBAAS,WADX;AAEE,oBAAU,GAFZ;AAGE,qBAAW,CACT;AACE,qBAAS,YADX;AAEE,yBAAa;AAFf,WADS,EAKT;AACE,qBAAS,YADX;AAEE,yBAAa;AAFf,WALS,EAST;AACE,qBAAS,aADX;AAEE,yBAAa;AAFf,WATS;AAHb,SAnBW;AAJf,OA3CO;AAFI,KAAb;AA2FA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBD,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKE,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBF,IAAvB,CAA4B,IAA5B,CAAzB;AACD;;AAEDG,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKD,iBAAL;AACD;;AAEDH,EAAAA,QAAQ,GAAG;AACTxC,IAAAA,KAAK,CAAC;AACJ6C,MAAAA,MAAM,EAAE,KADJ;AAEJhB,MAAAA,GAAG,EAAEA,GAAG,GAAG;AAFP,KAAD,CAAL,CAGGiB,IAHH,CAGSC,QAAD,IAAc;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,WAAKG,QAAL,CAAc;AAAEX,QAAAA,KAAK,EAAEQ,QAAQ,CAACI;AAAlB,OAAd;AACD,KAND,EAMIC,KAAD,IAAW;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,KARD;AASD;;AAEDT,EAAAA,iBAAiB,GAAE;AACjB,SAAKN,KAAL,CAAWC,SAAX,GAAuBe,KAAK,CAAE,KAAKhB,KAAL,CAAWE,KAAZ,CAAmBe,MAApB,CAAL,CAAiCC,IAAjC,CAAsC,KAAtC,CAAvB;AACD;;AAEDb,EAAAA,eAAe,CAACc,GAAD,EAAM;AAEnB,UAAMC,SAAS,GAAG,KAAKpB,KAAL,CAAWC,SAA7B;AACA,UAAMD,KAAK,GAAGoB,SAAS,CAACC,GAAV,CAAc,CAACC,CAAD,EAAIC,KAAJ,KAAcJ,GAAG,KAAKI,KAAR,GAAgB,CAACD,CAAjB,GAAqB,KAAjD,CAAd;AAEA,SAAKT,QAAL,CAAc;AACZZ,MAAAA,SAAS,EAAED;AADC,KAAd;AAGD;;AAEDwB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAACC,UAAAA,eAAe,EAAC,YAAjB;AAA+BC,UAAAA,UAAU,EAAC;AAA1C,SAAf;AAAA,+BACE;AAAG,UAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAII,KAAK1B,KAAL,CAAWE,KAAZ,CAAmBmB,GAAnB,CAAuB,CAACM,IAAD,EAAOJ,KAAP,kBAClB,QAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEE,UAAAA,eAAe,EAAE,WAAnB;AAAgCG,UAAAA,MAAM,EAAE,MAAxC;AAAgDC,UAAAA,OAAO,EAAC;AAAxD,SAAb;AAAA,gCACE,QAAC,UAAD;AAAA,kCACE;AAAI,YAAA,MAAM,EAAE,CAAC,KAAK7B,KAAL,CAAWC,SAAX,CAAqBsB,KAArB,CAAb;AAA0C,YAAA,OAAO,EAAE,MAAM,KAAKlB,eAAL,CAAqBkB,KAArB,CAAzD;AAAA,uBAAwFI,IAAI,CAACG,KAA7F,eACE;AAAG,cAAA,KAAK,EAAE;AAACJ,gBAAAA,UAAU,EAAC;AAAZ,eAAV;AAA+B,cAAA,KAAK,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,oBADF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAI,YAAA,MAAM,EAAE,KAAK1B,KAAL,CAAWC,SAAX,CAAqBsB,KAArB,CAAZ;AAAyC,YAAA,OAAO,EAAE,MAAM,KAAKlB,eAAL,CAAqBkB,KAArB,CAAxD;AAAA,uBACGI,IAAI,CAACG,KADR,eAEE;AAAG,cAAA,KAAK,EAAE;AAACJ,gBAAAA,UAAU,EAAC;AAAZ,eAAV;AAA+B,cAAA,KAAK,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAcE,QAAC,QAAD;AAAU,UAAA,MAAM,EAAE,CAAC,KAAK1B,KAAL,CAAWC,SAAX,CAAqBsB,KAArB,CAAnB;AAAgD,UAAA,MAAM,EAAE,KAAKvB,KAAL,CAAWC,SAAX,CAAqBsB,KAArB,CAAxD;AAAqF,yBAAY,YAAjG;AAA8G,UAAA,EAAE,EAAEA,KAAlH;AAAyH,6BAAiBA,KAA1I;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,KAAK,EAAE;AAACQ,cAAAA,MAAM,EAAC,qBAAR;AAA+BF,cAAAA,OAAO,EAAC;AAAvC,aAAjB;AAAA,sBACIF,IAAI,CAACK,SAAN,CAAiBX,GAAjB,CAAqB,CAACY,QAAD,EAAWC,MAAX,kBACpB,QAAC,GAAD;AAAA,qCACE,QAAC,IAAD;AAAM,gBAAA,KAAK,EAAE;AAAET,kBAAAA,eAAe,EAAE;AAAnB,iBAAb;AAAA,wCACE,QAAC,UAAD;AAAY,kBAAA,KAAK,EAAE;AAACI,oBAAAA,OAAO,EAAC;AAAT,mBAAnB;AAAA,6BACGK,MAAM,GAAG,CADZ,QACiBD,QAAQ,CAACH,KAD1B;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE,QAAC,QAAD;AAAA,4BACIG,QAAQ,CAACE,OAAV,CAAmBd,GAAnB,CAAuB,CAACe,MAAD,EAASC,MAAT,kBACtB,QAAC,IAAD;AAAM,oBAAA,KAAK,EAAE;AAAET,sBAAAA,MAAM,EAAE;AAAV,qBAAb;AAAA,2CACE;AAAA,8CACE;AAAO,wBAAA,KAAK,EAAE;AAACU,0BAAAA,WAAW,EAAC;AAAb,yBAAd;AAAoC,wBAAA,IAAI,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,8BADF,eAEE;AAAA,mCAAQD,MAAM,GAAG,CAAjB,QAAsBD,MAAM,CAACN,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BADD;AADH;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,cADL,CAJH,eA6CA,QAAC,KAAD;AAAO,QAAA,MAAM,EAAE,KAAK9B,KAAL,CAAWuC,SAA1B;AAAqC,QAAA,SAAS,EAAC,eAA/C;AAAA,gCACY,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBADZ,eAEY,QAAC,SAAD;AAAA,yIAEW;AAAA;AAAA;AAAA;AAAA,kBAFX,EAGI,KAAKvC,KAAL,CAAWwC,cAAX,CAA0BnB,GAA1B,CAA8B,CAACoB,KAAD,EAAQlB,KAAR,kBAC/B;AAAO,YAAA,SAAS,EAAC,iBAAjB;AAAA,oCACC;AAAO,cAAA,IAAI,EAAC,UAAZ;AAAuB,cAAA,QAAQ,EAAEmB,KAAK,IAAI,KAAKC,WAAL,CAAiBF,KAAjB,EAAwBC,KAAxB;AAA1C;AAAA;AAAA;AAAA;AAAA,oBADD,EAEED,KAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADC,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFZ,eAYY,QAAC,WAAD;AAAA,kCACE,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAwB,YAAA,OAAO,EAAEC,KAAK,IAAI,KAAKE,cAAL,CAAoB,IAApB,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAC8F,GAD9F,eAEE,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,WAAd;AAA0B,YAAA,OAAO,EAAEF,KAAK,IAAI,KAAKE,cAAL,CAAoB,KAApB,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZZ;AAAA;AAAA;AAAA;AAAA;AAAA,cA7CA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkED;;AArM+B;;AAwMlC,eAAe/C,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Sidebar, InputItem, DropdownItem, Icon, Item, Logo, LogoText } from 'react-sidebar-ui'\nimport {\n  Row, Col, Card, CardHeader, CardBody, FormGroup, Label, Modal, Form, Input, InputGroup, InputGroupAddon,\n  InputGroupText, Button, Collapse, FormText, Dropdown, DropdownToggle, DropdownMenu, ListGroup, ListGroupItem\n} from \"reactstrap\";\n\nconst url = (process.env.REACT_APP_DOMAIN) + ':' + (process.env.REACT_APP_PORT) + '/';\n\nclass TestsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accordion: [],\n      tests: [{\n        \"title\": \"test\",\n        \"professor_id\": \"1\",\n        \"max_score\": \"2\",\n        \"questions\": [\n          {\n            \"title\": \"Ko je lenjivac\",\n            \"points\": \"1\",\n            \"answers\": [\n              {\n                \"title\": \"Zec\",\n                \"isCorrect\": 0\n              },\n              {\n                \"title\": \"Zmija\",\n                \"isCorrect\": 1\n              },\n              {\n                \"title\": \"Guster\",\n                \"isCorrect\": 1\n              }\n            ]\n          },\n          {\n            \"title\": \"Ko je nesto drugo\",\n            \"points\": \"1\",\n            \"answers\": [\n              {\n                \"title\": \"Zec\",\n                \"isCorrect\": 0\n              },\n              {\n                \"title\": \"Orao\",\n                \"isCorrect\": 1\n              },\n              {\n                \"title\": \"Vrabac\",\n                \"isCorrect\": 1\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"title\": \"Drugi test\",\n        \"professor_id\": \"1\",\n        \"max_score\": \"3\",\n        \"questions\": [\n          {\n            \"title\": \"Pitanje 1\",\n            \"points\": \"1\",\n            \"answers\": [\n              {\n                \"title\": \"Odgovor1\",\n                \"isCorrect\": 0\n              },\n              {\n                \"title\": \"ODgvor 2\",\n                \"isCorrect\": 1\n              },\n              {\n                \"title\": \"Odgovor 2\",\n                \"isCorrect\": 1\n              }\n            ]\n          },\n          {\n            \"title\": \"Pitanje 2\",\n            \"points\": \"2\",\n            \"answers\": [\n              {\n                \"title\": \"Odgovor 21\",\n                \"isCorrect\": 0\n              },\n              {\n                \"title\": \"Odgovor2-2\",\n                \"isCorrect\": 1\n              },\n              {\n                \"title\": \"Odgovor 3-3\",\n                \"isCorrect\": 1\n              }\n            ]\n          }\n        ]\n      }\n      ]\n    };\n\n    this.getTests = this.getTests.bind(this);\n    this.toggleAccordion = this.toggleAccordion.bind(this)\n    this.generateAccordion = this.generateAccordion.bind(this)\n  }\n\n  componentDidMount() {\n    //this.getTests()\n    this.generateAccordion()\n  }\n\n  getTests() {\n    axios({\n      method: 'get',\n      url: url + 'test',\n    }).then((response) => {\n      console.log(response);\n      this.setState({ tests: response.data })\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  generateAccordion(){\n    this.state.accordion = Array((this.state.tests).length).fill(false)\n  }\n\n  toggleAccordion(tab) {\n\n    const prevState = this.state.accordion;\n    const state = prevState.map((x, index) => tab === index ? !x : false);\n\n    this.setState({\n      accordion: state,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Button style={{backgroundColor:\"lightgreen\", marginLeft:\"10px\"}}>\n          <i class=\"fas fa-plus\"></i>\n        </Button>\n        {(this.state.tests).map((test, index) =>\n              <Card style={{ backgroundColor: \"lightblue\", margin: \"10px\", padding:\"2px\"}}>\n                <CardHeader>\n                  <h1 hidden={!this.state.accordion[index]} onClick={() => this.toggleAccordion(index)} >{test.title}\n                    <i style={{marginLeft:\"10px\"}} class=\"fas fa-angle-up\"></i>\n                  </h1>\n                  <h1 hidden={this.state.accordion[index]} onClick={() => this.toggleAccordion(index)}>\n                    {test.title}\n                    <i style={{marginLeft:\"10px\"}} class=\"fas fa-angle-down\"></i>\n                  </h1>\n              {/*    <Button block color=\"link\" className=\"text-center m-0 p-0\" onClick={() => this.toggleAccordion(index)} aria-expanded={this.state.accordion[0]} aria-controls={index}>\n                    <h5 className=\"m-0 p-0\">Expand</h5>\n                  </Button>            \n        */}  \n                  </CardHeader>\n                <Collapse hidden={!this.state.accordion[index]} isOpen={this.state.accordion[index]} data-parent=\"#accordion\" id={index} aria-labelledby={index}>\n                  <CardBody style={{border:\"3px solid lightblue\", padding:\"5px\" }}>\n                    {(test.questions).map((question, indexQ) =>\n                      <Row>\n                        <Card style={{ backgroundColor: \"whitesmoke\" }}>\n                          <CardHeader style={{padding:\"3px\"}}>\n                            {indexQ + 1}. {question.title}\n                          </CardHeader>\n                          <CardBody>\n                            {(question.answers).map((answer, indexA) =>\n                              <Card style={{ margin: \"5px\" }}>\n                                <div>\n                                  <input style={{marginRight:\"10px\"}} type=\"checkbox\"></input>\n                                  <label>{indexA + 1}. {answer.title}</label>\n                                </div>\n                              </Card>\n                            )}\n                          </CardBody>\n                        </Card>\n                      </Row>\n                    )}\n                  </CardBody>\n                </Collapse>\n              </Card>\n        )}\n\n      <Modal isOpen={this.state.openModal} className='modal-primary'>\n                  <ModalHeader></ModalHeader>\n                  <ModalBody>\n                    You selected more than one car from the same agent. Do you want to create bundle for your \n                    requests?<b></b>\n                    {(this.state.agentForBundle.map((agent, index) =>\n                     <label className=\"checkbox-inline\">\n                      <input type=\"checkbox\" onChange={event => this.addToBundle(agent, event)} />\n                      {agent}\n                   </label>                  \n                    ))}\n                  </ModalBody>\n                  <ModalFooter>\n                    <Button color=\"primary\" onClick={event => this.createRequests(true)}>Create bundle</Button>{' '}\n                    <Button color=\"secondary\" onClick={event => this.createRequests(false)}>Cancel</Button>\n                  </ModalFooter>\n                </Modal>\n\n      </div>\n    );\n  }\n}\n\nexport default TestsPage;"]},"metadata":{},"sourceType":"module"}