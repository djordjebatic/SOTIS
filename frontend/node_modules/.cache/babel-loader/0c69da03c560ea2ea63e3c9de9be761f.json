{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/milica/Desktop/SOTIS/frontend/src/views/Pages/TestDone.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Sidebar, InputItem, DropdownItem, Icon, Item, Logo, LogoText } from 'react-sidebar-ui';\nimport { Button, Card, CardBody, CardHeader, Row, Table, Col } from 'reactstrap';\nconst url = process.env.REACT_APP_DOMAIN + ':' + process.env.REACT_APP_PORT + '/';\n\nclass TestsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      test: {\n        title: \"\",\n        test_questions: [{\n          title: \"\",\n          test_question_answers: []\n        }]\n      },\n      testTake: {\n        title: \"\",\n        test_questions: [{\n          title: \"\",\n          test_question_answers: []\n        }]\n      }\n    };\n    this.getTestTakeAnswer = this.getTestTake.bind(this);\n    this.getTest = this.getTest.bind(this);\n  }\n\n  componentDidMount() {\n    this.getTestTake();\n  }\n\n  getTest() {\n    axios({\n      method: 'get',\n      url: url + 'test/' + this.state.testTake.test_id\n    }).then(response => {\n      this.setState({\n        test: response.data\n      });\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  getTestTake() {\n    const {\n      id\n    } = this.props.match.params;\n    axios({\n      method: 'get',\n      url: url + 'test_take/' + id\n    }).then(response => {\n      this.setState({\n        testTake: response.data\n      });\n      this.getTest();\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        backgroundColor: \"whiteSmoke\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: this.state.test.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          lg: \"12\",\n          xs: \"12\",\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: \"4\",\n              children: \"Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"4\",\n              children: \"Answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"4\",\n              children: \"Correct Answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, this), this.state.test.test_questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                md: \"4\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [index, \". \", question.title]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this), question.test_question_answers.map((answer, indexA) => /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                md: \"4\",\n                children: [indexA, \". \", answer.title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: \"4\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"insert\", {\n                  type: \"checkbox\",\n                  checked: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 40\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: \"4\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"insert\", {\n                  type: \"checkbox\",\n                  checked: answer.isCorrect,\n                  disable: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 40\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 27\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default TestsPage;","map":{"version":3,"sources":["/home/milica/Desktop/SOTIS/frontend/src/views/Pages/TestDone.js"],"names":["React","Component","axios","Sidebar","InputItem","DropdownItem","Icon","Item","Logo","LogoText","Button","Card","CardBody","CardHeader","Row","Table","Col","url","process","env","REACT_APP_DOMAIN","REACT_APP_PORT","TestsPage","constructor","props","state","test","title","test_questions","test_question_answers","testTake","getTestTakeAnswer","getTestTake","bind","getTest","componentDidMount","method","test_id","then","response","setState","data","error","console","log","id","match","params","render","backgroundColor","map","question","index","answer","indexA","isCorrect"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Sidebar, InputItem, DropdownItem, Icon, Item, Logo, LogoText } from 'react-sidebar-ui'\nimport {Button, Card, CardBody, CardHeader, Row, Table, Col } from 'reactstrap';\n\nconst url = (process.env.REACT_APP_DOMAIN) + ':' + (process.env.REACT_APP_PORT) + '/';\n\nclass TestsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      test: {\n        title: \"\",\n        test_questions: [{\n            title:\"\",\n            test_question_answers:[]\n        }]\n    },\n      testTake: {\n          title: \"\",\n          test_questions: [{\n              title:\"\",\n              test_question_answers:[]\n          }]\n      },\n    };\n\n    this.getTestTakeAnswer = this.getTestTake.bind(this)\n    this.getTest = this.getTest.bind(this);\n  }\n\n  componentDidMount() {\n    this.getTestTake()\n  }\n\n  getTest() {\n    axios({\n      method: 'get',\n      url: url + 'test/' + this.state.testTake.test_id,\n    }).then((response) => {\n      this.setState({ test: response.data })\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  getTestTake(){\n    const { id } = this.props.match.params;\n    axios({\n      method: 'get',\n      url: url + 'test_take/' + id,\n    }).then((response) => {\n      this.setState({ testTake: response.data })\n      this.getTest()\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return (\n        <Card style={{ backgroundColor: \"whiteSmoke\" }}>\n        <CardHeader>\n            <h2>{this.state.test.title}</h2>\n        </CardHeader>\n        <CardBody>\n          <Col md=\"12\" lg=\"12\" xs=\"12\">\n          <Row>\n            <Col md=\"4\">Question</Col>\n            <Col md=\"4\">Answer</Col>\n            <Col md=\"4\">Correct Answer</Col>\n          </Row>\n          {(this.state.test.test_questions).map((question, index) =>\n          <div>\n                  <Row>\n                    <Col md=\"4\"><h3>{index}. {question.title}</h3></Col>\n                  </Row>\n                  {(question.test_question_answers).map((answer, indexA) =>\n                          <Row>\n                          <Col md=\"4\">{indexA}. {answer.title}</Col>\n                          <Col md=\"4\"> <insert type=\"checkbox\" checked={true}></insert></Col>\n                          <Col md=\"4\"> <insert type=\"checkbox\" checked={answer.isCorrect} disable={true}></insert></Col>\n                        </Row>\n                        )}\n                  </div>\n                )}\n          </Col>   \n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default TestsPage;"]},"metadata":{},"sourceType":"module"}