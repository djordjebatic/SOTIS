{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/milica/Desktop/SOTIS/frontend/src/views/Pages/TestsPage.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Sidebar, InputItem, DropdownItem, Icon, Item, Logo, LogoText } from 'react-sidebar-ui';\nimport { Row, Col, Card, CardHeader, CardBody, FormGroup, Label, Modal, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Button, Collapse, FormText, Dropdown, DropdownToggle, DropdownMenu, ListGroup, ListGroupItem } from \"reactstrap\";\nconst url = process.env.REACT_APP_DOMAIN + ':' + process.env.REACT_APP_PORT + '/';\n\nclass TestsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accordion: [false, false],\n      tests: [{\n        \"title\": \"test\",\n        \"professor_id\": \"1\",\n        \"max_score\": \"2\",\n        \"questions\": [{\n          \"title\": \"Ko je lenjivac\",\n          \"points\": \"1\",\n          \"answers\": [{\n            \"title\": \"Zec\",\n            \"isCorrect\": 0\n          }, {\n            \"title\": \"Zmija\",\n            \"isCorrect\": 1\n          }, {\n            \"title\": \"Guster\",\n            \"isCorrect\": 1\n          }]\n        }, {\n          \"title\": \"Ko je nesto drugo\",\n          \"points\": \"1\",\n          \"answers\": [{\n            \"title\": \"Zec\",\n            \"isCorrect\": 0\n          }, {\n            \"title\": \"Orao\",\n            \"isCorrect\": 1\n          }, {\n            \"title\": \"Vrabac\",\n            \"isCorrect\": 1\n          }]\n        }]\n      }, {\n        \"title\": \"Drugi test\",\n        \"professor_id\": \"1\",\n        \"max_score\": \"3\",\n        \"questions\": [{\n          \"title\": \"Pitanje 1\",\n          \"points\": \"1\",\n          \"answers\": [{\n            \"title\": \"Odgovor1\",\n            \"isCorrect\": 0\n          }, {\n            \"title\": \"ODgvor 2\",\n            \"isCorrect\": 1\n          }, {\n            \"title\": \"Odgovor 2\",\n            \"isCorrect\": 1\n          }]\n        }, {\n          \"title\": \"Pitanje 2\",\n          \"points\": \"2\",\n          \"answers\": [{\n            \"title\": \"Odgovor 21\",\n            \"isCorrect\": 0\n          }, {\n            \"title\": \"Odgovor2-2\",\n            \"isCorrect\": 1\n          }, {\n            \"title\": \"Odgovor 3-3\",\n            \"isCorrect\": 1\n          }]\n        }]\n      }]\n    };\n    this.getTests = this.getTests.bind(this);\n    this.toggleAccordion = this.toggleAccordion.bind(this);\n  }\n\n  componentDidMount() {//this.getTests()\n  }\n\n  getTests() {\n    axios({\n      method: 'get',\n      url: url + 'test'\n    }).then(response => {\n      console.log(response);\n      this.setState({\n        tests: response.data\n      });\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  toggleAccordion(tab) {\n    const prevState = this.state.accordion[tab];\n    const state = prevState.map((x, index) => tab === index ? !x : false);\n    this.setState({\n      accordion: state\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.tests.map((test, index) => /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xs: \"12\",\n          md: \"12\",\n          sm: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              backgroundColor: \"whitesmoke\",\n              margin: \"10px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: test.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                block: true,\n                color: \"link\",\n                className: \"text-center m-0 p-0\",\n                onClick: () => this.toggleAccordion(0),\n                \"aria-expanded\": this.state.accordion[0],\n                \"aria-controls\": \"collapseOne\",\n                children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"m-0 p-0\",\n                  children: \"Start your search here\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this), \"              \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n              isOpen: this.state.accordion[0],\n              \"data-parent\": \"#accordion\",\n              id: \"collapseOne\",\n              \"aria-labelledby\": \"headingOne\",\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: test.questions.map((question, index) => /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    style: {\n                      backgroundColor: \"wheat\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                      children: [index, \". \", question.title]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 155,\n                      columnNumber: 19\n                    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n                      children: question.answers.map((answer, index) => /*#__PURE__*/_jsxDEV(Card, {\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"checkbox\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 162,\n                            columnNumber: 25\n                          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                            children: [index, \". answer\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 163,\n                            columnNumber: 25\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 161,\n                          columnNumber: 25\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 160,\n                        columnNumber: 23\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 158,\n                      columnNumber: 19\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 8\n      }, this)), this.state.tests.map((test, index) => /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          backgroundColor: \"whitesmoke\",\n          margin: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: test.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: test.questions.map((question, index) => /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              backgroundColor: \"whitesmoke\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: [index, \". \", question.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: question.answers.map((answer, index) => /*#__PURE__*/_jsxDEV(Card, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [index, \". answer\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TestsPage;","map":{"version":3,"sources":["/home/milica/Desktop/SOTIS/frontend/src/views/Pages/TestsPage.js"],"names":["React","Component","axios","Sidebar","InputItem","DropdownItem","Icon","Item","Logo","LogoText","Row","Col","Card","CardHeader","CardBody","FormGroup","Label","Modal","Form","Input","InputGroup","InputGroupAddon","InputGroupText","Button","Collapse","FormText","Dropdown","DropdownToggle","DropdownMenu","ListGroup","ListGroupItem","url","process","env","REACT_APP_DOMAIN","REACT_APP_PORT","TestsPage","constructor","props","state","accordion","tests","getTests","bind","toggleAccordion","componentDidMount","method","then","response","console","log","setState","data","error","tab","prevState","map","x","index","render","test","backgroundColor","margin","title","questions","question","answers","answer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Sidebar, InputItem, DropdownItem, Icon, Item, Logo, LogoText } from 'react-sidebar-ui'\nimport {\n  Row, Col, Card, CardHeader, CardBody, FormGroup, Label, Modal, Form, Input, InputGroup, InputGroupAddon,\n  InputGroupText, Button, Collapse, FormText, Dropdown, DropdownToggle, DropdownMenu, ListGroup, ListGroupItem\n} from \"reactstrap\";\n\nconst url = (process.env.REACT_APP_DOMAIN) + ':' + (process.env.REACT_APP_PORT) + '/';\n\nclass TestsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accordion: [false, false],\n      tests: [{\n        \"title\": \"test\",\n        \"professor_id\": \"1\",\n        \"max_score\": \"2\",\n        \"questions\": [\n          {\n            \"title\": \"Ko je lenjivac\",\n            \"points\": \"1\",\n            \"answers\": [\n              {\n                \"title\": \"Zec\",\n                \"isCorrect\": 0\n              },\n              {\n                \"title\": \"Zmija\",\n                \"isCorrect\": 1\n              },\n              {\n                \"title\": \"Guster\",\n                \"isCorrect\": 1\n              }\n            ]\n          },\n          {\n            \"title\": \"Ko je nesto drugo\",\n            \"points\": \"1\",\n            \"answers\": [\n              {\n                \"title\": \"Zec\",\n                \"isCorrect\": 0\n              },\n              {\n                \"title\": \"Orao\",\n                \"isCorrect\": 1\n              },\n              {\n                \"title\": \"Vrabac\",\n                \"isCorrect\": 1\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"title\": \"Drugi test\",\n        \"professor_id\": \"1\",\n        \"max_score\": \"3\",\n        \"questions\": [\n          {\n            \"title\": \"Pitanje 1\",\n            \"points\": \"1\",\n            \"answers\": [\n              {\n                \"title\": \"Odgovor1\",\n                \"isCorrect\": 0\n              },\n              {\n                \"title\": \"ODgvor 2\",\n                \"isCorrect\": 1\n              },\n              {\n                \"title\": \"Odgovor 2\",\n                \"isCorrect\": 1\n              }\n            ]\n          },\n          {\n            \"title\": \"Pitanje 2\",\n            \"points\": \"2\",\n            \"answers\": [\n              {\n                \"title\": \"Odgovor 21\",\n                \"isCorrect\": 0\n              },\n              {\n                \"title\": \"Odgovor2-2\",\n                \"isCorrect\": 1\n              },\n              {\n                \"title\": \"Odgovor 3-3\",\n                \"isCorrect\": 1\n              }\n            ]\n          }\n        ]\n      }\n      ]\n    };\n\n    this.getTests = this.getTests.bind(this);\n    this.toggleAccordion = this.toggleAccordion.bind(this)\n\n  }\n\n  componentDidMount() {\n    //this.getTests()\n  }\n\n  getTests() {\n    axios({\n      method: 'get',\n      url: url + 'test',\n    }).then((response) => {\n      console.log(response);\n      this.setState({ tests: response.data })\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  toggleAccordion(tab) {\n\n    const prevState = this.state.accordion[tab];\n    const state = prevState.map((x, index) => tab === index ? !x : false);\n\n    this.setState({\n      accordion: state,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n      {(this.state.tests).map((test, index) =>\n       \n       <Row>\n          <Col xs=\"12\" md=\"12\" sm=\"12\">\n            <Card style={{ backgroundColor: \"whitesmoke\", margin:\"10px\" }}>\n              <CardHeader>\n                <h1>{test.title}</h1>\n                <Button block color=\"link\" className=\"text-center m-0 p-0\" onClick={() => this.toggleAccordion(0)} aria-expanded={this.state.accordion[0]} aria-controls=\"collapseOne\">\n                  <h5 className=\"m-0 p-0\">Start your search here</h5>\n                </Button>              </CardHeader>\n              <Collapse isOpen={this.state.accordion[0]} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                <CardBody>\n                  {(test.questions).map((question, index) =>\n                    <Row>\n\n                                        <Card style={{ backgroundColor: \"wheat\" }}>\n                  <CardHeader>\n                    {index}. {question.title}\n                  </CardHeader>\n                  <CardBody>\n                    {(question.answers).map((answer, index) =>\n                      <Card>\n                        <div>\n                        <input type=\"checkbox\"></input>\n                        <label>{index}. answer</label>\n                        </div>\n                      </Card>\n                    )}\n                  </CardBody>\n                </Card>\n                    </Row>\n                  )}\n                </CardBody>\n              </Collapse>\n            </Card>\n          </Col>\n        </Row>\n\n           \n                  \n)}\n\n\n        {(this.state.tests).map((test, index) =>\n          <Card style={{ backgroundColor: \"whitesmoke\", margin:\"10px\" }}>\n            <CardHeader>\n              {test.title}\n            </CardHeader>\n            <CardBody>\n              {(test.questions).map((question, index) =>\n                <Card style={{ backgroundColor: \"whitesmoke\" }}>\n                  <CardHeader>\n                    {index}. {question.title}\n                  </CardHeader>\n                  <CardBody>\n                    {(question.answers).map((answer, index) =>\n                      <Card>\n                        <div>\n                        <input type=\"checkbox\"></input>\n                        <label>{index}. answer</label>\n                        </div>\n                      </Card>\n                    )}\n                  </CardBody>\n                </Card>\n              )}\n            </CardBody>\n          </Card>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default TestsPage;"]},"metadata":{},"sourceType":"module"}