{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/milica/Desktop/SOTIS/frontend/src/views/Pages/TakeTest.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Sidebar, InputItem, DropdownItem, Icon, Item, Logo, LogoText } from 'react-sidebar-ui';\nimport { Row, Col, Card, CardHeader, CardBody, FormGroup, Label, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Button, Collapse, FormText, Dropdown, DropdownToggle, DropdownMenu, ListGroup, ListGroupItem, Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\nconst url = process.env.REACT_APP_DOMAIN + ':' + process.env.REACT_APP_PORT + '/';\n\nclass TestsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accordion: [],\n      test: {\n        title: \"\",\n        test_questions: [{\n          title: \"\",\n          test_question_answers: []\n        }]\n      }\n    };\n    this.getTest = this.getTest.bind(this);\n    this.toggleAccordion = this.toggleAccordion.bind(this);\n    this.generateAccordion = this.generateAccordion.bind(this);\n  }\n\n  componentDidMount() {\n    this.getTest();\n  }\n\n  getTest() {\n    const {\n      id\n    } = this.props.match.params;\n    axios({\n      method: 'get',\n      url: url + 'test/' + id\n    }).then(response => {\n      this.setState({\n        test: response.data\n      });\n      this.generateAccordion();\n    }, error => {\n      this.setState({\n        ttest: {\n          title: \"\",\n          test_questions: [{\n            title: \"\",\n            test_question_answers: []\n          }]\n        }\n      });\n      console.log(error);\n    });\n  }\n\n  generateAccordion() {\n    this.state.accordion = Array(this.state.test.test_questions.length).fill(false);\n  }\n\n  toggleAccordion(tab) {\n    const prevState = this.state.accordion;\n    const state = prevState.map((x, index) => tab === index ? !x : x);\n    this.setState({\n      accordion: state\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          backgroundColor: \"lightblue\",\n          margin: \"10px\",\n          padding: \"2px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: this.state.test.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          style: {\n            border: \"3px solid lightblue\",\n            padding: \"5px\"\n          },\n          children: this.state.test.test_questions.map((question, index) => /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                backgroundColor: \"whitesmoke\",\n                margin: \"10px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                style: {\n                  padding: \"3px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  hidden: !this.state.accordion[index],\n                  onClick: () => this.toggleAccordion(index),\n                  children: [question.title, /*#__PURE__*/_jsxDEV(\"i\", {\n                    style: {\n                      marginLeft: \"10px\"\n                    },\n                    class: \"fas fa-angle-up\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  hidden: this.state.accordion[index],\n                  onClick: () => this.toggleAccordion(index),\n                  children: [question.title, /*#__PURE__*/_jsxDEV(\"i\", {\n                    style: {\n                      marginLeft: \"10px\"\n                    },\n                    class: \"fas fa-angle-down\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 15\n                }, this), \"                      \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n                hidden: !this.state.accordion[index],\n                isOpen: this.state.accordion[index],\n                \"data-parent\": \"#accordion\",\n                id: index,\n                \"aria-labelledby\": index,\n                children: /*#__PURE__*/_jsxDEV(CardBody, {\n                  children: question.test_question_answers.map((answer, indexA) => /*#__PURE__*/_jsxDEV(Card, {\n                    style: {\n                      margin: \"5px\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      style: {\n                        marginLeft: \"20px\"\n                      },\n                      children: [indexA + 1, \". \", answer.title]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      type: \"checkbox\",\n                      value: answer.isCorrect\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TestsPage;","map":{"version":3,"sources":["/home/milica/Desktop/SOTIS/frontend/src/views/Pages/TakeTest.js"],"names":["React","Component","axios","Sidebar","InputItem","DropdownItem","Icon","Item","Logo","LogoText","Row","Col","Card","CardHeader","CardBody","FormGroup","Label","Form","Input","InputGroup","InputGroupAddon","InputGroupText","Button","Collapse","FormText","Dropdown","DropdownToggle","DropdownMenu","ListGroup","ListGroupItem","Modal","ModalBody","ModalFooter","ModalHeader","url","process","env","REACT_APP_DOMAIN","REACT_APP_PORT","TestsPage","constructor","props","state","accordion","test","title","test_questions","test_question_answers","getTest","bind","toggleAccordion","generateAccordion","componentDidMount","id","match","params","method","then","response","setState","data","error","ttest","console","log","Array","length","fill","tab","prevState","map","x","index","render","backgroundColor","margin","padding","border","question","marginLeft","answer","indexA","isCorrect"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,YAA7B,EAA2CC,IAA3C,EAAiDC,IAAjD,EAAuDC,IAAvD,EAA6DC,QAA7D,QAA6E,kBAA7E;AACA,SACEC,GADF,EACOC,GADP,EACYC,IADZ,EACkBC,UADlB,EAC8BC,QAD9B,EACwCC,SADxC,EACmDC,KADnD,EAC0DC,IAD1D,EACgEC,KADhE,EACuEC,UADvE,EACmFC,eADnF,EAEEC,cAFF,EAEkBC,MAFlB,EAE0BC,QAF1B,EAEoCC,QAFpC,EAE8CC,QAF9C,EAEwDC,cAFxD,EAEwEC,YAFxE,EAEsFC,SAFtF,EAEiGC,aAFjG,EAGEC,KAHF,EAGSC,SAHT,EAGoBC,WAHpB,EAGiCC,WAHjC,QAIO,YAJP;AAMA,MAAMC,GAAG,GAAIC,OAAO,CAACC,GAAR,CAAYC,gBAAb,GAAiC,GAAjC,GAAwCF,OAAO,CAACC,GAAR,CAAYE,cAApD,GAAsE,GAAlF;;AAEA,MAAMC,SAAN,SAAwBtC,SAAxB,CAAkC;AAChCuC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,IAAI,EAAE;AACFC,QAAAA,KAAK,EAAE,EADL;AAEFC,QAAAA,cAAc,EAAE,CAAC;AACbD,UAAAA,KAAK,EAAC,EADO;AAEbE,UAAAA,qBAAqB,EAAC;AAFT,SAAD;AAFd;AAFK,KAAb;AAWA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBD,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKE,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBF,IAAvB,CAA4B,IAA5B,CAAzB;AACD;;AAEDG,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,OAAL;AACD;;AAEDA,EAAAA,OAAO,GAAG;AACR,UAAM;AAAEK,MAAAA;AAAF,QAAS,KAAKZ,KAAL,CAAWa,KAAX,CAAiBC,MAAhC;AACArD,IAAAA,KAAK,CAAC;AACJsD,MAAAA,MAAM,EAAE,KADJ;AAEJtB,MAAAA,GAAG,EAAEA,GAAG,GAAG,OAAN,GAAgBmB;AAFjB,KAAD,CAAL,CAGGI,IAHH,CAGSC,QAAD,IAAc;AACpB,WAAKC,QAAL,CAAc;AAAEf,QAAAA,IAAI,EAAEc,QAAQ,CAACE;AAAjB,OAAd;AACA,WAAKT,iBAAL;AACD,KAND,EAMIU,KAAD,IAAW;AACV,WAAKF,QAAL,CAAc;AAACG,QAAAA,KAAK,EAAE;AAClBjB,UAAAA,KAAK,EAAE,EADW;AAElBC,UAAAA,cAAc,EAAE,CAAC;AACbD,YAAAA,KAAK,EAAC,EADO;AAEbE,YAAAA,qBAAqB,EAAC;AAFT,WAAD;AAFE;AAAR,OAAd;AAOFgB,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD,KAfD;AAgBD;;AAEDV,EAAAA,iBAAiB,GAAG;AAClB,SAAKT,KAAL,CAAWC,SAAX,GAAuBsB,KAAK,CAAE,KAAKvB,KAAL,CAAWE,IAAX,CAAgBE,cAAjB,CAAiCoB,MAAlC,CAAL,CAA+CC,IAA/C,CAAoD,KAApD,CAAvB;AACD;;AAEDjB,EAAAA,eAAe,CAACkB,GAAD,EAAM;AAEnB,UAAMC,SAAS,GAAG,KAAK3B,KAAL,CAAWC,SAA7B;AACA,UAAMD,KAAK,GAAG2B,SAAS,CAACC,GAAV,CAAc,CAACC,CAAD,EAAIC,KAAJ,KAAcJ,GAAG,KAAKI,KAAR,GAAgB,CAACD,CAAjB,GAAqBA,CAAjD,CAAd;AAEA,SAAKZ,QAAL,CAAc;AACZhB,MAAAA,SAAS,EAAED;AADC,KAAd;AAGD;;AAED+B,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,eAAe,EAAE,WAAnB;AAAgCC,UAAAA,MAAM,EAAE,MAAxC;AAAgDC,UAAAA,OAAO,EAAE;AAAzD,SAAb;AAAA,gCACE,QAAC,UAAD;AAAA,iCACE;AAAA,sBAAK,KAAKlC,KAAL,CAAWE,IAAX,CAAgBC;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAII,QAAC,QAAD;AAAU,UAAA,KAAK,EAAE;AAAEgC,YAAAA,MAAM,EAAE,qBAAV;AAAiCD,YAAAA,OAAO,EAAE;AAA1C,WAAjB;AAAA,oBACI,KAAKlC,KAAL,CAAWE,IAAX,CAAgBE,cAAjB,CAAiCwB,GAAjC,CAAqC,CAACQ,QAAD,EAAWN,KAAX,kBACpC,QAAC,GAAD;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AAAEE,gBAAAA,eAAe,EAAE,YAAnB;AAAiCC,gBAAAA,MAAM,EAAC;AAAxC,eAAb;AAAA,sCACE,QAAC,UAAD;AAAY,gBAAA,KAAK,EAAE;AAAEC,kBAAAA,OAAO,EAAE;AAAX,iBAAnB;AAAA,wCACA;AAAI,kBAAA,MAAM,EAAE,CAAC,KAAKlC,KAAL,CAAWC,SAAX,CAAqB6B,KAArB,CAAb;AAA0C,kBAAA,OAAO,EAAE,MAAM,KAAKtB,eAAL,CAAqBsB,KAArB,CAAzD;AAAA,6BAAwFM,QAAQ,CAACjC,KAAjG,eACN;AAAG,oBAAA,KAAK,EAAE;AAAEkC,sBAAAA,UAAU,EAAE;AAAd,qBAAV;AAAkC,oBAAA,KAAK,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,0BADM;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,eAIR;AAAI,kBAAA,MAAM,EAAE,KAAKrC,KAAL,CAAWC,SAAX,CAAqB6B,KAArB,CAAZ;AAAyC,kBAAA,OAAO,EAAE,MAAM,KAAKtB,eAAL,CAAqBsB,KAArB,CAAxD;AAAA,6BACGM,QAAQ,CAACjC,KADZ,eAEE;AAAG,oBAAA,KAAK,EAAE;AAAEkC,sBAAAA,UAAU,EAAE;AAAd,qBAAV;AAAkC,oBAAA,KAAK,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJQ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eASN,QAAC,QAAD;AAAU,gBAAA,MAAM,EAAE,CAAC,KAAKrC,KAAL,CAAWC,SAAX,CAAqB6B,KAArB,CAAnB;AAAgD,gBAAA,MAAM,EAAE,KAAK9B,KAAL,CAAWC,SAAX,CAAqB6B,KAArB,CAAxD;AAAqF,+BAAY,YAAjG;AAA8G,gBAAA,EAAE,EAAEA,KAAlH;AAAyH,mCAAiBA,KAA1I;AAAA,uCACQ,QAAC,QAAD;AAAA,4BACIM,QAAQ,CAAC/B,qBAAV,CAAiCuB,GAAjC,CAAqC,CAACU,MAAD,EAASC,MAAT,kBACpC,QAAC,IAAD;AAAM,oBAAA,KAAK,EAAE;AAAEN,sBAAAA,MAAM,EAAE;AAAV,qBAAb;AAAA,4CACI,QAAC,KAAD;AAAO,sBAAA,KAAK,EAAE;AAACI,wBAAAA,UAAU,EAAC;AAAZ,uBAAd;AAAA,iCAAoCE,MAAM,GAAG,CAA7C,QAAkDD,MAAM,CAACnC,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI,QAAC,KAAD;AAAO,sBAAA,IAAI,EAAC,UAAZ;AAAuB,sBAAA,KAAK,EAAEmC,MAAM,CAACE;AAArC;AAAA;AAAA;AAAA;AAAA,4BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BADD;AADH;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,sBATM;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADF;AAoCD;;AA9F+B;;AAiGlC,eAAe3C,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Sidebar, InputItem, DropdownItem, Icon, Item, Logo, LogoText } from 'react-sidebar-ui'\nimport {\n  Row, Col, Card, CardHeader, CardBody, FormGroup, Label, Form, Input, InputGroup, InputGroupAddon,\n  InputGroupText, Button, Collapse, FormText, Dropdown, DropdownToggle, DropdownMenu, ListGroup, ListGroupItem,\n  Modal, ModalBody, ModalFooter, ModalHeader\n} from \"reactstrap\";\n\nconst url = (process.env.REACT_APP_DOMAIN) + ':' + (process.env.REACT_APP_PORT) + '/';\n\nclass TestsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accordion: [],\n      test: {\n          title: \"\",\n          test_questions: [{\n              title:\"\",\n              test_question_answers:[]\n          }]\n      }\n    };\n\n    this.getTest = this.getTest.bind(this);\n    this.toggleAccordion = this.toggleAccordion.bind(this)\n    this.generateAccordion = this.generateAccordion.bind(this)\n  }\n\n  componentDidMount() {\n    this.getTest()\n  }\n\n  getTest() {\n    const { id } = this.props.match.params;\n    axios({\n      method: 'get',\n      url: url + 'test/' + id,\n    }).then((response) => {\n      this.setState({ test: response.data })\n      this.generateAccordion()\n    }, (error) => {\n        this.setState({ttest: {\n            title: \"\",\n            test_questions: [{\n                title:\"\",\n                test_question_answers:[]\n            }]\n        }})\n      console.log(error);\n    });\n  }\n\n  generateAccordion() {\n    this.state.accordion = Array((this.state.test.test_questions).length).fill(false)\n  }\n\n  toggleAccordion(tab) {\n\n    const prevState = this.state.accordion;\n    const state = prevState.map((x, index) => tab === index ? !x : x);\n\n    this.setState({\n      accordion: state,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n          <Card style={{ backgroundColor: \"lightblue\", margin: \"10px\", padding: \"2px\" }}>\n            <CardHeader>\n              <h1>{this.state.test.title}</h1>\n            </CardHeader>\n              <CardBody style={{ border: \"3px solid lightblue\", padding: \"5px\" }}>\n                {(this.state.test.test_questions).map((question, index) =>\n                  <Row>\n                    <Card style={{ backgroundColor: \"whitesmoke\", margin:\"10px\" }}>\n                      <CardHeader style={{ padding: \"3px\" }}>\n                      <h2 hidden={!this.state.accordion[index]} onClick={() => this.toggleAccordion(index)} >{question.title}\n                <i style={{ marginLeft: \"10px\" }} class=\"fas fa-angle-up\"></i>\n              </h2>\n              <h2 hidden={this.state.accordion[index]} onClick={() => this.toggleAccordion(index)}>\n                {question.title}\n                <i style={{ marginLeft: \"10px\" }} class=\"fas fa-angle-down\"></i>\n              </h2>                      </CardHeader>\n              <Collapse hidden={!this.state.accordion[index]} isOpen={this.state.accordion[index]} data-parent=\"#accordion\" id={index} aria-labelledby={index}>\n                      <CardBody>\n                        {(question.test_question_answers).map((answer, indexA) =>\n                          <Card style={{ margin: \"5px\" }}>\n                              <Label style={{marginLeft:\"20px\"}}>{indexA + 1}. {answer.title}</Label>\n                              <Input type=\"checkbox\" value={answer.isCorrect}\n                                     />\n                          </Card>\n                        )}\n                      </CardBody>\n                      </Collapse>\n                    </Card>\n                  </Row>\n                )}\n              </CardBody>\n          </Card>\n      </div>\n    );\n  }\n}\n\nexport default TestsPage;"]},"metadata":{},"sourceType":"module"}