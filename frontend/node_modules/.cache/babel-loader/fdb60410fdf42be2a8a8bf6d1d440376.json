{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/milica/Desktop/SOTIS/frontend/src/views/Pages/TestDone.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Sidebar, InputItem, DropdownItem, Icon, Item, Logo, LogoText } from 'react-sidebar-ui';\nimport { Row, Col, Card, CardHeader, CardBody, FormGroup, Label, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Button, Collapse, FormText, Dropdown, DropdownToggle, DropdownMenu, ListGroup, ListGroupItem, Modal, ModalBody, ModalFooter, ModalHeader, CardFooter } from \"reactstrap\";\nconst url = process.env.REACT_APP_DOMAIN + ':' + process.env.REACT_APP_PORT + '/';\n\nclass TestsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accordion: [],\n      testTakeAnswer: {\n        title: \"\",\n        test_questions: [{\n          title: \"\",\n          test_question_answers: []\n        }]\n      }\n    };\n    this.getTestTakeAnswer = this.getTestTakeAnswer.bind(this);\n    this.getTest = this.getTest.bind(this);\n  }\n\n  componentDidMount() {\n    this.getTest();\n  }\n\n  getTest() {\n    const {\n      id\n    } = this.props.match.params;\n    axios({\n      method: 'get',\n      url: url + 'test/' + id\n    }).then(response => {\n      this.setState({\n        test: response.data\n      });\n      this.generateAccordion();\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  getTestTakeAnswer() {\n    const {\n      id\n    } = this.props.match.params;\n    axios({\n      method: 'get',\n      url: url + 'test_take_answer/' + id\n    }).then(response => {\n      this.setState({\n        testTakeAnswer: response.data\n      }); // this.getTest()\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TestsPage;","map":{"version":3,"sources":["/home/milica/Desktop/SOTIS/frontend/src/views/Pages/TestDone.js"],"names":["React","Component","axios","Sidebar","InputItem","DropdownItem","Icon","Item","Logo","LogoText","Row","Col","Card","CardHeader","CardBody","FormGroup","Label","Form","Input","InputGroup","InputGroupAddon","InputGroupText","Button","Collapse","FormText","Dropdown","DropdownToggle","DropdownMenu","ListGroup","ListGroupItem","Modal","ModalBody","ModalFooter","ModalHeader","CardFooter","url","process","env","REACT_APP_DOMAIN","REACT_APP_PORT","TestsPage","constructor","props","state","accordion","testTakeAnswer","title","test_questions","test_question_answers","getTestTakeAnswer","bind","getTest","componentDidMount","id","match","params","method","then","response","setState","test","data","generateAccordion","error","console","log","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,YAA7B,EAA2CC,IAA3C,EAAiDC,IAAjD,EAAuDC,IAAvD,EAA6DC,QAA7D,QAA6E,kBAA7E;AACA,SACEC,GADF,EACOC,GADP,EACYC,IADZ,EACkBC,UADlB,EAC8BC,QAD9B,EACwCC,SADxC,EACmDC,KADnD,EAC0DC,IAD1D,EACgEC,KADhE,EACuEC,UADvE,EACmFC,eADnF,EAEEC,cAFF,EAEkBC,MAFlB,EAE0BC,QAF1B,EAEoCC,QAFpC,EAE8CC,QAF9C,EAEwDC,cAFxD,EAEwEC,YAFxE,EAEsFC,SAFtF,EAEiGC,aAFjG,EAGEC,KAHF,EAGSC,SAHT,EAGoBC,WAHpB,EAGiCC,WAHjC,EAG8CC,UAH9C,QAIO,YAJP;AAMA,MAAMC,GAAG,GAAIC,OAAO,CAACC,GAAR,CAAYC,gBAAb,GAAiC,GAAjC,GAAwCF,OAAO,CAACC,GAAR,CAAYE,cAApD,GAAsE,GAAlF;;AAEA,MAAMC,SAAN,SAAwBvC,SAAxB,CAAkC;AAChCwC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,cAAc,EAAE;AACZC,QAAAA,KAAK,EAAE,EADK;AAEZC,QAAAA,cAAc,EAAE,CAAC;AACbD,UAAAA,KAAK,EAAC,EADO;AAEbE,UAAAA,qBAAqB,EAAC;AAFT,SAAD;AAFJ;AAFL,KAAb;AAWA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAAf;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,SAAKD,OAAL;AACD;;AAEDA,EAAAA,OAAO,GAAG;AACR,UAAM;AAAEE,MAAAA;AAAF,QAAS,KAAKX,KAAL,CAAWY,KAAX,CAAiBC,MAAhC;AACArD,IAAAA,KAAK,CAAC;AACJsD,MAAAA,MAAM,EAAE,KADJ;AAEJrB,MAAAA,GAAG,EAAEA,GAAG,GAAG,OAAN,GAAgBkB;AAFjB,KAAD,CAAL,CAGGI,IAHH,CAGSC,QAAD,IAAc;AACpB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAEF,QAAQ,CAACG;AAAjB,OAAd;AACA,WAAKC,iBAAL;AACD,KAND,EAMIC,KAAD,IAAW;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KARD;AASD;;AAEDd,EAAAA,iBAAiB,GAAE;AACjB,UAAM;AAAEI,MAAAA;AAAF,QAAS,KAAKX,KAAL,CAAWY,KAAX,CAAiBC,MAAhC;AACArD,IAAAA,KAAK,CAAC;AACJsD,MAAAA,MAAM,EAAE,KADJ;AAEJrB,MAAAA,GAAG,EAAEA,GAAG,GAAG,mBAAN,GAA4BkB;AAF7B,KAAD,CAAL,CAGGI,IAHH,CAGSC,QAAD,IAAc;AACpB,WAAKC,QAAL,CAAc;AAAEd,QAAAA,cAAc,EAAEa,QAAQ,CAACG;AAA3B,OAAd,EADoB,CAErB;AACA,KAND,EAMIE,KAAD,IAAW;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KARD;AASD;;AAEDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAvD+B;;AA0DlC,eAAe1B,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Sidebar, InputItem, DropdownItem, Icon, Item, Logo, LogoText } from 'react-sidebar-ui'\nimport {\n  Row, Col, Card, CardHeader, CardBody, FormGroup, Label, Form, Input, InputGroup, InputGroupAddon,\n  InputGroupText, Button, Collapse, FormText, Dropdown, DropdownToggle, DropdownMenu, ListGroup, ListGroupItem,\n  Modal, ModalBody, ModalFooter, ModalHeader, CardFooter\n} from \"reactstrap\";\n\nconst url = (process.env.REACT_APP_DOMAIN) + ':' + (process.env.REACT_APP_PORT) + '/';\n\nclass TestsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accordion: [],\n      testTakeAnswer: {\n          title: \"\",\n          test_questions: [{\n              title:\"\",\n              test_question_answers:[]\n          }]\n      },\n    };\n\n    this.getTestTakeAnswer = this.getTestTakeAnswer.bind(this)\n    this.getTest = this.getTest.bind(this);\n  }\n\n  componentDidMount() {\n    this.getTest()\n  }\n\n  getTest() {\n    const { id } = this.props.match.params;\n    axios({\n      method: 'get',\n      url: url + 'test/' + id,\n    }).then((response) => {\n      this.setState({ test: response.data })\n      this.generateAccordion()\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  getTestTakeAnswer(){\n    const { id } = this.props.match.params;\n    axios({\n      method: 'get',\n      url: url + 'test_take_answer/' + id,\n    }).then((response) => {\n      this.setState({ testTakeAnswer: response.data })\n     // this.getTest()\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return (\n      <div>\n          \n          \n      </div>\n    );\n  }\n}\n\nexport default TestsPage;"]},"metadata":{},"sourceType":"module"}