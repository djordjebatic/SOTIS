{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/milica/Desktop/SOTIS/frontend/src/views/Pages/TestDone.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Sidebar, InputItem, DropdownItem, Icon, Item, Logo, LogoText } from 'react-sidebar-ui';\nimport { Button, Card, CardBody, CardHeader, Row, Table, Col } from 'reactstrap';\nconst url = process.env.REACT_APP_DOMAIN + ':' + process.env.REACT_APP_PORT + '/';\n\nclass TestsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      test: {\n        title: \"\",\n        test_questions: [{\n          title: \"\",\n          test_question_answers: []\n        }]\n      },\n      testTake: {\n        title: \"\",\n        test_questions: [{\n          title: \"\",\n          test_question_answers: []\n        }]\n      }\n    };\n    this.getTestTakeAnswer = this.getTestTake.bind(this);\n  }\n\n  componentDidMount() {\n    this.getTestTake();\n  }\n\n  getTestTake() {\n    const {\n      id\n    } = this.props.match.params;\n    axios({\n      method: 'get',\n      url: url + 'test_take/' + id\n    }).then(response => {\n      this.setState({\n        testTake: response.data.test_take,\n        test: response.data.test\n      });\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"whiteSmoke\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: this.state.test.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        responsive: true,\n        style: {\n          border: \"1px solid black\",\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Checkhed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Correct answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.test.test_questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [index, \". \", question.title]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 30\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Bodovi\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), question.test_question_answers.map((answer, indexA) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [indexA, \". \", answer.title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 32\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: answer.isCorrect\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 32\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 27\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TestsPage;","map":{"version":3,"sources":["/home/milica/Desktop/SOTIS/frontend/src/views/Pages/TestDone.js"],"names":["React","Component","axios","Sidebar","InputItem","DropdownItem","Icon","Item","Logo","LogoText","Button","Card","CardBody","CardHeader","Row","Table","Col","url","process","env","REACT_APP_DOMAIN","REACT_APP_PORT","TestsPage","constructor","props","state","test","title","test_questions","test_question_answers","testTake","getTestTakeAnswer","getTestTake","bind","componentDidMount","id","match","params","method","then","response","setState","data","test_take","error","console","log","render","backgroundColor","border","width","map","question","index","answer","indexA","isCorrect"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Sidebar, InputItem, DropdownItem, Icon, Item, Logo, LogoText } from 'react-sidebar-ui'\nimport {Button, Card, CardBody, CardHeader, Row, Table, Col } from 'reactstrap';\n\nconst url = (process.env.REACT_APP_DOMAIN) + ':' + (process.env.REACT_APP_PORT) + '/';\n\nclass TestsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      test: {\n        title: \"\",\n        test_questions: [{\n            title:\"\",\n            test_question_answers:[]\n        }]\n    },\n      testTake: {\n          title: \"\",\n          test_questions: [{\n              title:\"\",\n              test_question_answers:[]\n          }]\n      },\n    };\n\n    this.getTestTakeAnswer = this.getTestTake.bind(this)\n  }\n\n  componentDidMount() {\n    this.getTestTake()\n  }\n\n\n  getTestTake(){\n    const { id } = this.props.match.params;\n    axios({\n      method: 'get',\n      url: url + 'test_take/' + id,\n    }).then((response) => {\n      this.setState({ testTake: response.data.test_take, test:response.data.test })\n    }, (error) => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return (\n      <div style={{ backgroundColor: \"whiteSmoke\" }}>\n        <CardHeader>\n            <h2>{this.state.test.title}</h2>\n        </CardHeader>\n          <Table responsive style={{border:\"1px solid black\",   width: \"100%\"}}>\n          <thead >\n            <th >Question</th>            \n            <th>Answer</th>\n            <th>Checkhed</th>\n            <th >Correct answer</th>\n            <th >Score</th>\n          </thead>\n          <tbody>\n          {(this.state.test.test_questions).map((question, index) =>\n          <div>\n                  <tr>\n                    <td><h3>{index}. {question.title}</h3></td>\n                    <td></td>\n                    <td></td><td></td>\n                    <td>Bodovi</td>\n                  </tr>\n                  {(question.test_question_answers).map((answer, indexA) =>\n                          <tr>\n                          <td></td>\n                          <td >{indexA}. {answer.title}</td>\n                          <td> <input type=\"checkbox\" checked={true}></input></td>\n                          <td> <input type=\"checkbox\" checked={answer.isCorrect}></input></td>\n                          <td>1</td>\n                        </tr>\n                        )}\n                  </div>\n                )}\n                </tbody>\n            </Table>\n      </div>\n    );\n  }\n}\n\nexport default TestsPage;"]},"metadata":{},"sourceType":"module"}