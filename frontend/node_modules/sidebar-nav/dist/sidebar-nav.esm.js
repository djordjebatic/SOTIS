(function(){ if(typeof document !== 'undefined'){ var head=document.head||document.getElementsByTagName('head')[0], style=document.createElement('style'), css=" .fade-enter-active, .fade-leave-active { transition: opacity .5s; } .fade-enter, .fade-leave-to /* .fade-leave-active below version 2.1.8 */ { opacity: 0; } .sidebar { position:fixed; transition:transform 500ms; z-index:100; min-height:80px; min-width:36px; } .sidebar.left { left:0; border-radius: 0 5px 5px 0; box-shadow: 0.2rem 0.2rem 0.5rem rgba(0, 0, 0, 0.15) !important; } .sidebar.right { border-radius: 5px 0 0 5px; box-shadow: -0.2rem 0.2rem 0.5rem rgba(0, 0, 0, 0.15) !important; right: 0; } .sidebar.left.collapsed { left:-36px; } .sidebar.right.collapsed { right:-36px; } .sidebar.collapsed:hover { transform:translatex(36px); } .sidebar.right.collapsed:hover { transform:translatex(-36px); } .handle { position:absolute; float:left; top: 20px; width: 10px; border:none; border-radius: 0 5px 5px 0; box-shadow: 0.2rem 0.2rem 0.5rem rgba(0, 0, 0, 0.15) !important; cursor:pointer; } .handle.left { left: 100%; border-radius: 0 5px 5px 0; box-shadow: 0.2rem 0.2rem 0.5rem rgba(0, 0, 0, 0.15) !important; } .handle.right { right: 100%; border-radius: 5px 0 0 5px; box-shadow: -0.2rem 0.2rem 0.5rem rgba(0, 0, 0, 0.15) !important; } .sidebar-items { top: 0; position:relative; padding-left:0; list-style:none; margin-top:0; margin-bottom:0; } .sidebar-items > li { padding: 4px; border-radius: 5px; margin:5px; } .handle-left { left: 2px; } .handle-middle { left: 50%; } .handle-right { left: calc(100% - 3px); } .handle-left, .handle-middle, .handle-right { position: absolute; top: 20%; width: 1px; height: 60%; background-color: #aaa; transition:background 200ms; } .handle:hover > .handle-left, .handle:hover > .handle-right, .handle:hover > .handle-middle { background: #FFF; } .sidebar-items > li:not(.disabled):hover { background: linear-gradient(to bottom, #4f8ebf 0%, #66a6d6 100%); box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.15) !important; } .sidebar-items > li > a { text-decoration:none; } .sidebar-items > .disabled > a { cursor:default; } "; style.type='text/css'; if (style.styleSheet){ style.styleSheet.cssText = css; } else { style.appendChild(document.createTextNode(css)); } head.appendChild(style); } })();


































var component = {render: function(){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('nav',{staticClass:"sidebar",class:_vm.sidebarAlignment,style:({ background: _vm.sidebarColor, top: _vm.sidebarTop })},[_c('button',{staticClass:"handle",class:_vm.alignmentClass,style:({ background: _vm.sidebarColor, height: _vm.handleHeight }),on:{"click":function($event){_vm.collapsed = !_vm.collapsed;}}},[_c('span',{staticClass:"handle-left"}),_vm._v(" "),_c('span',{staticClass:"handle-middle"}),_vm._v(" "),_c('span',{staticClass:"handle-right"})]),_vm._v(" "),_c('ul',{staticClass:"sidebar-items"},_vm._l((_vm.menu),function(menuitem){return _c('li',[_c('a',{style:(_vm.iconColor(!menuitem.disabled)),attrs:{"href":menuitem.link,"title":menuitem.name}},[_c('i',{class:menuitem.icon}),_vm._v(" "),_c('transition',{attrs:{"name":"fade"}},[(!_vm.collapsed)?_c('span',{domProps:{"textContent":_vm._s(menuitem.name)}}):_vm._e()])],1)])}))])},staticRenderFns: [],
  data: function data() {
    return {
      collapsed: true,
    }
  },
  computed: {
    sidebarAlignment: function sidebarAlignment() {
      return {
        collapsed: this.collapsed,
        left: this.side !== 'right',
        right: this.side === 'right'
      };
    },
    alignmentClass: function alignmentClass() {
      return (this.side === 'right') ? this.side:'left';
    }
  },

  methods: {
    iconColor: function iconColor(active) {
      if (active) {
        return {
          color: this.defaultIconColor
        };
      }
      return {
        color: this.disabledIconColor
      };
    }
  },
  props: {
    menu:null,
    side: {
      type:String,
      default: "left"
    },
    defaultIconColor: {
      type: String,
      default: "#fff"
    },
    disabledIconColor: {
      type: String,
      default: "#365899"
    },
    sidebarColor: {
      type: String,
      default: "#4267b2"
    },
    sidebarTop: {
      type: String,
      default: "30px"
    },
    handleHeight: {
      type: String,
      default: "40px"
    }
  }
};

// Import vue component

// Declare install function executed by Vue.use()
function install(Vue) {
	if (install.installed) { return; }

	install.installed = true;
	Vue.component('SidebarNav', component);
}

// Create module definition for Vue.use()
var plugin = {
	install: install,
};

// Auto-install when vue is found (eg. in browser via <script> tag)
var GlobalVue = null;

if (typeof window !== 'undefined') {
	GlobalVue = window.Vue;
} else if (typeof global !== 'undefined') {
	GlobalVue = global.Vue;
}

if (GlobalVue) {
	GlobalVue.use(plugin);
}

export default component;
export { install };
